app.directive('deviceLayout', ['myAjaxData', '$ocLazyLoad', '$timeout', (myAjaxData, $ocLazyLoad, $timeout) => ({
    restrict: 'E',
    replace: !0,
    template: `
    <div class="ng-clock">
        <div style="margin-left: {{winWidth / 2 - 50 - 225}}px;">
            <ul class="nav navbar-nav m-r-xxl" style="margin-right: 0;">
                <a ng-show="!status.statusAll" class="btn no-shadow navbar-btn" ng-click="changeStatus('statusAll');">
                    <i class="fa fa-circle-o" style="color: #fff" />
                    <span>全选</span>
                </a>
                <a ng-show="status.statusAll" class="btn no-shadow navbar-btn" ng-click="changeStatus('statusAll');">
                    <i class="fa fa-check-circle" style="color: #fff" />
                    <span>全选</span>
                </a>
            </ul>
            <ul class="nav navbar-nav m-r-xxl" style="margin-right: 0;">
                <a class="btn no-shadow navbar-btn" ng-click="changeStatus('status1');">
                    <i ng-show="!status.status1" class="fa fa-circle-o" style="color: #3fad22;" />
                    <i ng-show="status.status1" class="fa fa-check-circle-o" style="color: #3fad22;" />
                    <span>正常</span>
                </a>
                <a class="btn no-shadow navbar-btn" ng-click="changeStatus('status2');">
                    <i ng-show="!status.status2" class="fa fa-circle-o" style="color: #db412f;" />
                    <i ng-show="status.status2" class="fa fa-check-circle-o" style="color: #db412f;" />
                    <span>故障</span>
                </a>
                <a class="btn no-shadow navbar-btn" ng-click="changeStatus('status3');">
                    <i ng-show="!status.status3" class="fa fa-circle-o" style="color: #f90;" />
                    <i ng-show="status.status3" class="fa fa-check-circle-o" style="color: #f90;" />
                    <span>报警</span>
                </a>
                <a class="btn no-shadow navbar-btn" ng-click="changeStatus('status4');">
                    <i ng-show="!status.status4" class="fa fa-circle-o" style="color: #999;" />
                    <i ng-show="status.status4" class="fa fa-check-circle-o" style="color: #999;" />
                    <span>中断</span>
                </a>
                <a class="btn no-shadow navbar-btn" ng-click="changeStatus('status5');">
                    <i ng-show="!status.status5" class="fa fa-circle" style="color: #ccc;" />
                    <i ng-show="status.status5" class="fa fa-check-circle" style="color: #ccc;" />
                    <span>阴影遮挡</span>
                </a>
            </ul>
        </div>
        <div class="clearfix"></div>
        <div style="margin: 0 20px;">
            <div ng-if="!rtmSingleStationComm.res" style="margin-bottom: 0;" class="alert alert-danger" role="alert">正在加载数据。请等待...</div>
            <div ng-if="rtmSingleStationComm.res.comm === null" style="margin-bottom: 0;" class="alert alert-danger" role="alert">返回数据异常！</div>
            <div ng-if="rtmSingleStationComm.res.comm === 1" style="margin-bottom: 0;" class="alert alert-danger" role="alert">
                <span>通讯中断故障！已中断</span>
                <span ng-bind="rtmSingleStationComm.res.commInterruptTime"></span>，最后更新于
                <span ng-bind="rtmSingleStationComm.res.utime | date:'yyyy-MM-dd HH:mm:ss'"></span>
            </div>
            <div ng-if="rtmSingleStationComm.res.comm === 2" style="margin-bottom: 0;" class="alert alert-info" role="alert">设备初始化，未接收到任何数据。请等待...</div>
        </div>
        <div id="deviceLayout" class="clearfix"></div>
        <div ng-include="'tpl/enrichment/components/equipmentPopUp/entrance.html'"></div>
    </div>`,
    scope: !1,
    link($scope, $element, $attrs) {
        class Root extends React.Component {
            constructor(props) {
                super(props);
                this.getData = this.getData.bind(this);
                this.bindData = this.bindData.bind(this);
                this.bindEvents = this.bindEvents.bind(this);
                this.dataFilter = this.dataFilter.bind(this);
                this.toggleHover = this.toggleHover.bind(this);
                this.setData = this.setData.bind(this);
                this.state = {
                    data: $scope.getDeviceLayout.res || [],
                    status: $scope.status,
                    hover: {},
                    loop: true
                };
                this.bindData();
            }

            getChildContext() {
                return {
                    status: this.state.status,
                    dblClick: $scope.dblclick
                };
            }

            componentDidMount() {
                this.bindEvents();
                this.timer = setInterval(() => this.getData(), 10 * 1000);
                $scope.$on('$destroy', () => {
                    $scope.$off("switchPowerCallback", this.switchPowerCallback);
                    clearInterval(this.timer);
                    this.setState({ data: null, loop: false })
                });
            }

            switchPowerCallback() {
                this.setState({ data: [], loop: false });
                this.getData(true);
            }

            bindEvents() {
                $scope.changeStatus = statu => {
                    $scope.status[statu] = !$scope.status[statu];
                    if (statu === 'statusAll') {
                        Object.keys($scope.status).forEach(v => $scope.status[v] = $scope.status[statu]);
                        $scope.status.status5 = false;
                    } else {
                        const { statusAll, status5, ...other } = $scope.status;
                        if (statu === 'status5') {
                            Object.keys(other).forEach(v => {
                                $scope.status[v] = false;
                            });
                            $scope.status.statusAll = false;
                        } else {
                            $scope.status.status5 = false;
                            $scope.status.statusAll = Object.values(other).every(e => e);
                        }
                    }
                    this.dataFilter();
                };
            }

            dataFilter() {
                const { status } = $scope;
                this.setState({ status });
            }

            async bindData() {
                const data = await $scope.getDeviceLayout.promise;
                $scope.$on("switchPowerCallback", this.switchPowerCallback.bind(this));
                // this.switchPowerCallback();
                this.getData();
                this.setState({ data });
            }

            async getData(loop) {
                if ($scope.rtmSingleStationComm.isLoding || $scope.getDeviceLayout.isLoding) return;
                $scope.rtmSingleStationComm.getData({});
                const data = await $scope.getDeviceLayout.getData({});
                this.setData(data, loop);
            }

            async setData(data, loop) {
                if (loop) {
                    this.setState({ data, loop });
                } else if (!this.state.loop) {
                    return;
                } else {
                    this.setState({ data });
                }
            }

            toggleHover(e, ref, isHover) {
                this.setState({
                    hover: { [ref]: isHover }
                });
            }

            render() {
                const { Xb, Nbq, Hlx, Loading } = window.reactComponent;
                return this.state.data ? (
                    this.state.data[0]
                        ? this.state.data.map(v => (
                            <div
                                key={v.id}
                                className={v.deviceType === '1' ? "col-xs-4" : 'col-xs-3'}
                                onMouseEnter={e => this.toggleHover(e, v.deviceType + '' + v.id, true)}
                                onMouseLeave={e => this.toggleHover(e, v.deviceType + '' + v.id, false)}
                                style={{
                                    margin: ((this.state.status.status5 &&
                                        !this.state.status.status1 &&
                                        !this.state.status.status2 &&
                                        !this.state.status.status3 &&
                                        !this.state.status.status4) ?
                                        '0' : '10px 0')
                                }}>

                                {v.deviceType === '1' ? <Xb
                                    hover={this.state.hover[v.deviceType + '' + v.id]}
                                    data={v} /> : null}

                                {v.deviceType === '2' ? <Nbq
                                    hover={this.state.hover[v.deviceType + '' + v.id]}
                                    data={v} /> : null}

                                {v.deviceType === '3' ? <Hlx
                                    hover={this.state.hover[v.deviceType + '' + v.id]}
                                    data={v} /> : null}
                            </div>
                        )) : <Loading />
                ) : null;
            }
        };
        Root.childContextTypes = {
            status: PropTypes.object,
            dblClick: PropTypes.func
        };

        $timeout(() => {
            ReactDOM.render(
                <Root />,
                document.getElementById('deviceLayout')
            );
            $('.ng-clock').removeClass('ng-clock');
        }, 0);
    },
    controller($scope) {
        // 所有状态  默认全选
        $scope.status = {
            status1: true,
            status2: true,
            status3: true,
            status4: true,
            status5: false,
            statusAll: true,
        };



        //双击事件
        $scope.dblclick = function (pstationid, deviceId, deviceSerialNnumber, deviceTypeNow, hasJB) {
            // const res = { deviceSerialNnumber, deviceId, pstationid, deviceTypeNow, hasJB };
            $scope.$broadcast("equipmentPopUp", {
                stid: pstationid,
                eqid: deviceSerialNnumber
            });
            $scope.$apply();
            return false;
        };

        
    }
})])