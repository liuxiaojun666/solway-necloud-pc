app.directive('endDateWarning', ['$ocLazyLoad', '$http', ($ocLazyLoad, $http) => ({
    restrict: 'E',
    transclude: !0,
    replace: !0,
    scope: {
       
    },
    templateUrl: 'tpl/blocks/endDateWarningModel.html',
    link($scope, $element) {
      
        $scope.showNoticeAlert = false;//默认弹框不显示
        const getNewRoleEndDate = () =>{
            $http({
                method: "GET",
                url: window.interface['GETserviceAgreement'],
                params: {}
            }).success(function (result) {

                if (result.body && result.body.length) {
                    changeRoleIdsValue();
                    $scope.noticeList = result.body;
                    $scope.showNoticeAlert = true;
                }
                
            });
        }
        
        const changeRoleIdsValue = () =>{
            let storage = JSON.parse(localStorage['roleIds']);
            for(let i=0;i<storage.length;i++){
                if ($scope.currentRoleID == storage[i].roleId){
                    storage[i].defineVal = 1;
                }
            }

            localStorage['roleIds'] = JSON.stringify(storage);
        }
       
        const getRoleData = () =>{
            $http({
                method: "GET",
                url: window.interface['GETroleListForPC']
            }).success(function (res) {
                $scope.rolelist = res.rolelist;	
                $scope.currentRoleID = res.currentRole;

                //将当前用户的所有角色存入。（默认首次值均为0，若当前角色协议有过期项，值变为1，下次切换，若为1，则不再提醒）
                //先判断是否已经存入
                if (localStorage['roleIds'] == undefined){
                    const roleIdsArr = []
                    for (let i = 0, list = $scope.rolelist; i < list.length; i++) {
                        roleIdsArr.push({ roleId: list[i].roleId, defineVal: 0 })
                    }
                    localStorage['roleIds'] = JSON.stringify(roleIdsArr);
                    getNewRoleEndDate();
                }else{
                    let storage = JSON.parse(localStorage['roleIds']);
                    for(let i=0;i<storage.length;i++){
                        if ($scope.currentRoleID == storage[i].roleId && !storage[i].defineVal){
                            getNewRoleEndDate();
                            break;
                        }
                    }
                }
                
                
            });
        }

        getRoleData();
     
        $scope.aluso = () =>{
            $scope.showNoticeAlert = false;
        }
    }
})]).directive('slideDown', ['$ocLazyLoad', '$http', '$state', '$timeout', ($ocLazyLoad, $http, $state, $timeout) => ({
    restrict: 'E',
    transclude: !0,
    replace: !0,
    scope: {

    },
    templateUrl: 'tpl/blocks/indexPageSlideDown.html',
    link($scope, $element) {

        $scope.goChildrenPage = type =>{
            if ($state.current.name == 'power-index171024'){
                $http({
                    method: "GET",
                    url: window.baseUrl + "/UserAuthHandle/setStcls.htm",
                    // url: window.baseUrl+"/UserAuthHandle/setSTClass.htm",
                    params: {
                    }
                }).success(function (res) {
                    $state.go(type);
                });
            }else{
                $state.go(type);
            }
        }

        //鼠标悬浮0.5s页面头部，出现下拉页面
        let timer = null;
        const setMainHeight = () =>{
            let wHeight = $(window).height();
            let bigMargin = 130,smallMargin = 90;
            if(wHeight>700){
                $(".module-list").css({ "height": (wHeight - bigMargin * 2), 'marginTop': (bigMargin-90)})
            }else{
                $(".module-list").css({ "height": (wHeight - smallMargin * 2), 'marginTop': (smallMargin - 90)})
            }
        }

        setMainHeight()

        $(window).resize(() => {
            setMainHeight()            
        })
        
        $timeout(()=>{
            $(".hover-header-con").hover(() => {
                if (localStorage['monitoringSummary'] ? false : true) return;
                timer = setTimeout(() => {
                    $(".systems-page").slideDown();
                }, 500);
            }, () => {
                if (timer) clearTimeout(timer);
            });
        },0)
        
        $(".systems-page").click(() => {
            $(".systems-page").slideUp();
        });

        $(".module-item").hover(function(){
            $(this).find(".line-green-short").addClass('arrow-move');
        },function(){
            $(this).find(".line-green-short").removeClass('arrow-move');
        })
           
    }
})])
