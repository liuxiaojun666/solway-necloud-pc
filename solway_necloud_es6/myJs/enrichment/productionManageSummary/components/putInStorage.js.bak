ajaxData(
    {
        // 库房列表
        opFittingsRoomSelectByCondition: {
            name: 'GETopFittingsRoomSelectByCondition',
            data: {},
            later: true,
        },
        opFittingsCategorySelectByCondition: {
            name: 'GETopFittingsCategorySelectByCondition',
            later: true,
            data: {}
        },
        opFittingsDictSelectCtg1: {
            name: 'GETopFittingsDictSelectCtg1',
            later: true,
            data: {},
        },
        opFittingsDictSelectCtg2: {
            name: 'GETopFittingsDictSelectCtg2',
            later: true,
            data: {},
        },
        // 设备型号列表
        opFittingsDictSelectCurrData: {
            name: 'GETopFittingsDictSelectCurrData',
            data: {},
            later: true
        },
        // 批量入库模板上传
        opFittingsDictImportTemplate: {
            name: 'opFittingsDictImportTemplate',
            data: {},
            later: true,
            sameTimeOnce: true
        },
        // 备件编号校验
        opFittingsDictRoomValidFsn: {
            name: 'GETopFittingsDictRoomValidFsn',
            data: {},
            later: true
        },
        // 入库 创建
        opWorkFittingsInCreate: {
            name: 'opWorkFittingsInCreate',
            data: {},
            later: true,
            sameTimeOnce: true
        },
        // 入库清单
        fittingsInGoods: {
            name: 'GETfittingsInFoods',
            data: {},
            later: true
        },
    }, {
        __serviceName__: 'themePutInStorageService'
    }
)('themePutInStorageCtrl', ['$scope', 'themePutInStorageService', 'toaster', '$ocLazyLoad'], ($scope, myAjaxData, toaster, $ocLazyLoad) => {

    
    
    $scope.$on('popUp', (event, obj) => {
        const {tabIndex} = $scope;
        if (tabIndex !== 1) return;
        $scope.opFittingsRoomSelectByCondition.getData({ isMe: 1 });
        $scope.opFittingsDictSelectCurrData.getData().then(res => $scope.opFittingsDictSelectCurrData._res = res);
        $scope.opFittingsCategorySelectByCondition.getData().then(res => $scope.opFittingsCategorySelectByCondition._res = res);
        $scope.opFittingsDictSelectCtg1.getData().then(res => $scope.opFittingsDictSelectCtg1._res = res);
        $scope.opFittingsDictSelectCtg2.getData().then(res => $scope.opFittingsDictSelectCtg2._res = res);
        $scope.categoryId = '';
        $scope.ctg1 = '';
        $scope.ctg2 = '';
        $scope.down = true;

        $scope.createDate = (new Date).Format('yyyy-MM-dd');
        $scope.stationId = void 0;
        $scope.summary = void 0;
        $scope.sn = void 0;
        
        $scope.putList = [];
        $scope.fittingsInGoods.res = null;

        $scope.lookOver = obj ? true : false;
        obj && $scope.fittingsInGoods.getData({id: obj.id});
    });


    $scope.fittingsInGoods.subscribe(res => {
        $scope.createDate = (new Date(res.body.topic.createTime)).Format('yyyy-MM-dd');
        $scope.stationId = res.body.topic.stationId;
        $scope.summary = res.body.topic.summary;
        $scope.sn = res.body.topic.sn;
    });


    $scope.upload = async ele => {
        const res = await $scope.opFittingsDictImportTemplate.getData({ file: ele.files[0] });
        if (res.code !== 0) {
            toaster.pop('error', '', res.msg);
            return $scope.$apply();
        }
        ele.value = '';
        $scope.putList = $scope.putList.concat(res.body.map(v => ({
            fdId: v.id,
            num: v.num,
            fsn: v.fsn,
            pt: v.pt,
            position: v.position,
            // money: v.fpa.toFixed(2),
            edit: true,
            category: { ...$scope.opFittingsCategorySelectByCondition._res },
            ctg1: { ...$scope.opFittingsDictSelectCtg1._res },
            ctg2: { ...$scope.opFittingsDictSelectCtg2._res },
            sparePartsList: { ...$scope.opFittingsDictSelectCurrData._res }
        })));
        $scope.$apply();
    };


    $scope.insert = () => {
        // if ($scope.putList.some(v => v.edit)) return toaster.pop('info', '', '同时只能编辑一条');
        // $scope.opFittingsDictSelectCurrData.getData({ categoryId: '', ctg1: '', ctg2: '' })
        $scope.putList.unshift({ 
            edit: true, 
            num: 0, 
            fsn: '', 
            category: {...$scope.opFittingsCategorySelectByCondition._res},
            ctg1: {...$scope.opFittingsDictSelectCtg1._res},
            ctg2: {...$scope.opFittingsDictSelectCtg2._res},
            sparePartsList: {...$scope.opFittingsDictSelectCurrData._res}
        });
    };

    $scope.editRow = (obj) => {
        // if ($scope.putList.some(v => v.edit)) return toaster.pop('info', '', '同时只能编辑一条');
        obj.edit = true;
    };


    $scope.deleteItem = index => {
        $scope.putList.splice(index, 1);
    };


    $scope.computerMoney = (id, num, index) => {
        $scope.putList[index].money = ($scope.opFittingsDictSelectCurrData.res.body.filter(v => v.id == id)[0].fp * num).toFixed(2);
    };


    $scope.getPt = (id, index) => {
        $scope.putList[index].pt = (($scope.opFittingsDictSelectCurrData.res.body.find(v => v.id == id) || {}).pt);
    };


    $scope.rowCategoryChange = (categoryId, obj) => {
        $scope.opFittingsDictSelectCurrData.getData({ categoryId, ctg1: obj.ctg1.ctg1, ctg2: obj.ctg2.ctg2 }).then(res => obj.sparePartsList = res);
    };


    $scope.rowCtg1Change = (ctg1, obj) => {
        $scope.opFittingsDictSelectCtg2.getData({ ctg1 }).then(res => obj.ctg2 = res);
        $scope.opFittingsDictSelectCurrData.getData({ ctg1, categoryId: obj.category.id, ctg2: obj.ctg2.ctg2 }).then(res => obj.sparePartsList = res);
    };


    $scope.rowCtg2Change = (ctg2, obj) => {
        $scope.opFittingsDictSelectCurrData.getData({ ctg2, categoryId: obj.category.id, ctg1: obj.ctg1.ctg1 }).then(res => obj.sparePartsList = res);
    };


    $scope.opFittingsDictRoomValidFsn.beforGetData = (obj, index) => {
        if (!obj.fdId) return toaster.pop('error', '', '请选择备件');
        if (!obj.position) return toaster.pop('error', '', '库位必填');
        if (!obj.pt) {
            if (!obj.num) return toaster.pop('error', '', '填写数量');
            return obj.edit = false;
        }
        if (!obj.fsn) return toaster.pop('error', '', '备件编号必填');

        $scope.opFittingsDictRoomValidFsn.getData({
            fsn: obj.fsn
        }).then(res => {
            if (!res.body.flag) return toaster.pop('error', '', '备件编号已存在');
            obj.edit = false;
        });
    };


    $scope.submit = () => {

        const { stationId, sn, summary, putList} = $scope;

        if (!(stationId && sn)) return toaster.pop('error', '', '请检查入库单号、库房名称是否填写完整');

        if (!putList[0]) return toaster.pop('error', '', '至少入库一条数据');

        if (putList.some(v => v.edit)) return toaster.pop('error', '', '请结束编辑状态');

        if (putList.some(v => !(v.fdId && (v.num || v.fsn) && v.position))) return toaster.pop('error', '', '请删除或完成不完整记录');

        const goods = putList.map(v => {
            const fdPt = v.pt;
            delete v.edit;
            delete v.money;
            delete v.pt;
            delete v.ctg1;
            delete v.ctg2;
            delete v.category;
            delete v.sparePartsList;
            return { ...v, fdPt };
        });

        $scope.opWorkFittingsInCreate.getData({
            stationId, sn, summary, goods
        }).then(res => {
            if (res.code !== 0) return toaster.pop('error', '', res.msg);
            toaster.pop('success', '', '入库成功');
            $scope.down = false;
            $scope.diffGetData();
        });
    };

});