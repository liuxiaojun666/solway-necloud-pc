ajaxData(
    {
        // 设备型号列表
        opFittingsDictSelectCurrData: {
            name: 'GETopFittingsDictSelectCurrData',
            data: {}
        },
        // 批量入库模板上传
        opFittingsDictImportTemplate: {
            name: 'opFittingsDictImportTemplate',
            data: {},
            later: true,
            sameTimeOnce: true
        },
        // 入库 创建
        opWorkFittingsInCreate: {
            name: 'opWorkFittingsInCreate',
            data: {},
            later: true,
            sameTimeOnce: true
        },
        // 入库清单
        fittingsInGoods: {
            name: 'GETfittingsInFoods',
            data: {},
            later: true
        },
    }, {
        __serviceName__: 'themePutInStorageService'
    }
)('themePutInStorageCtrl', ['$scope', 'themePutInStorageService', 'toaster', '$ocLazyLoad'], ($scope, myAjaxData, toaster, $ocLazyLoad) => {

    
    
    $scope.$on('popUp', (event, obj) => {
        const {tabIndex} = $scope;
        if (tabIndex !== 1) return;
        $scope.down = true;

        $scope.createDate = (new Date).Format('yyyy-MM-dd');
        $scope.stationId = void 0;
        $scope.summary = void 0;
        $scope.sn = void 0;
        
        $scope.putList = [];
        $scope.fittingsInGoods.res = null;

        $scope.lookOver = obj ? true : false;
        obj && $scope.fittingsInGoods.getData({id: obj.id});
    });


    $scope.fittingsInGoods.subscribe(res => {
        $scope.createDate = (new Date(res.body.topic.createTime)).Format('yyyy-MM-dd');
        $scope.stationId = res.body.topic.stationId;
        $scope.summary = res.body.topic.summary;
        $scope.sn = res.body.topic.sn;
    });


    $scope.upload = async ele => {
        const res = await $scope.opFittingsDictImportTemplate.getData({ file: ele.files[0] });
        ele.value = '';
        $scope.putList = $scope.putList.concat(res.body.map(v => ({
            fdId: v.id,
            num: v.num,
            position: v.position,
            money: v.fpa.toFixed(2),
            edit: false
        })));
        $scope.$apply();
    };


    $scope.insert = () => {
        $scope.putList.unshift({edit: true, num: 1});
    };


    $scope.deleteItem = index => {
        $scope.putList.splice(index, 1);
    };


    $scope.computerMoney = (id, num, index) => {
        $scope.putList[index].money = ($scope.opFittingsDictSelectCurrData.res.body.filter(v => v.id == id)[0].fp * num).toFixed(2);
    };


    $scope.submit = () => {

        const { stationId, sn, summary, putList} = $scope;

        if (!(stationId && sn && summary)) return toaster.pop('error', '', '请检查入库单号、库房名称、备注是否填写完整');

        if (!putList[0]) return toaster.pop('error', '', '至少入库一条数据');

        if (putList.some(v => v.edit)) return toaster.pop('error', '', '请结束编辑状态');

        if (putList.some(v => !(v.fdId && v.num && v.position))) return toaster.pop('error', '', '请删除或完成不完整记录');

        const goods = putList.map(v => {
            delete v.edit;
            delete v.money;
            return v;
        });

        $scope.opWorkFittingsInCreate.getData({
            stationId, sn, summary, goods
        }).then(res => {
            if (res.code !== 0) return toaster.pop('error', '', res.msg);
            toaster.pop('success', '', '入库成功');
            $scope.down = false;
            $scope.diffGetData();
        });
    };

});