ajaxData(
    {
        opFittingsCategorySelectByCondition: {
            name: 'GETopFittingsCategorySelectByCondition',
            data: {}
        },
        opFittingsDictSelectCtg1: {
            name: 'GETopFittingsDictSelectCtg1',
            data: {},
        },
        opFittingsDictSelectCtg2: {
            name: 'GETopFittingsDictSelectCtg2',
            data: {},
        },
        opFittingsDictPage: {
            name: 'GETopFittingsDictPage',
            data: {},
            later: true
        },
        opFittingsDictUpdate: {
            name: 'opFittingsDictUpdate',
            data: {},
            later: true,
            sameTimeOnce: true
        },
        opFittingsDictDelete: {
            name: 'opFittingsDictDelete',
            data: {},
            later: true,
            sameTimeOnce: true
        },
        opFittingsDictSelectManuf: {
            name: 'GETopFittingsDictSelectManuf',
            data: {},
            later: true,
        },
        fileUploadUploadFile: {
            name: 'fileUploadUploadFile',
            data: {},
            later: true
        },
        fileUploadSelectFiles: {
            name: 'GETfileUploadSelectFiles',
            data: {},
            later: true
        },
    }, {
        __serviceName__: 'themeSparePartsService'
    }
)('themeSparePartsCtrl', ['$scope', 'themeSparePartsService', 'toaster', '$ocLazyLoad'], ($scope, myAjaxData, toaster, $ocLazyLoad) => {

    $scope.$on('popUp', (_event, _obj) => {
        $scope.opFittingsDictPage.reqDta = {
            keywords: '',
            ctg1: '',
            ctg2: '',
            categoryId: '',
        };
    });


    $scope.opFittingsDictSelectCtg2.subscribe(res => {
        $scope.opFittingsDictPage.reqDta.ctg2 = '';
        $scope.opFittingsDictPage.getData($scope.opFittingsDictPage.reqDta);
    });


    $scope.opFittingsDictSelectCtg1.blur = async () => {
        await myAjaxData.timeout(200);
        $scope.opFittingsDictSelectCtg1.slideDown = false;
        $scope.$apply();
    };


    $scope.opFittingsDictSelectCtg2.blur = async () => {
        await myAjaxData.timeout(200);
        $scope.opFittingsDictSelectCtg2.slideDown = false;
        $scope.$apply();
    };

    $scope.opFittingsDictSelectManuf.blur = async () => {
        await myAjaxData.timeout(200);
        $scope.opFittingsDictSelectManuf.slideDown = false;
        $scope.$apply();
    };

    $scope.opFittingsDictSelectCtg1.filter = 
    $scope.opFittingsDictSelectCtg2.filter = 
    $scope.opFittingsDictSelectManuf.filter = 
    (text = '', str = '') => str && str.includes(text);

    // 列表 分页
    $scope.opFittingsDictPage.column = [
        {
            title: '分类',
            dataIndex: 'categoryName',
            sort: true,
            align: 'left',
        },
        {
            title: '大类',
            dataIndex: 'ctg1',
            sort: true,
            align: 'left',
        },
        {
            title: '小类',
            dataIndex: 'ctg2',
            sort: true,
        },
        {
            title: '备件类型编号',
            dataIndex: 'code',
            sort: true,
            align: 'center'
        },
        {
            title: '备件名称',
            dataIndex: 'name',
            sort: true,
            align: 'left'
        },
        {
            title: '厂商',
            dataIndex: 'manuf',
            sort: true,
            width: '200px',
            align: 'left'
        },
        {
            title: '型号及规格',
            dataIndex: 'ft',
            sort: true,
            align: 'left'
        },
        {
            title: '单位',
            dataIndex: 'fu',
            sort: true,
            align: 'center'
        },
        // {
        //     title: '单价(元)',
        //     dataIndex: 'fp',
        //     sort: true,
        //     align: 'right'
        // },
        {
            title: '下限报警数量',
            dataIndex: 'numMin',
            align: 'right'
        },
        {
            title: '备注',
            dataIndex: 'remark',
            width: '200px'
        },
        {
            title: '操作',
            dataIndex: 'id',
            align: 'center',
            render(_text) {
                return `
                    <i style="color:#FF6262;font-size:20px;margin:0 5px;" class="iconfont icon-shanchu1"></i>
                    <i style="color:#29C6B0;font-size:20px;margin:0 5px;" class="iconfont icon-bianji-copy"></i>
                `;
            }
        }
    ];

    // 点击行  编辑 或 删除 监听
    $scope.opFittingsDictPage.trClick = (item, index, event) => {
        const str = event.target.className;
        if (str.includes('icon-shanchu1')) {
            $scope.opFittingsDictDelete.beforReq(item.id);
        } else if (str.includes('icon-bianji-copy')) {
            $scope.opFittingsDictUpdate.edit = true;
            const { ctg1, ctg2, code, name, manuf, ft, fu, fp, numMin, id, remark, attachments, categoryId, pt } = item;
            if (attachments) {
                $scope.fileUploadSelectFiles.getData({ ids: attachments, targetType: 'FITTING_FILE' }).then(res => {
                    $scope.fileUploadUploadFile.fileNames = res.body.map(v => v.originalFileName);
                });
            } else {
                $scope.fileUploadUploadFile.fileNames = [];
            }
            $scope.opFittingsDictUpdate.formData = { ctg1, ctg2, code, name, manuf, ft, fu, fp, numMin, id, remark, attachments, categoryId, pt };
            $scope.opFittingsDictSelectManuf.getData();
        }
    };

    // 保存更新  验证  提交
    $scope.opFittingsDictUpdate.beforGetData = () => {
        $ocLazyLoad.load([
            'theme/js/dist/components/formValidation.js' + stamp,
        ]).then(() => {
            const { formData } = $scope.opFittingsDictUpdate;
            if (!$solway.formValidation(formData, '.spareParts .partForm', toaster)) return;
            $scope.opFittingsDictUpdate.getData(formData);
        });
    };

    // 上传附件
    $scope.importFile = e => {
        $scope.fileUploadUploadFile.getData({
            file: e.files[0],
            targetType: 'FITTING_FILE'
        }).then(res => {
            const fileNames = ($scope.fileUploadUploadFile.fileNames || []);
            fileNames.push(res.body.originalFileName);
            $scope.fileUploadUploadFile.fileNames = [...fileNames];
            const attachments =  $scope.opFittingsDictUpdate.formData.attachments;
            $scope.opFittingsDictUpdate.formData.attachments = attachments ? attachments + ',' + res.body.id : res.body.id;
        });
    };

    // 删除附件
    $scope.fileUploadUploadFile.deleteFile = (event, index) => {
        $scope.fileUploadUploadFile.fileNames.splice(index, 1);
        const ids = $scope.opFittingsDictUpdate.formData.attachments.split(',');
        ids.splice(index, 1);
        $scope.opFittingsDictUpdate.formData.attachments = ids.join();
        event.preventDefault();
    };

    // 下载附件
    $scope.fileUploadUploadFile.downloadFile = (event, index) => {
        $ocLazyLoad.load(['theme/js/dist/components/downloadFile.js' + stamp]).then(res => {
            const { originalFileName: filename, filePath: url } = $scope.fileUploadSelectFiles.res.body[index];
            $solway.download({ url, filename });
        });
        event.preventDefault();
    };
    
    // 保存 更新 处理结果
    $scope.opFittingsDictUpdate.subscribe(res => {
        if (res.code !== 0) return toaster.pop('error', '', res.msg);
        toaster.pop('success', '', res.msg);
        $scope.opFittingsDictUpdate.edit = false;
        $scope.opFittingsDictPage.getData();
        $scope.opFittingsDictSelectCtg1.getData();
        $scope.opFittingsDictSelectCtg2.getData();
    });

    // 删除 备件
    $scope.opFittingsDictDelete.beforReq = id => {
        $ocLazyLoad.load(['theme/js/dist/components/confirm.js' + stamp])
            .then(() => $solway.confirm(
                { title: '删除备件', message: ' 确定删除该备件吗？' },
                () => $scope.opFittingsDictDelete.getData({ id }).then(res => {
                    if (res.code !== 0) return toaster.pop('error', '', res.msg);
                    toaster.pop('success', '', res.msg);
                    $scope.opFittingsDictPage.getData();
                })
            ));
    };

});