ajaxData({
    // 该角色 电站列表
    allSTListForPCBySession: {
        name: 'GETAllSTListForPCBySession',
        data: {}
    },
    // 消息列表
    getBaseMessageListNew: {
        name: 'GETBaseMessageListNew',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 电站id  查询  电站人员
    selectAllUserBySTID: {
        name: 'GETselectAllUserBySTID',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 模板列表
    opWorkTplTicketList: {
        name: 'GETopWorkTplTicketList',
        data: {},
    },
}, {
        __serviceName__: 'themeTwoVotesService'
    })('themeTwoVotesCtrl', ['$scope', 'themeTwoVotesService', 'actionRecord', '$ocLazyLoad'], ($scope, myAjaxData, historicalRecord, $ocLazyLoad) => {
        let spread, excelIO;
        // 初始化 scope
        $scope.initChildScope($scope, myAjaxData);

        // 主页面初始化完成 回调
        $scope.mainPageInitComplete = async () => {
            const {
                startDate: __sdate = new Date(Date.now() - 1000 * 60 * 60 * 24 * 365),
                endDate: __edate = new Date,
                pStationId,
                isHis = '0',
                handStatus = {
                    '00': true,
                    '01': true,
                    '02': true,
                    '03': true,
                    '04': true,
                    '05': true,
                },
                searchKey = '',
                isDefaultList = true,
            } = historicalRecord.get().themeTwoVotes || {};
            $scope.startDate = new Date(__sdate);
            $scope.startDate.showDate = '';
            $scope.endDate = new Date(__edate);
            $scope.endDate.showDate = '';
            $scope.pStationId = pStationId;
            $scope.isHis = isHis;
            $scope.handStatus = handStatus;
            $scope.searchKey = searchKey;
            $scope.isDefaultList = isDefaultList;
            await myAjaxData.timeout(0);
            $('.ng-clock').removeClass('ng-clock');
            $scope.initComplete = true;
            getBaseMessageList();
            $scope.$apply();
        };

        // 查询 弹出 事件
        $scope.searchPopUp = (e) => {
            e.stopPropagation();
            $scope.searchActive = true;
            $scope.batchCloseActive = false;
            // $scope.messagePopUp = false;
        };

        // 开票 弹出 事件
        $scope.makeInvoicePopUp = (name, tplUrl) => {
            $scope.makeInvoice = true;
            $scope.makeInvoiceName = name;
            $ocLazyLoad.load([
                'vendor/spreadjs/css/gc.spread.sheets.excel2013white.11.0.0.css',
                'vendor/spreadjs/scripts/gc.spread.sheets.all.11.0.0.min.js',
            ]).then(() => $ocLazyLoad.load([
                'vendor/spreadjs/scripts/gc.spread.excelio.11.0.0.min.js',
            ])).then(res => {
                const spreadNS = GC.Spread.Sheets;
                excelIO = new GC.Spread.Excel.IO();
                spread = spread || new spreadNS.Workbook(document.getElementById('ss2'), { tabStripRatio: 1 });
                $ocLazyLoad.load(['theme/js/dist/components/downloadFile.js' + stamp]).then(res => {
                    $solway.download({
                        url: tplUrl,
                        download: false,
                        blob: true,
                        callback: blob => {
                            if (!blob) return $scope.$apply();
                            excelIO.open(blob, function (spreadJson) {
                                if (spreadJson.version && spreadJson.sheets) {
                                    spread.unbindAll();
                                    spread.fromJSON(spreadJson);
                                } else {
                                    alert('无效的文件');
                                }
                            });
                        }
                    });
                });
            });
        };

        // 消息列表 接口 请求
        function getBaseMessageList() {
            const { startDate, endDate, pStationId, isHis, handStatus, searchKey } = $scope;
            $scope.column = [];
            $scope.getBaseMessageListNew.getData({
                startDate: startDate.showDate,
                endDate: endDate.showDate,
                pStationId: pStationId || '',
                searchKey: searchKey || '',
                isHis,
                handStatus: isHis == '0' ? Object.keys(handStatus).filter(v => handStatus[v]).join() : '03',
                pageIndex: 0,
                pageSize: 20
            });
        }
        // 列表 接口 数据 回调
        $scope.getBaseMessageListNew.getDataCallback = (success, res) => {
            if (!success) return;

            // 列表
            $scope.column = [
                {
                    title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;"></i></label>',
                    dataIndex: '',
                    width: '60px',
                    align: 'center',
                    checkboxName: 'batchprocessing',
                    render(text, record, index) {
                        return '<label class="i-checks m-b-none"><input data-identifies="' + record.busino + '_' + record.mid + '" name="batchprocessing" type="checkbox" /><i style="background:transparent;"></i></label>';
                    }
                },
                {
                    title: '电站名称',
                    dataIndex: 'stname',
                    width: '25%',
                    // sort: true,
                    render(text, item) {
                        return `
                    <span style="color: #3ae2ca;">${text || ''}</span>
                    ${(item.unread_num > 0) ? '<span class="unread" style="margin-left:0.5em;display:inline-block;width:15px;height:15px;text-align:center;line-height:15px;background:#ed5454;border-radius:50%;">' + item.unread_num + '</span>' : ''}`
                    }
                },
                {
                    title: '发布时间',
                    dataIndex: 'ct',
                    align: 'center',
                    // sort: true,
                    width: '15%',
                    render(text) {
                        return `<span>${new Date(text).Format('yyyy-MM-dd hh:mm:ss')}</span>`
                    }
                },
                {
                    title: '发布人',
                    dataIndex: 'musname_real',
                    // sort: true,
                },
                {
                    title: '处理人',
                    dataIndex: 'murname_real',
                    // sort: true,
                },
                {
                    title: '内容',
                    dataIndex: 'mc',
                    // sort: true,
                    width: '30%',
                },
                {
                    title: '状态',
                    dataIndex: 'mhs',
                    // sort: true,
                    render(text) {
                        switch (text) {
                            case '00':
                                return '待确认'
                            case '01':
                                return '待受理'
                            case '02':
                                return '待处理'
                            case '03':
                                return '已关闭'
                            case '04':
                                return '被确认'
                            case '05':
                                return '验收中'

                            default:
                                break;
                        }
                    }
                },
            ];
            $scope.closeMessagePopUp();
        };

        // 点击行
        $scope.trClick = async (item, index, e) => {
            e.stopPropagation();
            $scope.searchActive = false;
            $scope.batchCloseActive = false;
            $scope.closeMessagePopUp();
            await myAjaxData.timeout(100);
            $scope.messagePopUp = true;
            $scope.$broadcast("chatPanelObj", { ...item, isHis: [0, 1][$scope.isHis] });
            $('.my-table tbody tr').eq(index + 1).addClass('active').find('.unread').css('display', 'none');
            if (item.unread_num > 0) $scope.readBaseMessages.getData({ ids: item.mid });
            $scope.$apply();
        };

        // 关闭 聊天 消息 面板
        $scope.closeMessagePopUp = () => {
            $scope.messagePopUp = false;
            $('.my-table tbody tr').removeClass('active');
        };

        // 管理模板
        $scope.templateManagement = () => {
            $scope.templateManage = true;
            $scope.$broadcast('templateManagement');
        };

        // 页面 点击  影藏 弹出
        document.addEventListener('click', eventListen);
        function eventListen() {
            $scope.searchActive = false;
            $scope.batchCloseActive = false;
            $scope.showOpenVotes = false;
            // $scope.messagePopUp = false;
            $scope.$apply();
        }
        $scope.$on('$destroy', () => {
            document.removeEventListener('click', eventListen);
        });

    });