ajaxData({
    shareRepositoryList: {
        name: 'shareRepositoryList',
        data: {},
        later: true
    },
    shareRepositoryDelete: {
        name: 'GETshareRepositoryDelete',
        data: {},
        later: true
    },

}, {})('knowledgeCtrl', ['$scope', 'myAjaxData', 'actionRecord', '$timeout', 'toaster'], ($scope, myAjaxData, historicalRecord, $timeout, toaster) => {
    historicalRecord.init();// 历史记录 初始化
    $scope.beforeLoading = true;
    historyInitCallback();
    $scope.moduleName = '知识库管理';//当前页面名称

    // 当前页面行为记录初始化回调 获取行为记录
    async function historyInitCallback() {
        const historiData = historicalRecord.get(); //获取记录
        const { keywords } = historiData;

        $scope.keyWords = keywords;
        $scope.beforeLoading = false;
    };

    // Unix时间戳转换
    function FormatDateTime(UnixTime) {
        var date = new Date(UnixTime);
        var y = date.getFullYear();
        var m = date.getMonth() + 1;
        m = m < 10 ? ('0' + m) : m;
        var d = date.getDate();
        d = d < 10 ? ('0' + d) : d;
        var h = date.getHours();
        h = h < 10 ? ('0' + h) : h;
        var minute = date.getMinutes();
        var second = date.getSeconds();
        minute = minute < 10 ? ('0' + minute) : minute;
        second = second < 10 ? ('0' + second) : second;
        return y + '-' + m + '-' + d + ' ' + h + ':' + minute;
    };

    //获取表格列表数据
    $scope.getList = () => {
        $scope.shareRepositoryList.getData({
            pageIndex: 0,
            pageSize: 10,
            keywords: $scope.keyWords
        })
        historicalRecord.set({
            keywords: $scope.keyWords
        });
    }
    $scope.getList();

    $scope.shareRepositoryList.subscribe(res => {
        $scope.knowledgeList = res.data;
        $scope.knowledgeList.forEach(v => {
            v.releasetimeFormat = FormatDateTime(v.releasetime);
        });
    })

    //新增按钮
    $scope.newDiction = () => {
        $scope.newStationModel = true;
        $scope.$broadcast('broadAddStation', { 'id': '' });
    }

    //删除接口的 统一处理
    $scope.shareRepositoryDelete.subscribe(res => {
        if (res.key == 1) {
            toaster.pop('success', '', '删除成功');
            $scope.getList();
        } else {
            toaster.pop('error', '', '删除失败');
        }
    });

    //删除按钮
    const deleteDictionary = (id) => {
        $scope.shareRepositoryDelete.getData({ ids: id })
    }

    //批量删除
    $scope.batchDelete = () => {
        const ids = document.querySelectorAll('[name=batchprocessing]'):: [].filter(v => v.checked).map(v => v.dataset.identifies);
        if (ids.length == 0) {
            toaster.pop('error', '', '请至少选择一条');
        } else {
            $solway.confirm({ message: '确定删除吗？' }, () => {
                $scope.shareRepositoryDelete.getData({ ids: ids.join() });
            });
        }
    }

    //更多查询
    $scope.searchFlag = true;
    $scope.SearchText = '更多查询';

    $scope.moreSearch = () => {
        $scope.searchFlag = !$scope.searchFlag;
        $scope.SearchText = $scope.searchFlag ? '更多查询' : '收起';
    }

    //表格的表头设置
    $scope.column = [
        {
            title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;"></i></label>',
            dataIndex: '',
            width: '60px',
            align: 'center',
            checkboxName: 'batchprocessing',
            render(text, record, index) {
                return `<label class="i-checks m-b-none"><input data-identifies="${record.id}" name="batchprocessing" type="checkbox" /><i style="background:transparent;"></i></label>`;
            }
        },
        {
            title: '编号',
            dataIndex: 'id',
            align: 'center',
            sort: !0
        }, {
            title: '标题',
            width: '25%',
            dataIndex: 'title',
            sort: !0,
            align: 'center'
        }, {
            title: '发布时间',
            dataIndex: 'releasetimeFormat',
            align: 'center',
            sort: !0
        }, {
            title: '发布人',
            dataIndex: 'userName',
            align: 'center',
            sort: !0
        },
        {
            title: '操作',
            dataIndex: '',
            align: 'center',
            sort: !0,
            render: function () {
                function render(text, item, index) {
                    return `<div class="clearfix"><i class="iconfont edit icon-bianji-copy" style="font-size: 18px;color:#1ddabe;margin-right:15px;" title="编辑"></i><i class="iconfont edit icon-shanchu1" style="font-size: 18px;color:#ff8080;" title="删除"></i></div>`;
                }

                return render;
            }()
        }];

    //点击表格后的事件委托（设置按钮、删除按钮）
    $scope.trClick = (item, index, event) => {
        if (event.target.className.includes('icon-bianji-copy')) {
            $scope.newStationModel = true;
            $scope.$broadcast('broadAddStation', { 'id': item.id })
        } else if (event.target.className.includes('icon-shanchu1')) {
            $solway.confirm({ message: '确定删除此字典？' }, () => {
                deleteDictionary(item.id);
            });
        }
    }


    //取消 新增后的回调
    $scope.$on('cancelCallback', () => {
        $scope.newStationModel = false;
    });

    $scope.$on('addCallback', () => {
        $scope.newStationModel = false;
        $scope.getList();
    });

    //头部折叠框 显示
    $timeout(() => {
        $('.ng-clock').removeClass('ng-clock');
    }, 2000);
});