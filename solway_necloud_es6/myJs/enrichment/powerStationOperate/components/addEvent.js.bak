ajaxData({
    // 单个电站的基础信息
    StationRunStatusDetail: {
        name: 'GETStationRunStatusDetail',
        data: {},
        later: true
    },
    // 添加事件
    insertDeviceEventDetail: {
        name: 'insertDeviceEventDetail',
        data: {},
        later: true
    },
    // 电站事件列表
    DeviceEventDetail: {
        name: 'GETDeviceEventDetail',
        data: {},
        later: true
    },

}, {})('addEventCtrl', ['$scope', 'myAjaxData', 'actionRecord', '$timeout', 'toaster', '$interval', '$ocLazyLoad'], ($scope, myAjaxData, historicalRecord, $timeout, toaster, $interval, $ocLazyLoad) => {

    $ocLazyLoad.load([
        'vendor/bootstrap/css/bootstrap-datetimepicker.min.css',
        'vendor/bootstrap/js/bootstrap-datetimepicker.js'
    ]).then(() => $ocLazyLoad.load([
        'vendor/bootstrap/js/bootstrap-datetimepicker.zh-CN.js',
        'vendor/libs/moment.min.js'
    ])).then(() => {
        // var a= $(".form-wrap input").attr('id');
        // debugger
        // $("#"+a).datetimepicker({
        //     pickerPosition: "top-left"
        // })
    })

    // $(".datetimepicker").datetimepicker({
    //     pickerPosition : "top-left"
    // })

    // Unix时间戳转换
    function FormatDateTime(UnixTime) {
        var a = UnixTime.replace("/Date(", "").replace(")/", "");
        var date = new Date(parseInt(a));
        var y = date.getFullYear();
        var m = date.getMonth() + 1;
        m = m < 10 ? ('0' + m) : m;
        var d = date.getDate();
        d = d < 10 ? ('0' + d) : d;
        var h = date.getHours();
        h = h < 10 ? ('0' + h) : h;
        var minute = date.getMinutes();
        var second = date.getSeconds();
        minute = minute < 10 ? ('0' + minute) : minute;
        second = second < 10 ? ('0' + second) : second;
        return y + '-' + m + '-' + d + ' ' + h + ':' + minute;
    };

    //获取电站的item
    const commKey = {
        0: '正常',
        1: '中断',
        2: '初始化'
    }
    const statusKey = {
        '1': '故障',
        '2': '报警',
        '-99': '未知',
        '99': '正常'
    }
    const evShowKey = {
        0: '不显示',
        1: '显示'
    }
    const evStatusKey = {
        0: '关闭',
        1: '未关闭'
    }
    // 时间范围选择
    var date1 = new Date();
    var date2 = new Date(date1);
    date2.setDate(date1.getDate() + 365 * 10);
    $scope.GroupUser = {
        date: new Date,
        startDate: new Date,
        endDate: new Date,
        limitEndDate: date2
    }

    $scope.pageOpen = false;

    $scope.$on('powerStInfo', (event, v) => {
        $scope.formData = {
            show: 2,
            status: 2
        };
        $scope.pageOpen = true;
        $scope.GroupUser.startDate.showDate = '';
        $scope.GroupUser.endDate.showDate = '';

        $scope.stid = v.stid;
        $scope.StationRunStatusDetail.getData({
            stid: v.stid,
            stClass: v.stClass
        })

        $scope.StationRunStatusDetail.subscribe(res => {
            $scope.powerStInfo = res.body;
            $scope.powerStInfo.updateTimeFormat = FormatDateTime($scope.powerStInfo.updateTime.toString());
            $scope.powerStInfo.statusFormat = $scope.powerStInfo.Comm == 0 ? statusKey[$scope.powerStInfo.status] : '';
            $scope.powerStInfo.CommFormat = commKey[$scope.powerStInfo.Comm];
            $scope.powerStInfo.real_powerFormat = $scope.powerStInfo.real_power == 0 || !$scope.powerStInfo.real_power ? $scope.powerStInfo.real_power : $scope.powerStInfo.real_power.toFixed(10);
        });
        // 获取事件列表
        getList();
    })

    // 获取事件列表
    var getList = () => {
        $scope.DeviceEventDetail.getData({
            stid: $scope.stid,
            pageIndex: 0,
            pageSize: 50
        })

        $scope.DeviceEventDetail.subscribe(res => {
            $scope.powerStList = res.body.data;
            $scope.powerStList.forEach(item => {
                item.startDateFormat = item.startDate ? FormatDateTime(item.startDate.toString()) : '';
                item.endDateFormat = item.endDate ? FormatDateTime(item.endDate.toString()) : '';
                item.showFormat = evShowKey[item.show];
                item.statusFormat = evStatusKey[item.status];
            });
        });
    }

    // 保存按钮
    $scope.formData = {
        show: 2,
        status: 2
    }

    $scope.showData = [
        {
            k: 2, v: '请选择'
        },
        {
            k: 0, v: '不显示'
        },
        {
            k: 1, v: '显示'
        }
    ]

    $scope.statusData = [
        {
            k: 2, v: '请选择'
        },
        {
            k: 0, v: '关闭'
        },
        {
            k: 1, v: '未关闭'
        }
    ]

    //输入事件 确定按钮
    $scope.save = () => {
        if (!$solway.formValidation($scope.formData, '.addEvent', toaster)) return; //校验非空
        $scope.insertDeviceEventDetail.getData({
            stid: $scope.stid,
            title: $scope.formData.title,
            detail: $scope.formData.detail,
            startDate: $scope.GroupUser.startDate.showDate,
            endDate: $scope.GroupUser.endDate.showDate,
            show: $scope.formData.show,
            status: $scope.formData.status
        }).then(res => {
            if (res.code == 0) {
                toaster.pop('success', '', '添加成功');
                $scope.formData = {
                    show: 2,
                    status: 2
                }
                $scope.pageOpen = false;
                setTimeout(() => {
                    $scope.pageOpen = true;
                    $scope.GroupUser.startDate.showDate = '';
                    $scope.GroupUser.endDate.showDate = '';
                }, 0)
                getList();
            } else {
                toaster.pop('error', '', '添加失败');
            }
        })
    }

    //取消按钮
    $scope.cancel = () => {
        $scope.$emit('eventListHide');
        $scope.pageOpen = false;
    }

    //点击空白 - 关闭添加事件组件
    $scope.$on('closeAddEvent', (event, v) => {
        $scope.pageOpen = false;
    })
});