ajaxData({
    operationStatusDetail:{
        name:'GEToperationStatusDetail',
        data: {},
        later: true
    },
    devicesByDeviceType:{
        name: 'GETdevicesByDeviceType',
        data: {},
        later: true
    },
    saveStateAdjust:{
        name:'POSTsaveStateAdjust',
        data: {},
        later: true,
        onlyLatest: true,
        saveParam:false
    },
    
}, {
    __serviceName__: 'operationAdjustService',
})('operationAdjustCtrl', ['$scope', 'operationAdjustService', 'actionRecord','$timeout','$http','toaster'], ($scope, myAjaxData, historicalRecord,$timeout,$http,toaster) => {
    $scope.endDate = new Date(2099,12,12)
    $scope.nowDate = new Date();

    let regRatio = /^\d+(\.\d+)?(,\d+(\.\d+)?)*$/;

    $scope.$on('operationBroad',(e,v)=>{
        $scope.operationData = {};
        $scope.busino = v;
        detailDataEdited();
    });


    function detailDataEdited(){
        $scope.operationStatusDetail.getData({
            'id': $scope.busino
        }).then(msg=>{
            if(msg.body && msg.body.length){
                var data = msg.body[0];
                $scope.operationData = {
                    dayRate:data.dayRate,
                    deviceId: data.deviceId,
                    deviceType: data.deviceType,
                    deviceName: data.deviceName,
                    deviceTypeStr: data.deviceTypeStr,
                    startDate: data.startDate,
                    endDate:data.endDate,
                    eventExplain: data.eventExplain,
                    id: data.id,
                    lostElecSystem: data.lostElecSystem,
                    lostElecUser: data.lostElecUser,
                    realStatus: data.realStatus,
                    realStatusStr: data.realStatusStr,
                    referenceDevice: data.referenceDevice,
                    stClass:data.stClass,
                    stId: data.stId,
                    stName: data.stName,
                };

                if(data.id){
                    $scope.operationData['ids_deviceIds'] = data.id+'_'+data.deviceId;
                }else{
                    $scope.operationData['log_deviceIds'] = $scope.busino+'_'+data.deviceId;
                }

                $scope.operationData['startDate'] = data.startDate ? new Date(data.startDate) : new Date();
                if (!data.startDate) $scope.operationData['startDate'].showDate = '';

                $scope.operationData['endDate'] = data.endDate ? new Date(data.endDate) : new Date();
                if (!data.endDate) $scope.operationData['endDate'].showDate = '';
                deviceListData();
            }
        });
    }

    function deviceListData(){
        $scope.devicesByDeviceType.getData({
            'stIds': $scope.operationData.stId,
            'stClass':$scope.operationData.stClass,
            'deviceTypes':$scope.operationData.deviceType
        }).then(msg=>{
            $scope.stationdCT = {};
            $scope.stationCT = msg.body;
            for(var i=0;i<msg.body.length;i++){
                if(msg.body[i].deviceSerialNnumber == $scope.operationData.referenceDevice){
                    $scope.stationdCT.selected = msg.body[i];
                }
            }
        })
    }

    $scope.submitAdjust = () =>{
        $scope.operationData['referenceDevice'] = $scope.stationdCT.selected? $scope.stationdCT.selected.deviceSerialNnumber : '';
        if (!$solway.formValidation($scope.operationData, '.operationAdjust', toaster)) return;//校验非空

        if(!$scope.operationData.startDate.showDate){
            toaster.pop('error', '', '开始时间必选');
            return ;
        }

        if(!$scope.operationData.endDate.showDate){
            toaster.pop('error', '', '结束时间必选');
            return ;
        }

        if(!regRatio.test($scope.operationData.dayRate)){
            toaster.pop('error', '', '电量每日折算比例：格式不正确');
            return;
        }

        let dayNum = (Math.floor((new Date($scope.operationData['endDate']).getTime() + 28800000) / 86400000) - Math.floor((new Date($scope.operationData['startDate']).getTime() + 28800000) / 86400000)) + 1
        if($scope.operationData.dayRate.split(',').length != dayNum){
            toaster.pop('error', '', '电量每日折算比例：跟所选日期天数不对应');
            return;
        }

        $scope.operationData['startDate'] = $scope.operationData.startDate.showDate;
        $scope.operationData['endDate'] = $scope.operationData.endDate.showDate;

        $scope.saveStateAdjust.getData($scope.operationData).then(res=>{
            if(res.code == 0){
                toaster.pop('success', '',res.msg?res.msg: '修改成功');
                $scope.$emit('operationCallback',true);
            }else{
                toaster.pop('error', '', '修改失败');
            }
        }); 
    }
    // 销毁 事件
    $scope.$on('$destroy', () => {
    });
});