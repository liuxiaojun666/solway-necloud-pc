ajaxData({},{
    __serviceName__: 'themeProfessionService'
})('themeProfessionCtrl', ['$scope', 'themeProfessionService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    // 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { hello } = historicalRecord.get().themeProfession || {};
        $('.ng-clock').removeClass('ng-clock');
        await myAjaxData.timeout(0);
        $scope.initComplete = true;
        // await $scope.diffGetData();
        $scope.$apply();
    };

    // 查询 弹出 事件
    $scope.searchPopUp = (e) => {
        e.stopPropagation();
        $scope.searchActive = true;
        $scope.batchCloseActive = false;
    };
    
    // 批量标记关闭 弹出 事件
    $scope.batchClosePopUp = (e) => {
        e.stopPropagation();
        $scope.batchCloseActive = true;
        $scope.searchActive = false;
    };

    document.addEventListener('click', eventListen);
    function eventListen() {
        $scope.searchActive = false;
        $scope.batchCloseActive = false;
        $scope.$apply();
    }
    $scope.$on('$destroy', () => {
        document.removeEventListener('click', eventListen);
    });

    // 列表
    $scope.column = [
        {
            title: '<label class="i-checks m-b-none"><input type="checkbox" checked><i style="background:#244470;"></i></label>',
            dataIndex: '',
            width: '60px',
            align: 'center',
            checkboxName: 'batchprocessing',
            render: function () {
                function render(text, record, index) {
                    return '<label class="i-checks m-b-none"><input data-identifies="' + record.busino + '_' + record.mid + '" name="batchprocessing" type="checkbox" checked /><i style="background:#244470;"></i></label>';
                }

                return render;
            }()
        },
        {
            title: '电站名称',
            dataIndex: '',
            width: '25%',
            sort: true,
            render(text) {
                return `<span>马鞍石蒙牛</span>`
            }
        },
        {
            title: '发布时间',
            dataIndex: '',
            align: 'center',
            sort: true,
            render(text) {
                new Date(text).Format('yyyy-MM-dd hh:mm:ss')
                return `<span>2018-02-23</span>`
            }
        },
        {
            title: '发布人',
            dataIndex: '',
            sort: true,
            render(text) {
                return `<span>成龙</span>`
            }
        },
        {
            title: '处理人',
            dataIndex: '',
            sort: true,
            render(text) {
                return `<span>李小龙</span>`
            }
        },
        {
            title: '内容',
            dataIndex: 'mc',
            sort: true,
            width: '30%',
            render(text) {
                return `<span>马鞍hello石蒙world牛</span>`
            }
        },
        {
            title: '状态',
            dataIndex: '',
            sort: true,
            render(text) {
                return `<span>待处理</span>`
                switch (text) {
                    case '00':
                        return '待确认'
                        break;
                    case '01':
                        return '待受理'
                        break;
                    case '02':
                        return '待处理'
                        break;
                    case '03':
                        return '已关闭'
                        break;
                    case '04':
                        return '被确认'
                        break;
                    case '05':
                        return '验收中'
                        break;

                    default:
                        break;
                }
            }
        },
    ];
});