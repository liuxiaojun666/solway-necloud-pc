ajaxData({
    // 该角色 电站列表
    allSTListForPCBySession: {
        name: 'GETAllSTListForPCBySession',
        data: {}
    },
    // 发布任务
    opShareTimeTaskUpdate: {
        name: 'opShareTimeTaskUpdateV2',
        data: {},
        later: true
    },
    // 发布任务 可推送人员 列表
    opShareUserStationRelSelectByCondition: {
        name: 'GETopShareUserStationRelSelectByCondition',
        data: {},
        later: true,
        onlyLatest: true
    },
}, {
        __serviceName__: 'sharedTaskReleaseService'
    })('sharedTaskReleaseCtrl', ['$scope', 'sharedTaskReleaseService', 'toaster'], ($scope, maAjaxData, toaster) => {
        $scope.$on('releaseTask', (e, obj = {}) => {
            const { taskId = null, stationId } = obj;
            if (stationId) {
                $scope.disabledSlecetStation = true;
                $scope.opShareUserStationRelSelectByCondition.getData({ stationId });
            }
            $scope.releaseTaskParame = {
                timerType: '0',
                userIds: {},
                taskImgs: [],
                ...($scope.releaseTaskParame || {}),
                taskId,
                stationId: stationId || ($scope.releaseTaskParame || {}).stationId
            };
        });
        // 发布任务 提交
        $scope.releaseTaskSubmit = () => {
            const { taskImgs, timerType, timerDate, userIds, taskId } = $scope.releaseTaskParame;
            const obj = {
                ...$scope.releaseTaskParame,
                taskId,
                autoPub: 1,
                taskImgs: taskImgs.join(','),
                timerDate: timerType == '0' ? null : timerDate,
                userIds: Object.keys(userIds).filter(v => userIds[v]).join(',')
            };
            if (!$solway.formValidation(obj, '.releaseTask .parames', toaster)) return;
            $scope.releaseTask = false;
            $scope.opShareTimeTaskUpdate.getData({ ...obj, dateArr: null }).then((res) => {
                if (res.code === 0) {
                    toaster.pop('success', '', res.msg || '发布任务成功');
                    // getBaseMessageList();
                    $scope.$emit('releaseTaskCallback', true);
                }
                else return toaster.pop('error', '', res.msg || '发布任务失败');
                $scope.releaseTaskParame.taskContent = '';
            });
        };

        // 时间选择 回调
        $scope.releaseTaskDateUpdate = dateStr => $scope.releaseTaskParame.timerDate = dateStr;

        // 发布任务 接收人接口列表
        $scope.opShareUserStationRelSelectByCondition.getDataCallback = (success, res) => {
            if (!success) return;
            if (res.code !== 0) return;
            $scope.releaseTaskParame.userIds = res.body.reduce((a, b) => ({ ...a, [b.userId]: false }), {});
        };


        // 上传图片
        $(".sharedTaskRelease").on('change', '#fileaaa', () => {
            $.ajaxFileUpload({
                url: window.baseUrl + '/wxa/img.htm',
                secureuri: false,
                fileElementId: 'fileaaa',
                type: "POST",
                formName: "file",
                dataType: 'json',
                data: {
                    classify: 'task',
                },
                success(data) {
                    if (data && data.length >= 0) {
                        $scope.releaseTaskParame.taskImgs.push(data[0]);
                        $scope.$apply()
                    }
                },
                error(e) {
                    toaster.pop('error', '', '上传失败')
                }
            });
        });
    });