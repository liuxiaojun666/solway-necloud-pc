ajaxData({
    analysis_station_clean_invlist: {
        name: 'GETinvShadeWeMList',
        data: {},
        later: true,
        onlyLatest: true,
    },
    analysis_station_clean_invline: {
        name: 'GETinvShadeWeMLine',
        data: {},
        later: true,
        onlyLatest: true,
    },
    selectEqPaintingData: {
        name: 'GETselectEqPaintingMonthData',
        data: {},
        later: true,
        onlyLatest: true,
    }
}, {
        __serviceName__: 'shadeEquipmentDetailsService',
    })('shadowEquipmentDetailsCtrl', ['$scope', 'shadeEquipmentDetailsService'], ($scope, myAjaxData) => {
        $scope.$on('equipmentDetails', (e, { eqid, eq_name }) => {
            $scope.eqid = eqid;
            $scope.eq_name = eq_name;
            $scope.diffGetdata();
        });

        $scope.diffGetdata = () => {
            $scope.analysis_station_clean_invlist.res = null;
            $scope.analysis_station_clean_invline.res = null;
            $scope.selectEqPaintingData.res = null;
            $scope.cColumn = [];
            $scope.cxdata = void 0;
            $scope.cydata = void 0;
            const { cShowShape = 'list', eqid, dateTime } = $scope;
            if (cShowShape === 'list') {
                $scope.analysis_station_clean_invlist.getData({
                    queryType: 3,
                    date: dateTime.showDate,
                    dateType: 2,
                    eqid,
                });
            } else if (cShowShape === 'chart') {
                $scope.analysis_station_clean_invline.getData({
                    queryType: 3,
                    date: dateTime.showDate,
                    dateType: 2,
                    eqid,
                });
            } else if (cShowShape === 'shadow') {
                // $scope.selectEqPaintingData.getData({
                //     deviceId: eqid,
                //     dtime: dateTime.showDate.substr(0, 7)
                // });
                $scope.$broadcast('equipmentShadowDetails', {
                    eqid: $scope.eqid,
                    eq_name: $scope.eq_name
                });
            }
        };

        $scope.analysis_station_clean_invlist.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.cDatasource = res.body;
            $scope.cColumn = [
                {
                    title: '日期',
                    dataIndex: 'dtime',
                    align: 'center',
                    style: 'position:relative;',
                    sort: true,
                    render(text, item, index) {
                        return text + `
                        <svg style="width: 30px;height: 30px;cursor:pointer;position: absolute;right: 1em;top:10px;" class="symbol-icon" aria-hidden="true">
                            <use xlink:href="#icon-${['', 'qingtian', 'yintian', 'yu-', 'xue-', 'wumai', 'other'][item.weather_code]}"></use>
                        </svg>`;
                    }
                },
                {
                    title: '实发电量(kWh)',
                    dataIndex: 'real_kwh_chk',
                    align: 'right',
                    sort: true,
                },
                {
                    title: '阴影损失电量(kWh)',
                    dataIndex: 'shade_we',
                    align: 'right',
                    sort: true,
                },
                {
                    title: '阴影损失比例(%)',
                    dataIndex: 'shade_we_r',
                    align: 'right',
                    sort: true,
                },
            ];
        };

        $scope.analysis_station_clean_invline.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.cxdata = res.body.dtime;
            $scope.cydatas = [[res.body.real_kwh_chk, res.body.shade_we], [res.body.shade_we_r]];
            $scope.imageSymbolsData = res.body.real_kwh_chk.map((v, i) => v + res.body.shade_we[i]);
            $scope.imageSymbols = res.body.weather_code.map((v, i) => {
                return 'image://' + window.baseUrl + '/theme/images/enrichment/public/' + ['', 'qingtian', 'yintian', 'yu', 'xue', 'wumai', 'other'][v] + '.png'
            });
        };

        $scope.selectEqPaintingData.subscribe(res => {
            const cxdata = [];
            for (let i = 0; i < 24; i++) {
                for (let j = 0; j < 60; j++) cxdata.push(i + ':' + (j < 10 ? '0' + j : j));
            }
            $scope.cxdata = cxdata;
            const len = res.body.length;
            $scope.types = [['bar', 'bar', 'bar', ...new Array(len).fill('line'), 'line']];
            $scope.cydatas = [[[], [], [], ...res.body.map(computDataArr), [16]]];
            $scope.colors = [['#7e4bb4', '#dd5859', '#b08e73', ...res.body.map(v => ({ AbnormalShadow: '#dd5859', AlwaysShadow: '#b08e73', Shadow: '#7e4bb4' }[v.property]))]];
            function computDataArr(data) {
                const arr = [];
                arr.length = 1440;
                const startTimeArr = [];
                const endTimeArr = [];
                data.times.forEach((v, i) => {
                    startTimeArr.push(cxdata.indexOf(v[0]));
                    endTimeArr.push(cxdata.indexOf(v[1]));
                });
                startTimeArr.forEach((outerV, outerIndex) => {
                    for (let i = 0; i < arr.length; i++) {
                        if (i >= startTimeArr[outerIndex] && i <= endTimeArr[outerIndex]) arr[i] = data.stringId;
                    }
                });
                return arr;
            };
            $scope.tooltipFormatter = (params, b, c) => {
                let res = params[0].name + '<br/>'
                params.slice(0).reverse().forEach(v => res += `组串编号: ${v.value || ''}<br/>`)
                return res
            };
        });

        $scope.selectEqPaintingData.subscribe(res => {
            $scope.barDatas = new Array(18).fill(0);
            res.body.forEach(v => $scope.barDatas[v.stringId - 1] = v.reduce);
            $scope.barNames = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,];
            $scope.tooltipFormatter2 = (params, b, c) => '组串编号' + params[0].name + '损失(%): ' + params[0].value;
        });
    });