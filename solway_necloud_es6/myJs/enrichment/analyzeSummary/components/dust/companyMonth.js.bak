ajaxData({
    // info
    analysis_company_dust_month_info: {
        name: 'GETanalysis_company_dust_month_info',
        data: {},
        later: true
    },
    // 时间 列表
    analysis_company_dust_month_timelist: {
        name: 'GETanalysis_company_dust_month_timelist',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 时间 曲线
    analysis_company_dust_month_timeline: {
        name: 'GETanalysis_company_dust_month_timeline',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 电站 列表
    analysis_company_dust_month_stationlist: {
        name: 'GETanalysis_company_dust_month_stationlist',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 电站 曲线
    analysis_company_dust_month_stationline: {
        name: 'GETanalysis_company_dust_month_stationline',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 设备 列表
    analysis_station_dust_month_devicelist: {
        name: 'GETanalysis_station_dust_month_devicelist',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 设备 曲线
    analysis_station_dust_month_deviceline: {
        name: 'GETanalysis_station_dust_month_deviceline',
        data: {},
        later: true,
        onlyLatest: true
    },
}, {
    __serviceName__: 'dustCompanyMonthService',
})('dustCompanyMonthCtrl', ['$scope', 'dustCompanyMonthService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { showShape, tabIndex = 0} = historicalRecord.get().themeDustCompanyMonth || {};
        $scope.changeShowShape(showShape || 'list');
        const { dateType, dateTime } = historicalRecord.get();
        $scope.dateType = dateType;
        $scope.dateTime = dateTime;
        await $scope.dateUpdated();
        $scope.changeTab(tabIndex);
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData(true);
        $scope.$apply();
    };


    // 切换电站 回调
    $scope.switchPowerCallback = () => $scope.diffGetData(true);


    // 点击电站名  跳转到电站页面
    $scope.trClick = (item, index, event) => {
        if ($scope.tabIndex === 2 && !event.target.className.includes('clickable')) {
            const { eqid, eq_name, stid } = item;
            $scope.equipmentDetail({ eqid, eq_name, stid });
        }
        if (!event.target.className.includes('clickable')) return;
        if (event.target.className.includes('eq')) {
            const { stid, eqid } = item;
            return $scope.$broadcast("equipmentPopUp", {
                stid,
                eqid
            });
        };
        $scope.reloadParentPage({
            stationData: {
                dataType: 0,
                id: item.stid,
                isGroup: "0",
                stClass: '01'
            }
        });
    };

    // 图表 点击 事件 处理 函数
    $scope.chartClick = (params) => {
        if ($scope.tabIndex === 2) {
            const { eq_name, eqid, stid } = $scope.analysis_station_dust_month_deviceline.res.body.data;
            const itemIndex = eq_name.indexOf(params.name.split('\n')[1]);
            $scope.equipmentDetail({
                eq_name: params.name,
                eqid: eqid[itemIndex],
                stid: stid[itemIndex]
            });
            $scope.$apply();
        }
    };

    // 日期改变
    $scope.dateUpdated = async () => {
        await myAjaxData.timeout(0);
        $scope.diffGetData(true);
    };

    // 设备详情 弹出 处理 函数
    $scope.equipmentDetail = (obj) => {
        $scope.equipmentDetailShow = true;
        $scope.$broadcast('equipmentDetails', obj);
    };

    // tab 切换
    $scope.changeTab = tabIndex => {
        $scope.tabIndex = tabIndex;
        historicalRecord.set({
            themeDustCompanyMonth: {
                ...historicalRecord.get().themeDustCompanyMonth || {},
                tabIndex
            }
        });
        $scope.diffGetData();
    };

    // 切换显示形式  图表 or 列表
    $scope.changeShowShape = showShape => {
        $scope.showShape = showShape;
        historicalRecord.set({
            themeDustCompanyMonth: {
                ...historicalRecord.get().themeDustCompanyMonth || {},
                showShape
            }
        });
        $scope.diffGetData();
    };

    // 接口请求
    $scope.diffGetData = async (getInfo) => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        setDataNull(getInfo);
        const { showShape, dateTime, tabIndex, dateType, dataType } = $scope;
        if (dateType !== 1) return;
        if (dataType <= 0) return;
        if (getInfo) {
            $scope.analysis_company_dust_month_info.getData({
                queryCode: 'analysis_company_dust_month_info',
                queryType: 1,
                date: dateTime.showDate
            });
        }
        if (tabIndex === 0 && showShape === 'list') {
            $scope.analysis_company_dust_month_timelist.getData({
                queryCode: 'analysis_company_dust_month_timelist',
                queryType: 1,
                date: dateTime.showDate
            });
        } else if (tabIndex === 0 && showShape === 'chart') {
            $scope.analysis_company_dust_month_timeline.getData({
                queryCode: 'analysis_company_dust_month_timeline',
                queryType: 1,
                date: dateTime.showDate
            });
        } else if (tabIndex === 1 && showShape === 'list') {
            $scope.analysis_company_dust_month_stationlist.getData({
                queryCode: 'analysis_company_dust_month_stationlist',
                queryType: 1,
                date: dateTime.showDate
            });
        } else if (tabIndex === 1 && showShape === 'chart') {
            $scope.analysis_company_dust_month_stationline.getData({
                queryCode: 'analysis_company_dust_month_stationline',
                queryType: 1,
                date: dateTime.showDate
            });
        } else if (tabIndex === 2 && showShape === 'list') {
            $scope.analysis_station_dust_month_devicelist.getData({
                queryCode: 'analysis_station_dust_month_devicelist',
                queryType: 1,
                date: dateTime.showDate
            });
        } else if (tabIndex === 2 && showShape === 'chart') {
            $scope.analysis_station_dust_month_deviceline.getData({
                queryCode: 'analysis_station_dust_month_deviceline',
                queryType: 1,
                sort: 'dust_we_r,desc',
                date: dateTime.showDate
            });
        }
    };

    // 时间 列表
    $scope.analysis_company_dust_month_timelist.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.datasource = res.body.data;
        $scope.column = [
            {
                title: '日期',
                dataIndex: 'dtime',
                align: 'center',
                sort: true,
            },
            {
                title: '实发电量' + '(' + res.body.units.real_kwh_chk + ')',
                dataIndex: 'real_kwh_chk',
                align: 'right',
                sort: true,
            },
            {
                title: '灰尘损失电量' + '(' + res.body.units.dust_we + ')',
                dataIndex: 'dust_we',
                align: 'right',
                sort: true,
            },
            {
                title: '灰尘损失比例' + '(' + res.body.units.dust_we_r + ')',
                dataIndex: 'dust_we_r',
                align: 'right',
                sort: true,
            },
        ];
    };

    // 时间 曲线
    $scope.analysis_company_dust_month_timeline.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.xdata = res.body.data.dtime;
        $scope.ydatas = [[res.body.data.real_kwh_chk, res.body.data.dust_we], [res.body.data.clean_mark]];
    };

    // 电站 列表
    $scope.analysis_company_dust_month_stationlist.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.datasource = res.body.data;
        $scope.column = [
            {
                title: '电站',
                dataIndex: 'st_name',
                align: 'left',
                width: '25%',
                sort: true,
                render(text) {
                    return `<span class="clickable">${text}</span>`
                }
            },
            {
                title: '装机容量' + '(' + res.body.units.inst_kw + ')',
                dataIndex: 'inst_kw',
                align: 'right',
                sort: true,
            },
            {
                title: '实发电量' + '(' + res.body.units.real_kwh_chk + ')',
                dataIndex: 'real_kwh_chk',
                align: 'right',
                sort: true,
            },
            {
                title: '灰尘损失电量' + '(' + res.body.units.dust_we + ')',
                dataIndex: 'dust_we',
                align: 'right',
                sort: true,
            },
            {
                title: '灰尘损失比例' + '(' + res.body.units.dust_we_r + ')',
                dataIndex: 'dust_we_r',
                align: 'right',
                sort: true,
            },
        ];
    };

    // 电站 曲线
    $scope.analysis_company_dust_month_stationline.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.xdata = res.body.data.st_name;
        $scope.ydatas = [[res.body.data.real_kwh_chk, res.body.data.dust_we], [res.body.data.dust_we_r]];
    };

    // 设备 列表
    $scope.analysis_station_dust_month_devicelist.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.datasource = res.body.data;
        $scope.column = [
            {
                title: '电站',
                dataIndex: 'st_name',
                align: 'left',
                width: '25%',
                sort: true,
                render(text) {
                    return `<span class="clickable">${text}</span>`
                }
            },
            {
                title: '设备',
                dataIndex: 'eq_name',
                align: 'left',
                width: '25%',
                sort: true,
                render(text) {
                    return `<span class="clickable eq">${text}</span>`
                }
            },
            {
                title: '装机容量' + '(' + res.body.units.inst_kw + ')',
                dataIndex: 'inst_kw',
                align: 'right',
                sort: true,
            },
            {
                title: '实发电量' + '(' + res.body.units.real_kwh_chk + ')',
                dataIndex: 'real_kwh_chk',
                align: 'right',
                sort: true,
            },
            {
                title: '灰尘损失电量' + '(' + res.body.units.dust_we + ')',
                dataIndex: 'dust_we',
                align: 'right',
                sort: true,
            },
            {
                title: '灰尘损失比例' + '(' + res.body.units.dust_we_r + ')',
                dataIndex: 'dust_we_r',
                align: 'right',
                sort: true,
            },
        ];
    };

    // 设备 曲线
    $scope.analysis_station_dust_month_deviceline.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.xdata = res.body.data.st_name.map((v, i) => v + '\n' + res.body.data.eq_name[i]);
        $scope.ydatas = [[res.body.data.real_kwh_chk, res.body.data.dust_we], [res.body.data.dust_we_r]];
    };

    // 数据置空
    function setDataNull(getInfo) {
        $scope.column = [];
        $scope.xdata = void 0;
        $scope.ydatas = void 0;
        $scope.analysis_company_dust_month_timelist.res = null;
        $scope.analysis_company_dust_month_timeline.res = null;
        $scope.analysis_company_dust_month_stationlist.res = null;
        $scope.analysis_company_dust_month_stationline.res = null;
        $scope.analysis_station_dust_month_devicelist.res = null;
        $scope.analysis_station_dust_month_deviceline.res = null;
        if (getInfo) $scope.analysis_company_dust_month_info.res = null;
    }

    // 销毁 事件
    $scope.$on('$destroy', () => {
        setDataNull();
    });
});