ajaxData({
    analysisEnergyFlowDiagram: {
        name: 'GETanalysisEnergyFlowDiagram',
        data: {},
        later: true,
        onlyLatest: true
    }
}, {
        __serviceName__: 'themeAnalyzeDefaultService',
        themeMap: {
            b1: 'dust',
            b2: 'resourcesDeviation',
            c1: 'evaluationElectricity',
            c2: 'shadow',
            c3: 'modelDeviation'
        }
    })('themeAnalyzeDefaultCtrl', ['$scope', 'themeAnalyzeDefaultService', 'actionRecord', 'toaster'], ($scope, myAjaxData, historicalRecord, toaster) => {
        /// 初始化 scope
        $scope.initChildScope($scope, myAjaxData);
        let myChart;

        // 主页面初始化完成 回调
        $scope.mainPageInitComplete = async () => {
            const { searchKey = '' } = historicalRecord.get().themeAnalyzeDefault || {};
            const { dateType, dateTime } = historicalRecord.get();
            $scope.dateType = dateType;
            $scope.dateTime = dateTime;
            await myAjaxData.timeout(0);
            $('.ng-clock').removeClass('ng-clock');
            $scope.initComplete = true;
            initChart();
            getData();
            $scope.$apply();
        };

        // 切换电站 回调
        $scope.switchPowerCallback = () => {
            getData();
        };

        // 日期改变
        $scope.dateUpdated = async () => {
            await myAjaxData.timeout(0);
            getData();
        };

        function initChart() {
            myChart = echartsSankey.init(document.getElementById('main'));

            // 宽高改变  重新画
            const resizeFunc = async () => {
                await myAjaxData.timeout(0);
                myChart.resize();
            };
            window.addEventListener('resize', resizeFunc);
            $scope.$on('$destroy', () => {
                window.removeEventListener('resize', resizeFunc);
                echarts.dispose(document.getElementById('main'));
                myChart = null;
            });

            // 点击事件监听
            myChart.on('click', function (obj) {
                const theme = myAjaxData.config.themeMap[obj.data.target];
                if (!theme) return;
                $scope.$emit('changeTheme', 'dust');
            });
        }

        // echarts 绘制
        function drawing() {
            const option = {
                series: {
                    type: 'sankey',
                    layout: 'none',
                    draggable: false,
                    data: $scope.analysisEnergyFlowDiagram.res.body.data,
                    links: $scope.analysisEnergyFlowDiagram.res.body.links,
                }
            };
            myChart.setOption(option);
        }

        // 请求接口
        async function getData() {
            await myAjaxData.timeout(0);
            const { dateTime, dateType, dataType } = $scope;
            $scope.analysisEnergyFlowDiagram.getData({
                queryType: dataType === 0 ? 3 : 1,
                dateType: 1,
                date: dateTime.showDate
            });
        }

        // 接口回调
        $scope.analysisEnergyFlowDiagram.getDataCallback = (success, res) => {
            if (!success) return;
            if (!res.body) return;
            drawing();
        };
    });