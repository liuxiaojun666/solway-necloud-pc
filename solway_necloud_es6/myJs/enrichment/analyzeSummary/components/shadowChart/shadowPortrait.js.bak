ajaxData(
    {
        // 获取设备下所有组串
        analysis_station_device_strid: {
            name: 'GETanalysis_station_device_strid',
            data: {},
            later: true
        },
        // 图表
        shadowDateGetStringLineAll: {
            name: 'GETshadowDateGetStringLineAll',
            data: {},
            later: true,
            onlyLatest: true
        },
    },
    {}
)('shadowPortraitCtrl', ['$scope', 'myAjaxData'], ($scope, myAjaxData) => {
    $scope.$on('equipmentShadowDetails', (event, item) => {
        setDataNull();
        $scope.eq_name = (item.stName ? item.stName + '-' : '') + item.deviceName;
        $scope.eqid = item.deviceId;
        $scope.stid = item.stId;
        $scope.stringId = item.stringId;
        if (item.stringId) {
            $scope.shadowDateGetStringLineAll.getData({
                st_eqid: $scope.stid + '-' + $scope.eqid,
                stringId: $scope.stringId
            });
        }
        $scope.analysis_station_device_strid.getData({
            st_eqid: $scope.stid + '-' + $scope.eqid,
            queryCode: 'analysis_station_device_strid',
            queryType: $scope.dataType === 0 ? 3 : 1
        });
    });

    $scope.analysis_station_device_strid.subscribe(res => {
        if ($scope.stringId) return;
        if (!res.body.data[0]) return;
        $scope.stringId = res.body.data[0].stringid
        $scope.shadowDateGetStringLineAll.getData({
            st_eqid: $scope.stid + '-' + $scope.eqid,
            stringId: $scope.stringId
        });
    });

    $scope.shadowDateGetStringLineAll.subscribe(res => {
        if (!res.date[0]) {
            $scope.c_xdata_ = [];
            $scope.c_ydatas_ = [[[]], [[]]]
            return
        }
        $scope.c_xdata_ = res.date;
        $scope.c_ydatas_ = [new Array(Math.max(...res.shadowTime.map(v => v.length)) / 2).fill('').map((v, i) => [
            res.date.map((v, xi) => ((res.shadowTime[xi][i * 2] - (res.shadowTime[xi][i * 2 - 1] || 0)) || 0)),
            res.date.map((v, xi) => ((res.shadowTime[xi][i * 2 + 1] - res.shadowTime[xi][i * 2]) || '-')),
        ]).flatMap(v => v), [res.hours]];
    });

    $scope.shadowDateGetStringLineAll.tooltipFormatter = (a, b) => {
        let l = 0, s = '';
        a.forEach((v, i) => {
            if (!v.value) return;
            if (v.value === '-') return;
            if (i % 2 === 0) return l += v.value;
            return s += l + ':00' + '-' + (l += v.value) + ':00' + '　';
        });
        return a[0].name + '<br/>' + '阴影：' + s + '<br/>' + '阴影小时数(h):' + a[a.length - 1].value;
    };


    function setDataNull() {
        $scope.c_xdata_ = void 0;
        $scope.c_ydatas_ = void 0;
        $scope.shadowDateGetStringLineAll.res = null;
        $scope.analysis_station_device_strid.res = null;
    }
});