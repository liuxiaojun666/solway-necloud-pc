ajaxData(
    {
        // 电站 列表
        analysis_company_str_shade_stationlist: {
            name: 'GETanalysis_company_str_shade_stationlist',
            data: {},
            later: true,
            onlyLatest: true
        },
        // 电站 曲线
        analysis_company_str_shade_stationline: {
            name: 'GETanalysis_company_str_shade_stationline',
            data: {},
            later: true,
            onlyLatest: true
        },
        // 设备 列表
        analysis_station_str_shade_devicelist: {
            name: 'GETanalysis_station_str_shade_devicelist',
            data: {},
            later: true,
            onlyLatest: true
        },
        // 设备 曲线
        analysis_station_str_shade_deviceline: {
            name: 'GETanalysis_station_str_shade_deviceline',
            data: {},
            later: true,
            onlyLatest: true
        },
    }, {
        __serviceName__: 'shadowChartCompanyService',
    }
)('shadowChartCompanyCtrl', ['$scope', 'shadowChartCompanyService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { showShape, tabIndex = 0 } = historicalRecord.get().themeShadowChartCompany || {};
        $scope.changeShowShape(showShape || 'list');
        $scope.changeTab(tabIndex);
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData(true);
        $scope.$apply();
    };

    $scope.chartClick = (event) => {
        if (event.seriesName !== "异常阴影组串数") return;
        $scope.equipmentDetailShow = true;
        $scope.$broadcast('equipmentShadowDetails', {
            eqid: $scope.analysis_station_str_shade_deviceline.res.body.data.eqid[event.dataIndex],
            eq_name: $scope.analysis_station_str_shade_deviceline.res.body.data.eq_name[event.dataIndex],
            stid: $scope.analysis_station_str_shade_deviceline.res.body.data.stid[event.dataIndex]
        });
    };


    // 切换电站 回调
    $scope.switchPowerCallback = () => $scope.diffGetData(true);

    // 点击电站名  跳转到电站页面
    $scope.trClick = (item, index, event) => {
        if ($scope.tabIndex === 1 && !event.target.className.includes('clickable')) {
            $scope.equipmentDetailShow = true;
            return $scope.$broadcast('equipmentShadowDetails', item);
        }
        if (!event.target.className.includes('clickable')) return;
        if (event.target.className.includes('eq')) {
            const { stid, eqid } = item;
            return $scope.$broadcast("equipmentPopUp", {
                stid,
                eqid
            });
        };
        $scope.reloadParentPage({
            stationData: {
                dataType: 0,
                id: item.stid,
                isGroup: "0",
                stClass: '01'
            }
        });
    };

    // tab 切换
    $scope.changeTab = tabIndex => {
        $scope.tabIndex = tabIndex;
        historicalRecord.set({
            themeShadowChartCompany: {
                ...historicalRecord.get().themeShadowChartCompany || {},
                tabIndex
            }
        });
        $scope.diffGetData();
    };

    // 切换显示形式  图表 or 列表
    $scope.changeShowShape = showShape => {
        $scope.showShape = showShape;
        historicalRecord.set({
            themeShadowChartCompany: {
                ...historicalRecord.get().themeShadowChartCompany || {},
                showShape
            }
        });
        $scope.diffGetData();
    };

    // 接口请求
    $scope.diffGetData = async (getInfo) => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        setDataNull(getInfo);
        const { showShape, tabIndex, dateType, dataType } = $scope;
        if (dataType === 0) return;
        if (tabIndex === 0 && showShape === 'list') {
            $scope.analysis_company_str_shade_stationlist.getData({
                queryCode: 'analysis_company_str_shade_stationlist',
                queryType: 1,
                date: new Date(Date.now() - 1000 * 60 * 60 * 24).Format('yyyy-MM-dd')
            });
        } else if (tabIndex === 0 && showShape === 'chart') {
            $scope.analysis_company_str_shade_stationline.getData({
                queryCode: 'analysis_company_str_shade_stationline',
                queryType: 1,
                sort: 'shade_str_r,desc',
                date: new Date(Date.now() - 1000 * 60 * 60 * 24).Format('yyyy-MM-dd')
            });
        } else if (tabIndex === 1 && showShape === 'list') {
            $scope.analysis_station_str_shade_devicelist.getData({
                queryCode: 'analysis_station_str_shade_devicelist',
                queryType: 1,
                date: new Date(Date.now() - 1000 * 60 * 60 * 24).Format('yyyy-MM-dd')
            });
        } else if (tabIndex === 1 && showShape === 'chart') {
            $scope.analysis_station_str_shade_deviceline.getData({
                queryCode: 'analysis_station_str_shade_deviceline',
                queryType: 1,
                sort: 'eqreduce,desc',
                date: new Date(Date.now() - 1000 * 60 * 60 * 24).Format('yyyy-MM-dd')
            });
        }
    };


    // 电站 列表
    $scope.analysis_company_str_shade_stationlist.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.datasource = res.body.data;
        $scope.column = [
            {
                title: '电站',
                dataIndex: 'st_name',
                align: 'left',
                width: '20%',
                sort: true,
                render(text) {
                    return `<span class="clickable">${text}</span>`
                }
            },
            {
                title: '阴影遮挡设备数',
                dataIndex: 'shade_eqcount',
                align: 'right',
                sort: true,
            },
            {
                title: '阴影设备比例' + '(' + res.body.units.shade_eq_r + ')',
                dataIndex: 'shade_eq_r',
                align: 'right',
                sort: true,
            },
            {
                title: '阴影遮挡组串数',
                dataIndex: 'shade_count',
                align: 'right',
                sort: true,
            },
            {
                title: '阴影组串比例' + '(' + res.body.units.shade_str_r + ')',
                dataIndex: 'shade_str_r',
                align: 'right',
                sort: true,
            },
        ];
    };

    // 电站 曲线
    $scope.analysis_company_str_shade_stationline.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.xdata = res.body.data.st_name;
        $scope.ydatas = [[res.body.data.shade_eqcount], [res.body.data.shade_eq_r]];
    };

    // 设备 列表
    $scope.analysis_station_str_shade_devicelist.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.datasource = res.body.data;
        $scope.column = [
            {
                title: '电站',
                dataIndex: 'st_name',
                align: 'left',
                width: '25%',
                sort: true,
                render(text) {
                    return `<span class="clickable">${text}</span>`
                }
            },
            {
                title: '设备',
                dataIndex: 'eq_name',
                align: 'left',
                width: '25%',
                sort: true,
                render(text) {
                    return `<span class="clickable eq">${text}</span>`
                }
            },
            {
                title: '异常阴影组串数',
                dataIndex: 'ab_shade_count',
                align: 'right',
                sort: true,
            },
            {
                title: '普通阴影组串数',
                dataIndex: 'co_shade_count',
                align: 'right',
                sort: true,
            },
            {
                title: '设备阴影损失比例' + '(' + res.body.units.eqreduce + ')',
                dataIndex: 'eqreduce',
                align: 'right',
                sort: true,
            },
        ];
    };

    // 设备 曲线
    $scope.analysis_station_str_shade_deviceline.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.xdata = res.body.data.st_name.map((v, i) => v + '\n' + res.body.data.eq_name[i]);
        $scope.ydatas = [[res.body.data.ab_shade_count], [res.body.data.eqreduce]];
    };

    // 数据置空
    function setDataNull(getInfo) {
        $scope.column = [];
        $scope.xdata = void 0;
        $scope.ydatas = void 0;
        $scope.analysis_company_str_shade_stationlist.res = null;
        $scope.analysis_company_str_shade_stationline.res = null;
        $scope.analysis_station_str_shade_devicelist.res = null;
        $scope.analysis_station_str_shade_deviceline.res = null;

    }

    // 销毁 事件
    $scope.$on('$destroy', () => {
        setDataNull();
    });
});