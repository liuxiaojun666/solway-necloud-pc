
ajaxData({
    judgeExistEnterprise:{
        name:'GETjudgeExistEnterprise',
        data: {},
        later: true,
        onlyLatest: true
    },
    // update:{
    //     name:'POSTupdatePerson',
    //     data: {},
    //     later: true,
    //     onlyLatest: true
    // }
    
    regist:{
        name:'POSTregistManager',
        data: {},
        later: true,
        sameTimeOnce:true,
        saveParam:false
    }
}, {
    __serviceName__: 'addPersonModelService',
})('addPersonModelCtrl', ['$scope', 'addPersonModelService', 'actionRecord','$timeout','toaster','$http'], ($scope, myAjaxData, historicalRecord,$timeout,toaster,$http) => {
    
    let managerReg = /^[a-zA-Z]+[a-z0-9A-Z_]+$/;
    $('.addPersonModelTpl').on('click', '.checkbox_btn', function(event) {
        var $this = $(this);
        var $beInput = $this.next();
        $this.toggleClass('active');
        $beInput.prop('checked',!$beInput.prop('checked'));
    });

    $scope.$on('broadAddPerson',()=>{
        $scope.formData = {};
        $(".checkbox_btn").removeClass('active');
        $('input[name="companytype"]').prop('checked',false);
    });

    const judgeEnterprise = () =>{
        $scope.judgeExistEnterprise.getData({enterpriseName:$scope.formData.comName}).then(res=>{
            if (res.key == 1) {
                toaster.pop('error','','该企业名称已被注册');
            }
        });
    }

    const getTypeState = index => {
        return Number($('input[name="companytype"]').eq(index).prop('checked'));
    }

    $scope.registSave = () =>{
        if (!$solway.formValidation($scope.formData, '.addPersonModelTpl', toaster)) return;//校验非空
        let len = $("input[name=companytype]:checked").length;
        if(!len){
            toaster.pop('error','','企业类型，至少选一项');
            return;
        }
        
        if( !managerReg.test($("#manager").val())){
            toaster.pop('error','','管理员账号格式不对（以字母开头，之后可以包含数字或者下划线）');
            return;
        } 
        if($("#pass").val().length<6){
            toaster.pop('error','','密码不得少于6位');
            return;
        } 

        $scope.formData['isepc'] = getTypeState(0);
        $scope.formData['isservice'] = getTypeState(1);
        $scope.formData['isowner'] = getTypeState(2);
        $scope.formData['ismanu'] = getTypeState(3);

        $scope.saveLoading = true;
        $scope.regist.getData($scope.formData).then(res=>{
            $scope.saveLoading = false;
            switch(parseInt(res.key)){
                case 1:
                    toaster.pop('error','','请至少选择一个企业类型');
                    break;
                // case 2:
                //     //验证码不正确
                //     $('#verifyCode-com').siblings('.valid-error').html('<label class="error">验证码不正确</label>');
                //     break;
                case 3:
                    toaster.pop('error','','输入企业名称不可用');
                    break;
                case 4:
                    toaster.pop('error','','输入密码错误');
                    break;
                case 5:
                    //添加成功
                    toaster.pop('success','','添加成功');
                    $scope.$emit('addSuccess');
                    break;
                case 6:
                    toaster.pop('error','','已经注册为企业用户');
                    break;
                // case 7:
                //     //验证码不正确
                //     $('#randomCode-com').siblings('.valid-error').html('<label class="error">随机验证码不正确</label>');
                //     $('#randomCodeComImg').click();
                //     break;
                default:
                    break;
            }
        });
    }
    // //初始
    // $scope.$on('broadAddPerson',function(e,data){
    //     $scope.id = data.id;
    //     if($scope.id){
    //         $scope.formData = data;
    //     }else{
    //         $scope.formData = {};
    //     }
    // });

    // //保存
    // $scope.save = () =>{
    //     $scope.update.getData($scope.formData).then(res=>{
    //         if(res.id){
    //             toaster.pop('success','','添加成功');
    //             $scope.$emit('addCallback');
    //         }else{
    //             toaster.pop('error', '','添加失败')
    //         }
    //     });
    // }

    $timeout(()=>{
        $("#enterpriseName").blur(function(e){
            judgeEnterprise();
        })
        $("#manager").blur(function(e){
            if( !managerReg.test( $(this).val() ) ) toaster.pop('error','','管理员账号格式不对（以字母开头，之后可以包含数字或者下划线）');
        })
        $("#pass").blur(function(e){
            if($(this).val().length<6) toaster.pop('error','','密码不得少于6位');
        })
        
    },2000)

    //取消
    $scope.cancel = () =>{
        $scope.$emit('cancelCallback');
    }
});