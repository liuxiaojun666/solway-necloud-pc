ajaxData(
    {
        // 查设备型号
        queryProducts: {
            name: 'GETqueryProducts',
            data: {},
            later: true,
            onlyLatest: true
        },
        turbineDynamoPoints: {
            name: 'GETturbineDynamoPointsNew',
            data: {},
            later: true
        },
        turbineDynamoPoints2: {
            name: 'GETturbineDynamoPointsNew2',
            data: {},
            later: true
        },
    }, {
        __serviceName__: 'dynamoStationMonthService',
    }
)('dynamoStationMonthCtrl', ['$scope', 'dynamoStationMonthService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    $('#timeRange > span').hide();
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { } = historicalRecord.get().themeDynamoStationMonth || {};
        const { dateType, dateTime } = historicalRecord.get();
        $scope.dateType = dateType;
        $scope.dateTime = dateTime;
        await $scope.dateUpdated();
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData(true);
        $scope.$apply();
    };


    // 切换电站 回调
    $scope.switchPowerCallback = () => $scope.diffGetData(true);


    // 日期改变
    $scope.dateUpdated = async () => {
        await myAjaxData.timeout(0);
        $scope.diffGetData(true);
    };

    // 接口请求
    $scope.diffGetData = async () => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        setDataNull();
        const { dateTime, dateType, dataType } = $scope;
        if (dateType !== 1) return;
        if (dataType !== 0) return;

        if (!$scope.queryProducts.res) {
            const res = await $scope.queryProducts.getData({
                deviceType: 18
            });
            $scope.turbineDynamoPoints.productId = res.body[0].productId;
        }
        $scope.turbineDynamoPoints.getData({
            dataType: 2,
            date: dateTime.showDate,
            dateType: 2,
            queryType: 3,
            productid: $scope.turbineDynamoPoints.productId
        });
    };


    $scope.turbineDynamoPoints.subscribe(() => {
        $scope.column = [
            {
                title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;margin-right:0;"></i></label>',
                dataIndex: 'eqid',
                align: 'center',
                width: '50px',
                checkboxName: 'batchprocessing',
                render(text) {
                    return '<label class="i-checks m-b-none"><input value="' + text + '" data-identifies="' + text + '" name="batchprocessing" type="checkbox" /><i style="background:transparent;"></i></label>';
                }
            },
            {
                title: '风机名称',
                dataIndex: 'eq_name',
                align: 'left',
                sort: true,
            },
            {
                title: '偏差率',
                dataIndex: 'dynamo_rs_torque_error',
                align: 'center',
                sort: true,
                render(text) {
                    return (text && text.toFixed(2)) + '';
                }
            }
        ];
    });


    // 不同设备对比
    $scope.turbineDynamoPoints.comparison = () => {
        const ids = document.getElementsByName('batchprocessing'):: [].filter(v => v.checked).map(v => v.value);
        if (ids.length === 0) return toaster.pop('info', '', '请勾选要对比的数据。');
        $scope.turbineDynamoPoints2.pageShow = true;
        $scope.turbineDynamoPoints2.getData({
            eqids: ids.join(),
            queryType: 3,
            date: $scope.dateTime.showDate,
            dataType: 2,
            dateType: 2
        });
    };

    // 不同设备对比图
    $scope.turbineDynamoPoints2.subscribe(res => {
        const keys = Object.keys(res.body.names);
        const names = Object.values(res.body.names);
        const idIndex = names.findIndex(v => v === $scope.turbineDynamoPoints2.activeEqName);
        $scope.turbineDynamoPoints2.chart = {
            types: [new Array(keys.length).fill('line')],
            xdata: res.body.x,
            linenames: [names],
            // ydatas: [keys.map(v => res.body[v])],
            ydatas: [keys.map(v => res.body[v].slice(0, keys.length))],
            z: [keys.map((v, i) => i === idIndex ? 3 : 2)],
            colors: [keys.map((v, i) => i === idIndex ? '#FF6C6C' : '#fff')]
        };
    });

    // 不同设备对比图 点击行
    $scope.turbineDynamoPoints2.trClick = (item, index, event) => {
        if (!$scope.turbineDynamoPoints2.pageShow) return;
        const ids = Object.keys($scope.turbineDynamoPoints2.res.body.names);
        const idIndex = ids.findIndex(v => v === ('' + item.eqid));
        if (idIndex < 0) return;
        event && $(event.target).parents('tr').css('background', '#1b4980').siblings().css('background', '');
        $scope.turbineDynamoPoints2.chart = {
            ...$scope.turbineDynamoPoints2.chart,
            z: [ids.map((v, i) => i === idIndex ? 3 : 2)],
            colors: [ids.map((v, i) => i === idIndex ? '#FF6C6C' : '#fff')],
        };
        $scope.turbineDynamoPoints2.activeEqName = item.eq_name;
    };

    // 数据置空
    function setDataNull() {
        $scope.turbineDynamoPoints.res = null;
    }


    // 销毁 事件
    $scope.$on('$destroy', () => {
        setDataNull();
        $('#timeRange > span').show();
    });
});