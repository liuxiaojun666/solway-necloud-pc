ajaxData(
    {
        turbineOPEList: {
            name: 'GETturbineOPEList',
            data: {},
            later: true
        }
    }, {
        __serviceName__: 'powerCapacityStationMonthService',
    }
)('powerCapacityStationMonthCtrl', ['$scope', 'powerCapacityStationMonthService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    let myChart;
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let {  } = historicalRecord.get().themePowerCapacityStationMonth || {};
        const { dateType, dateTime } = historicalRecord.get();
        $scope.dateType = dateType;
        $scope.dateTime = dateTime;
        await $scope.dateUpdated();
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData(true);
        $scope.$apply();
    };


    // 切换电站 回调
    $scope.switchPowerCallback = () => $scope.diffGetData(true);


    // 日期改变
    $scope.dateUpdated = async () => {
        await myAjaxData.timeout(0);
        $scope.diffGetData(true);
    };

    // 接口请求
    $scope.diffGetData = async () => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        setDataNull();
        const { dateTime, dateType, dataType } = $scope;
        if (dateType !== 1) return;
        if (dataType !== 0) return;
        $scope.turbineOPEList.getData({
            dataType: 2,
            dateType: 2,
            queryType: 3,
            date: dateTime.showDate
        });
    };

    $scope.turbineOPEList.subscribe(res => {
        myChart = echarts.init(document.getElementById('scatterChart'));
        const option = {
            color: ['rgba(212, 165, 255, 1)'],
            grid: {
                left: '40',
                right: '70',
                bottom: '40',
                containLabel: true
            },
            tooltip: {
                showDelay: 0,
                formatter: function (params) {
                    return params.data[3] + '<br/>' 
                            + '运行状态：' + params.data[0] 
                            + '<br/>'
                            + '效率：' + params.data[1]
                },
            },
            xAxis: [
                {
                    type: 'value',
                    scale: true,
                    axisLabel: {
                        textStyle: {
                            color: '#fffeff'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#366090'
                        }
                    },
                    name: '运行状态',
                    nameTextStyle: {
                        color: '#fffeff'
                    }
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    scale: true,
                    axisLabel: {
                        textStyle: {
                            color: '#fffeff'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#366090'
                        }
                    },
                    name: '功率',
                    nameTextStyle: {
                        color: '#fffeff'
                    }
                }
            ],
            series: [
                {
                    name: '',
                    type: 'scatter',
                    data: res.body
                }
            ]
        };
        myChart.setOption(option, true);
        const fun = myChart.resize;
        myChart.resize = async () => {
            await myAjaxData.timeout(16);
            fun();
        };
        window.addEventListener('resize', myChart.resize);
    });

    // 数据置空
    function setDataNull() {
        $scope.turbineOPEList.res = null;
    }


    // 销毁 事件
    $scope.$on('$destroy', () => {
        setDataNull();
        window.removeEventListener('resize', myChart.resize);
    });
});