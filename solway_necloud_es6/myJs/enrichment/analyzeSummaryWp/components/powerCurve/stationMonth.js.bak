ajaxData(
    {
        analysis_wp_station_pe_month_devicelist: {
            name: 'GETanalysis_wp_station_pe_month_devicelist',
            data: {},
            later: true
        },
        turbinePEList: {
            name: 'GETturbinePEList',
            data: {},
            later: true
        },
    }, {
        __serviceName__: 'powerCurveStationMonthService',
    }
)('powerCurveStationMonthCtrl', ['$scope', 'powerCurveStationMonthService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    let myChart;
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { } = historicalRecord.get().themePowerCurveStationMonth || {};
        const { dateType, dateTime } = historicalRecord.get();
        $scope.dateType = dateType;
        $scope.dateTime = dateTime;
        await $scope.dateUpdated();
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData(true);
        $scope.$apply();
    };


    // 切换电站 回调
    $scope.switchPowerCallback = () => $scope.diffGetData(true);


    // 日期改变
    $scope.dateUpdated = async () => {
        await myAjaxData.timeout(0);
        $scope.diffGetData(true);
    };

    // 接口请求
    $scope.diffGetData = async () => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        setDataNull();
        const { dateTime, dateType, dataType } = $scope;
        if (dateType !== 1) return;
        if (dataType !== 0) return;
        $scope.analysis_wp_station_pe_month_devicelist.getData({
            queryCode: 'analysis_wp_station_pe_month_devicelist',
            queryType: 3,
            date: dateTime.showDate
        });
    };


    $scope.analysis_wp_station_pe_month_devicelist.subscribe(() => {
        $scope.column = [
            {
                title: '<label class="i-checks m-b-none"><input checked type="checkbox"><i style="background:transparent;margin-right:0;"></i></label>',
                dataIndex: 'eqid',
                align: 'center',
                width: '50px',
                checkboxName: 'batchprocessing',
                render(text) {
                    return '<label class="i-checks m-b-none"><input checked data-identifies="' + text + '" name="batchprocessing" type="checkbox" /><i style="background:transparent;"></i></label>';
                }
            },
            {
                title: '风机名称',
                dataIndex: 'eq_name',
                align: 'left',
                sort: true,
            },
            {
                title: '效率(%)',
                dataIndex: 'pe_score',
                align: 'right',
                sort: true,
            }
        ];
    });

    $scope.analysis_wp_station_pe_month_devicelist.subscribe(res => {
        $scope.turbinePEList.getData({
            dataType: 2,
            date: $scope.dateTime.showDate,
            dateType: 2,
            queryType: 3,
            eqids: res.body.data.map(v => v.eqid).join()
        });
    });

    $scope.trClick = async (item, _index, event) => {
        $(event.target).parents('tr').css('background', '#1b4980').siblings().css('background', '')
        const idIndex = Object.keys($scope.turbinePEList.res.body.names).findIndex(v => v === item.eqid + '');
        const {colors} = $scope.turbinePEList.chart;
        colors[0] = colors[0].map((_v, i) => i === idIndex ? '#577BFF' : '#fff');
        $scope.turbinePEList.chart.display = false;
        await myAjaxData.timeout(0);
        $scope.$apply();
        await myAjaxData.timeout(0);
        $scope.turbinePEList.chart = {
            ...$scope.turbinePEList.chart,
            colors,
            activeId: item.eqid,
            display: true
        };
        $scope.$apply();
    };

    $scope.checkboxOnchange = (_all ,elements) => {
        const eqids = Array.from(elements).filter(v => v.checked).map(v => v.dataset.identifies).join()
        $scope.turbinePEList.getData({
            dataType: 2,
            date: $scope.dateTime.showDate,
            dateType: 2,
            queryType: 3,
            eqids
        });
    };

    $scope.turbinePEList.subscribe(res => {
        const { activeId } = $scope.turbinePEList.chart || {};
        if (!res.body.x) return $scope.turbinePEList.chart = { activeId };
        const eqids = Object.keys(res.body.names);
        const colors = [(new Array(eqids.length)).fill('#fff')];
        colors[0][eqids.findIndex(v => v === activeId + '')] = '#577BFF';
        $scope.turbinePEList.chart = {
            display: true,
            types: [(new Array(eqids.length)).fill('line')],
            xdata: res.body.x,
            linenames: [Object.values(res.body.names)],
            colors,
            activeId,
            ydatas: [eqids.map(v => res.body[v])]
        };
    });

    // 数据置空
    function setDataNull() {
        $scope.analysis_wp_station_pe_month_devicelist.res = null;
        $scope.turbinePEList.res = null;
    }


    // 销毁 事件
    $scope.$on('$destroy', () => {
        setDataNull();
        window.removeEventListener('resize', myChart.resize);
    });
});