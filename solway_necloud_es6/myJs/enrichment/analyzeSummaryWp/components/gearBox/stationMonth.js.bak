ajaxData(
    {
        // 时间 列表
        analysis_wp_station_gear_month_timelist: {
            name: 'GETanalysis_wp_station_gear_month_timelist',
            data: {},
            later: true,
            onlyLatest: true
        },
        // 时间 曲线
        analysis_wp_station_gear_month_timeline: {
            name: 'GETanalysis_station_pgc_month_timeline',
            data: {},
            later: true,
            onlyLatest: true
        },
        // 设备 列表
        analysis_wp_station_gearlist_month_devicelist: {
            name: 'GETanalysis_wp_station_gearlist_month_devicelist',
            data: {},
            later: true,
            onlyLatest: true
        },
        // 设备 曲线
        analysis_wp_station_gearlist_month_deviceline: {
            name: 'GETanalysis_wp_station_gearlist_month_deviceline',
            data: {},
            later: true,
            onlyLatest: true
        },
        // 多个风机--风速-功率-月-每台风机曲线：支持跨设备设备比较
        turbineGearboxPointsNew: {
            name: 'GETturbineGearboxPointsNew',
            data: {},
            later: true,
            onlyLatest: true
        },
    }, {
        __serviceName__: 'gearBoxStationMonthService',
    }
)('gearBoxStationMonthCtrl', ['$scope', 'gearBoxStationMonthService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    $('#timeRange > span').hide();
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { showShape, tabIndex = 0 } = historicalRecord.get().themeGearBoxStationMonth || {};
        $scope.changeShowShape(showShape || 'list');
        const { dateType, dateTime } = historicalRecord.get();
        $scope.dateType = dateType;
        $scope.dateTime = dateTime;
        await $scope.dateUpdated();
        $scope.changeTab(tabIndex);
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData(true);
        $scope.$apply();
    };

    // 切换设备 回调
    $scope.switchPowerCallback = () => $scope.diffGetData(true);

    // 点击设备名  跳转到设备页面
    $scope.trClick = (item, index, event) => {
        const { tabIndex } = $scope;
        if (tabIndex === 0) {
            $scope.equipmentDetail0Show = true;
            return $scope.$broadcast("equipmentDetails0", item);
        }
        else if (tabIndex === 1) {
            if ($scope.turbineGearboxPointsNew.pageShow) return $scope.turbineGearboxPointsNew.trClick(item, index, event);
            if (event.target.className.includes('eq')) {
                const { stid, eqid } = item;
                return $scope.$broadcast("equipmentPopUpWp", { stid, eqid });
            }
        }

    };


    // 日期改变
    $scope.dateUpdated = async () => {
        await myAjaxData.timeout(0);
        $scope.diffGetData(true);
    };

    // tab 切换
    $scope.changeTab = tabIndex => {
        $scope.tabIndex = tabIndex;
        historicalRecord.set({
            themeGearBoxStationMonth: {
                ...historicalRecord.get().themeGearBoxStationMonth || {},
                tabIndex
            }
        });
        $scope.diffGetData();
    };

    // 切换显示形式  图表 or 列表
    $scope.changeShowShape = showShape => {
        $scope.showShape = showShape;
        historicalRecord.set({
            themeGearBoxStationMonth: {
                ...historicalRecord.get().themeGearBoxStationMonth || {},
                showShape
            }
        });
        $scope.diffGetData();
    };

    // 接口请求
    $scope.diffGetData = async () => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        setDataNull();
        const { showShape, dateTime, dateType, dataType, tabIndex } = $scope;
        if (dateType !== 1) return;
        if (dataType !== 0) return;
        if (tabIndex === 0 && showShape === 'list') {
            $scope.analysis_wp_station_gear_month_timelist.getData({
                queryCode: 'analysis_wp_station_gear_month_timelist',
                queryType: 3,
                date: dateTime.showDate
            });
        } else if (tabIndex === 0 && showShape === 'chart') {
            $scope.analysis_wp_station_gear_month_timeline.getData({
                queryCode: 'analysis_wp_station_gear_month_timeline',
                queryType: 3,
                date: dateTime.showDate
            });
        } else if (tabIndex === 1 && showShape === 'list') {
            $scope.analysis_wp_station_gearlist_month_devicelist.getData({
                queryCode: 'analysis_wp_station_gearlist_month_devicelist',
                queryType: 3,
                date: dateTime.showDate,
                productid: $scope.analysis_wp_station_gearlist_month_devicelist.productId
            });
        } else if (tabIndex === 1 && showShape === 'chart') {
            $scope.analysis_wp_station_gearlist_month_deviceline.getData({
                queryCode: 'analysis_wp_station_gearlist_month_deviceline',
                queryType: 3,
                sort: 'power_exp_avg,desc',
                date: dateTime.showDate
            });
        }
    };


    // 时间 列表
    $scope.analysis_wp_station_gear_month_timelist.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.datasource = res.body.data;
        $scope.column = [
            {
                title: '日期',
                dataIndex: 'dtime',
                align: 'center',
                sort: true,
            },
            {
                title: '平均满发温度' + '(' + res.body.units.gearbox_temp_avg + ')',
                dataIndex: 'gearbox_temp_avg',
                align: 'right',
                sort: true,
            },
            {
                title: '最高油温风机',
                dataIndex: 'gearbox_temp_wt',
                align: 'left',
                sort: true,
            },
            {
                title: '最高油温' + '(' + res.body.units.gearbox_temp_max + ')',
                dataIndex: 'gearbox_temp_max',
                align: 'right',
                sort: true,
            },
        ];
    };

    // 时间 曲线
    $scope.analysis_wp_station_gear_month_timeline.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.xdata = res.body.data.dtime;
        $scope.ydatas = [[res.body.data.gearbox_temp_max, res.body.data.gearbox_temp_avg]];
    };

    // 设备 列表
    $scope.analysis_wp_station_gearlist_month_devicelist.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.datasource = res.body.data;
        $scope.column = [
            {
                title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;margin-right:0;"></i></label>',
                dataIndex: 'eqid',
                align: 'center',
                width: '50px',
                checkboxName: 'batchprocessing',
                render(text, item) {
                    return `<label class="i-checks m-b-none">
                                <input value="${text}" data-identifies="${item.stid + '-' + text}" name="batchprocessing" type="checkbox" />
                                <i style="background:transparent;"></i>
                            </label>`;
                }
            },
            // {
            //     title: '设备',
            //     dataIndex: 'st_name',
            //     align: 'left',
            //     width: '20%',
            //     sort: true,
            //     render(text) {
            //         return `<span class="clickable station">${text}</span>`
            //     }
            // },
            {
                title: '设备',
                dataIndex: 'eq_name',
                align: 'left',
                width: '20%',
                // sort: true,
                render(text, item) {
                    return `<span class="clickable eq">${text}</span>`
                }
            },
            {
                title: '风机型号',
                dataIndex: 'product_name',
                align: 'left',
                sort: true,
            },
            {
                title: '满发温度' + '(' + res.body.units.gearbox_temp_full + ')',
                dataIndex: 'gearbox_temp_full',
                align: 'right',
                sort: true,
            },
            {
                title: '最高油温' + '(' + res.body.units.gearbox_temp_max + ')',
                dataIndex: 'gearbox_temp_max',
                align: 'right',
                sort: true,
            },
        ];
    };

    // 设备 曲线
    $scope.analysis_wp_station_gearlist_month_deviceline.getDataCallback = (success, res) => {
        if (!success) return;
        $scope.xdata = res.body.data.eq_name;
        $scope.ydatas = [[res.body.data.gearbox_temp_max, res.body.data.gearbox_temp_full]];
    };

    // 不同设备对比
    $scope.analysis_wp_station_gearlist_month_devicelist.comparison = () => {
        const ids = document.getElementsByName('batchprocessing'):: [].filter(v => v.checked).map(v => v.value);
        if (ids.length === 0) return toaster.pop('info', '', '请勾选要对比的数据。');
        $scope.turbineGearboxPointsNew.pageShow = true;
        $scope.turbineGearboxPointsNew.getData({
            eqids: ids.join(),
            queryType: 3,
            date: $scope.dateTime.showDate,
            dataType: 2,
            dateType: 2
        });
    };

    // 不同设备对比图
    $scope.turbineGearboxPointsNew.subscribe(res => {
        const keys = Object.keys(res.body.names);
        const names = Object.values(res.body.names);
        const idIndex = names.findIndex(v => v === $scope.turbineGearboxPointsNew.activeEqName);
        $scope.turbineGearboxPointsNew.chart = {
            types: [new Array(keys.length).fill('scatter')],
            // xdata: res.body.x,
            linenames: [names],
            ydatas: [keys.map(v => res.body[v])],
            // ydatas: [keys.map(v => res.body[v].slice(0, keys.length))],
            z: [keys.map((v, i) => i === idIndex ? 3 : 2)],
            colors: [keys.map((v, i) => i === idIndex ? '#FF6060' : '#fff')]
        };
    });

    // 不同设备对比图 点击行
    $scope.turbineGearboxPointsNew.trClick = (item, index, event) => {
        if (!$scope.turbineGearboxPointsNew.pageShow) return;
        const ids = Object.keys($scope.turbineGearboxPointsNew.res.body.names);
        const idIndex = ids.findIndex(v => v === ('' + item.eqid));
        if (idIndex < 0) return;
        event && $(event.target).parents('tr').css('background', '#1b4980').siblings().css('background', '');
        $scope.turbineGearboxPointsNew.chart = {
            ...$scope.turbineGearboxPointsNew.chart,
            z: [ids.map((v, i) => i === idIndex ? 3 : 2)],
            colors: [ids.map((v, i) => i === idIndex ? '#FF6060' : '#fff')],
        };
        $scope.turbineGearboxPointsNew.activeEqName = item.eq_name;
    };

    // 不同设备对比图 tooltip
    // $scope.turbineGearboxPointsNew.tooltipFormatter = (params) => {
    //     const { activeEqName } = $scope.turbineGearboxPointsNew;
    //     return '风速：' + params[0].name + 'm/s<br/>' + params.sort((a, b) => b.value - a.value).map(v => `<span style="color:${v.seriesName === activeEqName ? '#FF6060' : '#fff'};">` + v.seriesName + '-功率(kW):    ' + v.value + '</span>' + '<br/>').join('');
    // };

    $scope.analysis_wp_station_gearlist_month_devicelist.trDblclick = async (item, index, event) => {
        $scope.equipmentDetail1Show = true;
        return $scope.$broadcast("equipmentDetails1", item);
    };

    // 数据置空
    function setDataNull() {
        $scope.column = [];
        $scope.xdata = void 0;
        $scope.ydatas = void 0;
        $scope.analysis_wp_station_gear_month_timelist.res = null;
        $scope.analysis_wp_station_gear_month_timeline.res = null;
        $scope.analysis_wp_station_gearlist_month_devicelist.res = null;
        $scope.analysis_wp_station_gearlist_month_deviceline.res = null;
        $scope.turbineGearboxPointsNew.pageShow = false;
    }

    // 销毁 事件
    $scope.$on('$destroy', () => {
        setDataNull();
        $('#timeRange > span').show();
    });
});