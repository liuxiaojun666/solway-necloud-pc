ajaxData({
    getAllSTListForPCBySession: {
        name: 'GETAllSTListForPCBySession',
        data: {},
        later: true
    },
    queryDeviceWithType: {
        name: 'GETqueryDeviceWithType',
        data: {},
        later: true
    },
    selectByConditionPage: {
        name: 'GETselectByConditionPage',
        data: {},
        later: true
    },
    saveAbnormalHalt: {
        name: 'saveAbnormalHalt',
        data: {},
        later: true
    },
    deleteAbnormalHalt: {
        name: 'deleteAbnormalHalt',
        data: {},
        later: true
    },
}, {})('abnormalShutdownCtrl', ['$scope', 'myAjaxData', 'actionRecord', '$timeout', 'toaster', '$ocLazyLoad'], ($scope, myAjaxData, historicalRecord, $timeout, toaster, $ocLazyLoad) => {
    historicalRecord.init(); //历史记录 初始化
    $scope.beforeLoading = true;
    historyInitCallback();
    $scope.moduleName = '异常停机'; //当前页面名称

    // 当前页面行为记录初始化回调 获取行为记录
    async function historyInitCallback() {
        const historiData = historicalRecord.get(); //获取记录
        const { deviceType = '', pStationId = '', deviceId = '',startDate = '', endDate = ''} = historiData;
        await myAjaxData.timeout(1000);
        $scope.query.type = deviceType;
        $scope.query.stid = pStationId;
        $scope.getEquips();
        $scope.query.deviceid = deviceId;
        $scope.statusCheck = false;
        await myAjaxData.timeout(0);
        $scope.statusCheck = true;
        if (startDate == '') {
            $scope.filter.startDate.showDate = '';
        } else {
            $scope.filter.startDate = new Date(startDate);
        }

        if (endDate == '') {
            $scope.filter.endDate.showDate = '';
        } else {
            $scope.filter.endDate = new Date(endDate);
        }

        await myAjaxData.timeout(0);
        $scope.getList();
        $scope.beforeLoading = false;
    };

    //时间格式转换
    function dateConversion(value) {
        var d = new Date(value);
        var Month = d.getMonth() + 1 < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1;
        var dateF = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();
        var Hours = d.getHours() < 10 ? '0' + d.getHours() : d.getHours();
        var Minutes = d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes();
        var date = d.getFullYear() + '-' + Month + '-' + dateF + ' ' + Hours + ':' + Minutes;
        return date;
    }

    $scope.query = {
        type: '',
        stid: '',
        deviceid: '',
        isToday: 1
    }

    $scope.addNew = {
        type: '',
        stid: '',
        deviceid: ''
    }

    //查询 ->时间
    var date1 = new Date();
    date1.setDate(date1.getDate() - 1);
    $scope.filter = {
        startDate: new Date,
        endDate: new Date,
        limitEndDate: new Date
    }
    // $scope.filter.startDate.showDate = '';
    // $scope.filter.endDate.showDate = '';

    //新增 ->时间
    $scope.addOption = {
        date: new Date,
        startDate: new Date,
        endDate: new Date
    }

    //设备类型 数据源
    $scope.equipType = [
        {
            k: 1,
            v: '汇流箱'
        },
        {
            k: 2,
            v: '逆变器'
        },
        {
            k: 3,
            v: '箱变'
        }
    ]

    //数据状态 数据源
    $scope.dataStatusArr = [
        {
            k: 1,
            v: '今日'
        },
        {
            k: 0,
            v: '昨日以前'
        }
    ]

    //开始时间方法
    $scope.startTimeModel = false;
    $scope.showStartTime = () => {
        $scope.startTimeModel = true;
    }

    //获取电站列表
    $scope.stationArr = [];
    $scope.getAllSTListForPCBySession.getData({

    }).then(res => {
        res.forEach((v, i) => {
            $scope.stationArr.push({
                'k': v.id,
                'v': v.stationname
            })
        })
    })

    //查询 - change 设备类型、电站
    $scope.equipArr = [];
    $scope.getEquips = () => {
        if ($scope.query.type && $scope.query.stid) {
            //获取设备
            $scope.queryDeviceWithType.getData({
                type: $scope.query.type,
                stids: $scope.query.stid
            }).then((res) => {
                $scope.equipArr = res.body;
            })
        } else {
            $scope.query.deviceid = '';
            $scope.equipArr = [];
        }
    }

    //------------------------------------------------------------------新增方法组
    //新增 - change 设备类型、电站
    $scope.addEquipArr = [];
    $scope.getAddEquips = () => {
        if ($scope.addNew.type && $scope.addNew.stid) {
            //获取设备
            $scope.queryDeviceWithType.getData({
                type: $scope.addNew.type,
                stids: $scope.addNew.stid
            }).then((res) => {
                $scope.addEquipArr = res.body;
            })
        } else {
            $scope.addNew.deviceid = '';
            $scope.addEquipArr = [];
        }
    }

    //新增按钮
    $scope.emitAdd = () => {
        if (!$scope.addNew.stid) {
            toaster.pop('error', '', '请选择电站');
        } else if (!$scope.addNew.type) {
            toaster.pop('error', '', '请选择设备类型');
        } else if (!$scope.addNew.deviceid) {
            toaster.pop('error', '', '请选择设备');
        } else if (!$scope.addOption.startDate.showDate) {
            toaster.pop('error', '', '请选择开始时间');
        } else if (!$scope.addOption.endDate.showDate) {
            toaster.pop('error', '', '请选择结束时间');
        } else if (!$scope.addEventExplain) {
            toaster.pop('error', '', '请输入事件说明');
        } else {
            $scope.saveAbnormalHalt.getData({
                pStationId: $scope.addNew.stid,
                deviceType: $scope.addNew.type,
                deviceId: $scope.addNew.deviceid,
                sStartTime: dateConversion($scope.addOption.startDate),
                sEndTime: dateConversion($scope.addOption.endDate),
                eventExplain: $scope.addEventExplain,
                id: null
            }).then(res => {
                if (res.code == 0) {
                    toaster.pop('success', '', '添加成功');
                    $scope.getList();
                    $scope.addNew.stid = '';
                    $scope.addNew.type = '';
                    $scope.addNew.deviceid = '';
                    $scope.addEventExplain = '';
                    $scope.addOver = false;
                    $scope.addTpl = !$scope.addTpl;
                    setTimeout(() => {
                        $scope.addOver = true;
                        $scope.addOption.startDate.showDate = '';
                        $scope.addOption.endDate.showDate = '';
                    }, 0)
                } else {
                    toaster.pop('error', '', '添加失败');
                }
            })
        }
    }

    //弹出新增组件
    $scope.addTpl = false;
    $scope.addOver = false;
    $scope.showAdd = (e) => {
        e.preventDefault();
        $scope.addTpl = !$scope.addTpl;
        $scope.addOver = true;
        $scope.addOption.startDate.showDate = '';
        $scope.addOption.endDate.showDate = '';
    }

    //取消添加按钮
    $scope.cancelAdd = () => {
        $scope.addTpl = false;
        $scope.addOver = false;
        $scope.addNew.stid = '';
        $scope.addNew.type = '';
        $scope.addNew.deviceid = '';
        $scope.addOption.startDate.showDate = '';
        $scope.addOption.endDate.showDate = '';
        $scope.addEventExplain = '';
    }

    //获取表格列表数据
    $scope.getList = () => {
        $scope.loading = true;
        $scope.selectByConditionPage.getData({
            // pageIndex: 0,
            // startDate: '2019-07-01 04:20',
            // endDate: '2019-07-15 16:37',
            // deviceType: 2,
            // stId: 4090,
            // isToday: 1,
            // deviceId: null

            pageIndex: 0,
            startDate: $scope.filter.startDate.showDate,
            endDate: $scope.filter.endDate.showDate,
            deviceType: $scope.query.type,
            stId: $scope.query.stid,
            deviceId: $scope.query.deviceid
        })
        historicalRecord.set({
            deviceType: $scope.query.type,
            pStationId: $scope.query.stid,
            deviceId: $scope.query.deviceid,
            startDate: $scope.filter.startDate.getTime(),
            endDate: $scope.filter.endDate.getTime()
        });
    }

    $scope.selectByConditionPage.subscribe(res => {
        $scope.loading = false;
        // $scope.abnormalList = [];
        $scope.abnormalList = res.body.data;
        $scope.edit = [];
        $scope.abnormalList.forEach((v, i) => {
            $scope.edit.push(
                {
                    pStationId: '',
                    deviceType: '',
                    deviceId: '',
                    eventExplain: '',
                    startDate: new Date(v.sStartTime),
                    endDate: new Date(v.sEndTime)
                }
            )
        });
    });

    //查询按钮
    $scope.search = () => {
        $scope.getList();
    }

    //点击设备日志
    $scope.showRecords = false;
    $scope.showRecord = () => {
        $scope.showRecords = !$scope.showRecords;
    }
    //----------------------------------------------------------------------编辑方法组
    //切换到编辑状态
    var flag = false;
    $scope.showEdit = async (item, i) => {
        $scope.abnormalList.forEach(item => {
            if (item.edit) {
                toaster.pop('error', '', '每次只能编辑一条');
                flag = true;
                return;
            }
        })
        if (!flag) {
            item.edit = true;
            $scope.edit[i].pStationId = item.pStationId ? item.pStationId : '';
            $scope.edit[i].deviceType = item.deviceType;
            $scope.edit[i].eventExplain = item.eventExplain;
            $scope.getEditEquips(i, item);
            await myAjaxData.timeout(1000);
            $scope.edit[i].deviceId = item.deviceId ? item.deviceId : '';
        }
    }

    //编辑 - change 设备类型、电站
    $scope.addEquipArr = [];
    $scope.getEditEquips = (i, item) => {
        if ($scope.edit[i].deviceType && $scope.edit[i].pStationId) {
            //获取设备
            $scope.queryDeviceWithType.getData({
                type: $scope.edit[i].deviceType,
                stids: $scope.edit[i].pStationId
            }).then((res) => {
                $scope.editEquipArr = res.body;
                $scope.edit[i].deviceId = item.deviceId;
            })
        } else {
            $scope.edit[i].deviceId = '';
            $scope.editEquipArr = [];
        }
    }

    //编辑的确定按钮
    $scope.editItem = (item, i) => {
        if (!$scope.edit[i].pStationId) {
            toaster.pop('error', '', '请选择电站');
        } else if (!$scope.edit[i].deviceType) {
            toaster.pop('error', '', '请选择设备类型');
        } else if (!$scope.edit[i].deviceId) {
            toaster.pop('error', '', '请选择设备');
        } else if (!$scope.edit[i].startDate.showDate) {
            toaster.pop('error', '', '请选择开始时间');
        } else if (!$scope.edit[i].endDate.showDate) {
            toaster.pop('error', '', '请选择结束时间');
        } else if (!$scope.edit[i].eventExplain) {
            toaster.pop('error', '', '请输入事件说明');
        } else {
            $scope.saveAbnormalHalt.getData({
                pStationId: $scope.edit[i].pStationId,
                deviceType: $scope.edit[i].deviceType,
                deviceId: $scope.edit[i].deviceId,
                sStartTime: $scope.edit[i].startDate.showDate,
                sEndTime: $scope.edit[i].endDate.showDate,
                eventExplain: $scope.edit[i].eventExplain,
                id: item.id
            }).then(res => {
                if (res.code == 0) {
                    item.edit = false;
                    flag = false;
                    toaster.pop('success', '', '编辑成功');
                    $scope.getList();
                } else {
                    toaster.pop('error', '', '编辑失败');
                }
            })
        }

    }

    //取消编辑按钮
    $scope.cancelEdit = (item) => {
        item.edit = false;
        flag = false;
    }

    //删除按钮
    $scope.delListItem = (item) => {
        $solway.confirm({ message: '确定删除此事件吗？' }, () => {
            $scope.deleteAbnormalHalt.getData({
                ids: item.id
            })
            $scope.deleteAbnormalHalt.subscribe(res => {
                if (res.code == 0) {
                    toaster.pop('success', '', '删除成功');
                    $scope.getList();
                } else {
                    toaster.pop('error', '', '删除失败');
                }
            });
        });
    }

    //导出图表
    $ocLazyLoad.load([
        'vendor/jquery/TableExport/libs/js-xlsx/xlsx.core.min.js',
        'vendor/jquery/TableExport/libs/FileSaver/FileSaver.min.js',
        'vendor/jquery/TableExport/tableExport.js'
    ]).then(() => {
        $scope.tableExport = () => {
            $('.exportTable').tableExport({
                headings: true,
                footers: true,
                formats: ["xls", "csv", "txt"],
                fileName: '异常停机',
                bootstrap: true,
                position: "bottom",
                ignoreRows: null,
                ignoreCols: null
            });
        };
    });

    //取消 新增后的回调
    $scope.$on('cancelCallback', () => {
        $scope.newStationModel = false;
    });

    $scope.$on('showAbnormal', () => {
        $scope.showRecords = false;
    });

    //头部折叠框 显示
    $timeout(() => {
        $('.ng-clock').removeClass('ng-clock');
    }, 2000);
});