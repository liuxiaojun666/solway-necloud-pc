ajaxData(
    {
        deviceInfoWidthDialog: {
            name: 'GETdeviceInfoWidthDialog',
            data: {},
            later: true
        },
        deviceHours: {
            name: 'GETdeviceHours',
            data: {},
            later: true
        },
        singleRealDataBBoxChange: {
            name: 'GETsingleRealDataBBoxChange',
            data: {},
            later: true,
            sameTimeOnce: true,
            onlyLatest: true
        },
        newHistoryData: {
            name: 'GETwpHistoryData',
            data: {},
            later: true,
            onlyLatest: true,
            cache: true
        },
        faultAlarmList: {
            name: 'GETwpFaultAlarmList',
            data: {},
            later: true
        }
    },
    {
        __serviceName__: 'windGeneratorService',
    }
)('windGeneratorCtrl', ['$scope', 'windGeneratorService', 'equipmentPopUpWpService', '$interval'], function ($scope, currentService, eqService, $interval) {
    $('.windGenerator.ng-clock').removeClass('ng-clock');
    $scope.tabIndex = 0; //初始化 tab 标签页   0：实时数据  1：历史数据   2：故障信息
    $scope.pstationid = eqService.config.eqObj.pstationid;
    $scope.serialnumber = eqService.config.eqObj.deviceSerialNnumber;
    $scope.historyDataNullPlaceholder = '<img style="position:absolute;left:500px;top:70px;" src="theme/images/enrichment/noData.png" alt="没有加载到数据插画" />';
    $scope.eqHistoryDataStartDate = new Date(Date.now() - 1000 * 60 * 60 * 24);
    $scope.eqHistoryDataEndDate = new Date;

    // 逆变器小时数信息获取
    $scope.deviceHours.beforGetData = () => {
        if ($scope.deviceHours.res) return;
        $scope.deviceHours.getData({ id: eqService.config.eqObj.deviceId, type: 18 });
    };

    // 逆变器基本信息获取
    $scope.deviceInfoWidthDialog.getData({
        pageIndex: 0,
        param: eqService.config.eqObj.deviceId,
        id: eqService.config.eqObj.deviceId, type: 18
    });

    // 实时数据获取
    // $scope.singleRealDataBBoxChange.getData({
    //     id: eqService.config.eqObj.deviceId,
    //     serialnumber: eqService.config.eqObj.deviceSerialNnumber,
    //     pstationid: eqService.config.eqObj.pstationid
    // });

    // 实时数据 处理
    $scope.singleRealDataBBoxChange.subscribe(res => {
        
    });

    // 状态刷新
    const timer = $interval(() => {
        if ($scope.tabIndex !== 0) return;
        if ($scope.rtmSingleStationComm.res.comm === 1) return;
        // $scope.singleRealDataBBoxChange.getData();
    }, 5 * 1000);

    // 历史数据 列表 接口请求
    $scope.newHistoryData.beforGetData = async () => {
        await currentService.timeout(0);
        $scope.$apply();
        const { eqHistoryDataEndDate, eqHistoryDataStartDate } = $scope;
        const { pstationid, deviceSerialNnumber, deviceId } = eqService.config.eqObj;
        $scope.newHistoryData.getData({
            pageIndex: 1,
            pageSize: 10,
            devicetype: 18,
            begindate: eqHistoryDataStartDate.showDate,
            enddate: eqHistoryDataEndDate.showDate,
            stationid: pstationid,
            serialnumber: deviceSerialNnumber,
            id: deviceId
        });
    };

    // 历史数据 列表 接口 返回 处理
    $scope.newHistoryData.subscribe(async res => {
        $scope.column = [
            {
                dataIndex: 'dtime',
                title: '时间',
                width: '220px',
                align: 'center',
                sort: true,
                fixed: 'left',
                render(text) {
                    return `<text>${new Date(text * 1000).Format('yyyy-MM-dd hh:mm:ss')}</text>`
                }
            }, {
                dataIndex: 'wdspd',
                title: '机舱外风速',
                width: '150px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'extmp',
                title: '机舱外温度',
                width: '150px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'intltmp',
                title: '机舱内温度',
                width: '150px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'nacdirang',
                title: '风向夹角',
                width: '160px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'rotspd',
                title: '叶轮转速',
                width: '160px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'ptangvalbl1',
                title: '叶片1桨距角',
                width: '160px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'ptangvalbl2',
                title: '叶片2桨距角',
                width: '120px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'ptangvalbl3',
                title: '叶片3桨距角',
                width: '120px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'spd',
                title: '发电机转速',
                width: '120px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'w',
                title: '有功功率',
                width: '120px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'var',
                title: '无功功率',
                width: '120px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'gntoptmpsta',
                title: '发电机最高绕组温度',
                width: '200px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'hz',
                title: '频率值',
                width: '120px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'gripf',
                title: '功率因数',
                width: '120px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'trmtmpentgbxdrv',
                title: '齿轮箱高速轴驱动端轴承温度',
                width: '220px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'trmtmpentgbxnondrv',
                title: '齿轮箱高速轴非驱动端轴承温度',
                width: '250px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'trmtmpgbxoil',
                title: '齿轮箱油温',
                width: '150px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'ywdir',
                title: '偏航角度',
                width: '150px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'daykwh',
                title: '有功发电量日计',
                width: '160px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'totwhcons',
                title: '有功发电量总计',
                width: '160px',
                align: 'right',
                render(text) {
                    if (text === 0) return `0`;
                    return `<span>${text ? text.toFixed(2) : ''}</span>`
                }
            }, {
                dataIndex: 'turst',
                title: '风机状态',
                width: '160px',
                align: 'right',
                // render(text) {
                // if (text === 0) return `0`;
                //     return `<span>${text ? text.toFixed(2) : ''}</span>`
                // }
            }, {
                dataIndex: 'limwst',
                title: '风机限功率状态',
                width: '120px',
                align: 'right',
                render(text) {
                    return ``;
                }
            }
        ];

        await currentService.timeout(0);
        $scope.$apply();
    });

    // 故障 列表 接口请求
    $scope.faultAlarmList.beforGetData = () => {
        $scope.faultAlarmList.getData({
            pageIndex: 0,
            pageSize: 10,
            deviceId: eqService.config.eqObj.deviceId,
            deviceType: 18
        });
    };

    // 故障列表 返回 处理
    $scope.faultAlarmList.subscribe(res => {
        $scope.column2 = [
            {
                dataIndex: 'sStartTime',
                title: '发生时间',
                width: '180px',
                align: 'center',
                sort: true,
                render(text) {
                    return `<text>${new Date(text).Format('yyyy-MM-dd hh:mm')}</text>`
                }
            },
            {
                dataIndex: 'sEndTime',
                title: '结束时间',
                width: '180px',
                align: 'center',
                sort: true,
                render(text) {
                    return `<text>${new Date(text).Format('yyyy-MM-dd hh:mm')}</text>`
                }
            },
            {
                dataIndex: 'faultlevelStr',
                title: '故障级别',
                width: '100px',
                align: 'center',
                sort: true,
            },
            {
                dataIndex: 'eventDesc',
                title: '故障描述',
                width: '200px',
                align: 'left',
                sort: true,
            },
            {
                dataIndex: 'sEndTime',
                title: '结果',
                width: '200px',
                align: 'left',
                render(text) {
                    return text ? '关闭' : '报告'
                }
            },
            {
                dataIndex: 'handstatusStr',
                title: '人工处理状态',
                width: '200px',
                align: 'left',
                sort: true,
            },
        ];
    });

    // 销毁事件
    $scope.$on('includePageDesdroy', () => {
        $scope.deviceInfoWidthDialog.res = null;
        $scope.deviceHours.res = null;
        $scope.singleRealDataBBoxChange.res = null;
        $scope.newHistoryData.res = null;
        $scope.faultAlarmList.res = null;
        $interval.cancel(timer);
    });

});