app.directive('pageSlideDownAdmin', ['$ocLazyLoad', '$http', '$state', '$stateParams', '$timeout', '$rootScope', 'actionRecord','myAjaxData', ($ocLazyLoad, $http, $state, $stateParams, $timeout, $rootScope, historicalRecord, myAjaxData) => ({
    restrict: 'E',
    transclude: !0,
    replace: !0,
    scope: {

    },
    templateUrl: 'tpl/enrichment/components/pageSlideDownAdmin.html' + window.stamp,
    link($scope, $element) {

        //鼠标悬浮0.5s页面头部，出现下拉页面
        let timer = null;
        const setMainHeight = () => {
            let wHeight = $(window).height();
            let muduleHeight = 500;
            $(".module-list").css('marginTop', (wHeight - muduleHeight) / 2)
            $(".function-list").css('marginTop', (wHeight - 660) / 2)
        }

        setMainHeight()

        window.addEventListener('resize', setMainHeight);
        $scope.$on('$destroy', () => {
            window.removeEventListener('resize', setMainHeight);
        });

        $timeout(() => {
            $('body').on('mouseover', '.hover-header-con', () => {
                // $scope.setActiveClass();
                timer = setTimeout(() => {
                    $(".systems-page").slideDown();
                }, 500);
            })
            $('body').on('mouseout', '.hover-header-con', () => {
                if (timer) clearTimeout(timer);
            })
        }, 0)

        $('body').on('click', '.hover-header-con-click', () => {
            $(".systems-page").slideDown();
            // $scope.setActiveClass();
        })

        $(".close_btn_slide").click(() => {
            $(".systems-page").slideUp();
        });

        $(".square-common").hover(function () {
            $(this).addClass('active');
        }, function () {
            if ($(this).hasClass($scope.currentState)) return;
            $(this).removeClass('active');
        })


    },
    controller($scope, $element) {
        $scope.currentState = $state.current.name;
        myAjaxData.getData({
            name: 'GETuiStates',
            data: {}
        }).then(res => {
            $scope.adminPages = res.body[0].children.map(v => ({state: v.uiState, name: v.name}));
            $scope.productLibrary = res.body[1] && res.body[1].children.map(v => ({state: v.uiState, name: v.name}));
        });
        $scope.changeUrl = (url) =>{
            if(url.includes(':module')){
                location.href = url.split(':')[1] + '/#' + url.split(':')[0]
            }else{
                $state.go(url)
            }
        }
    }
})])
