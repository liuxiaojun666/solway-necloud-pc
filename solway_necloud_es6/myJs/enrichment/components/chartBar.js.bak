app.directive('chartBar', ['myAjaxData', '$timeout', (myAjaxData, $timeout) => ({
    restrict: 'E',
    scope: {
        width: '=',
        height: '=',
        xname: '=',
        yname: '=',
        linenames: '=',
        xdatas: '=',
        ydatas: '=',
        color: '=',
        types: '=',
        backgroundColor: '=',
        fontColor: '=',
        axisColor: '=',
        barWidth: '=',
        splitLine: '=',
        datazoom: '=',
        symbolSize: '=',
        splitNumber: '=',
        imagesymboloptions: '=',
        stack: '=',
        itemClick: '=',
        interval: '=',
        tooltipFormatter: '=',
        lineWidth: '=',
    },
    link($scope, $element) {
        let myChart;
        $timeout(() => {
            $element.css('display', 'block')
            setWidthHeight();
            myChart = echarts.init($element[0]);
            $scope.$watchGroup(['xdata', 'ydatas', 'imagesymboloptions'], (newValue, oldValue) => {
                if (!newValue) return;
                drawing();
            });
            $scope.$watchGroup(['height', 'width'], async (newValue, oldValue) => {
                if (!newValue) return;
                await resizeFunc();
            });
            regestEvent();
        }, 0);

        const drawing = () => {
            const {
                stack = [[], []],
                width,
                interval = void 0,
                lineWidth = 1,
                tooltipFormatter = (params, ticket, callback) => {
                    if (imagesymboloptions) params.pop();
                    return params[0].name + '<br/>' + params.map(v => v.seriesName + ':    ' + v.value + '<br/>').join('');
                },
                backgroundColor,
                imagesymboloptions,
                symbolSize,
                splitNumber,
                splitLine,
                barWidth = 20,
                axisColor,
                fontColor,
                linenames = [],
                xname = '',
                yname = '',
                xdatas = [],
                ydatas = [],
                types = [],
                color = '',
                datazoom
            } = $scope;
            const option = {
                tooltip: {
                    trigger: 'axis',
                    formatter: tooltipFormatter
                },
                grid: {
                    top: '60',
                    left: '20',
                    right: '120',
                    bottom: '0',
                    containLabel: true //grid 区域是否包含坐标轴的刻度标签[ default: false ] 
                },
                xAxis: {
                    name: xname || '',
                    type: 'value',
                    splitNumber: 3,
                    axisLine: {
                        lineStyle: {
                            color: axisColor //坐标轴线线的颜色。
                        }
                    },
                    axisLabel: {
                        textStyle: {
                            color: fontColor
                        }
                    },
                    axisTick: {
                        show: false
                    },
                    nameTextStyle: {
                        color: fontColor
                    },
                    splitLine: {
                        show: splitLine,
                        lineStyle: {
                            color: axisColor, //分隔线颜色设置
                            type: 'dashed'
                        }
                    },
                },
                yAxis: {
                    name: yname,
                    type: 'category',
                    axisLine: {
                        lineStyle: {
                            color: axisColor
                        }
                    },
                    nameTextStyle: {
                        color: fontColor
                    },
                    axisTick: {
                        show: false
                    },
                    axisLabel: {
                        margin: 5, 
                        textStyle: {
                            color: fontColor,
                            fontSize: 12 
                        }
                    },
                    splitLine: {
                        show: splitLine,
                        lineStyle: {
                            color: axisColor, //分隔线颜色设置
                            type: 'dashed'
                        }
                    },
                    data: ydatas
                },
                series: [
                    {
                        type: 'bar',
                        barWidth: '15',
                        data: xdatas,
                        itemStyle: {
                            normal: {
                                color
                            }
                        }
                    },
                ]
            };
            myChart.setOption(option, true);
        };

        // 设置宽高
        const setWidthHeight = () => $element.width($scope.width).height($scope.height);

        // 宽高改变  重新画
        const resizeFunc = async () => {
            await myAjaxData.timeout(0);
            setWidthHeight();
            myChart.resize();
            drawing();
        };
        function regestEvent() {
            myChart.on('click', (params) => {
                $scope.itemClick && $scope.itemClick(params);
            });
        }
        $scope.$on('$destroy', () => {
            echarts.dispose($element[0]);
            myChart = null;
        });
    }
})]);