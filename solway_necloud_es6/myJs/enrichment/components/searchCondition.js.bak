ajaxData({
    
}, {
    __serviceName__: 'searchConditionService',
})('maintenancePersonSearchConditionCtrl', ['$scope', 'searchConditionService', '$timeout','$http'], ($scope, myAjaxData, $timeout,$http) => {
    const getBrandsData = ()=>{
        $http({
            method: "GET",
            url: window.baseUrl + "/Manufacturer/selectByPowerType.htm",
            params: {
                powerType: 'PV'
            }
        }).success(function (res) {
            if(res.code == 0){
                $scope.brandsList = res.body;
                $timeout(()=>{
                    let $checkAllBrand =  $(".searchConditionTpl").find('input[name="brandCheckAll"]');
                    let $checkEveryBrand =  $(".searchConditionTpl").find('input[name="brandType"]');

                    $(".searchConditionTpl").on('click',(e)=>{
                        e.stopPropagation();
                    })

                    $(".searchConditionTpl").on('click','input[name="brandCheckAll"]', (e)=>{
                        Array.from($checkEveryBrand).forEach(item=>item.checked = e.target.checked)
                        
                    });
                    $(".searchConditionTpl").on('click','input[name="brandType"]', (e)=>{
                        $checkAllBrand.prop('checked', Array.from($checkEveryBrand).every(item => item.checked== true));
                    });
                },0);
            }else{
                $scope.brandsList = [];
                // toaster.pop('error', '', res.msg);
            }
        });
    }

    const getfaultTypesData = ()=>{
        $http({
            method: "GET",
            url: window.baseUrl + "/Basedictionary/selectAll.htm",
            params: {
                dictType: 'FAULT_REAL_TYPE'
            }
        }).success(function (res) {
            $scope.faultTypesList = res;
            $timeout(()=>{
                let $checkAllFault =   $(".searchConditionTpl").find('input[name="faultCheckAll"]');
                let $checkEveryFault =  $(".searchConditionTpl").find('input[name="faultType"]');

                $(".searchConditionTpl").on('click','input[name="faultCheckAll"]', (e)=>{
                    Array.from($checkEveryFault).forEach(item=>item.checked = e.target.checked)
                });
                $(".searchConditionTpl").on('click','input[name="faultType"]', (e)=>{
                    $checkAllFault.prop('checked', Array.from($checkEveryFault).every(item => item.checked== true));
                });
            },0);
        });
    }

    //获取品牌
    getBrandsData();
    //获取故障类型
    getfaultTypesData();

    //全选控制
    $timeout(()=>{
        $scope.ifShowModel = false;//默认不显示弹框
        $scope.ifBeback = false;//默认不显示后退
    },0);

    //刷新
    $scope.refresh = (e)=>{
        $scope.$emit('refresh');
    }

    //后退
    $scope.beback = (e)=>{
        let $checkAllFault =   $('input[name="faultCheckAll"]');
        let $checkEveryFault =  $('input[name="faultType"]');
        $checkAllFault.attr('checked',false)
        Array.from($checkEveryFault).forEach(item=>item.checked = e.target.checked)

        let $checkAllBrand =  $('input[name="brandCheckAll"]');
        let $checkEveryBrand =  $('input[name="brandType"]');
        $checkAllBrand.attr('checked',false)
        Array.from($checkEveryBrand).forEach(item=>item.checked = e.target.checked)

        $scope.$emit('beback');
        $scope.ifBeback = false;
    }

    //查询
    $scope.search = (e) =>{
        $scope.ifShowModel = false;
        
        const brandArr = [],faultArr = [];
        $("input[name='brandType']:checked").map((index,v)=>{
            brandArr.push(v.dataset.ids)
        })
        $("input[name='faultType']:checked").map((index,v)=>{
            faultArr.push(v.dataset.ids)
        })
        
        $scope.selectedBrands = brandArr;
        $scope.selectedFaults = faultArr;

        $scope.$emit('search',{'brandCondition':brandArr,'faultCondition':faultArr});
        $scope.ifBeback = true;
    }

    $scope.cancel = () =>{
        $scope.ifShowModel = false;
    }

    $scope.showSearchModel = (e) =>{
        e.stopPropagation();
        $scope.ifShowModel = !$scope.ifShowModel;
    }

    //点击页面其他地方，搜索框消失
    document.addEventListener('click', closeSearchAlert);
    function closeSearchAlert() {
        $scope.ifShowModel = false;
        $scope.$apply();
    }

    // 销毁 事件
    $scope.$on('$destroy', () => {
        document.removeEventListener('click', closeSearchAlert);
    });

});