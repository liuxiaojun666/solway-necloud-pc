app.directive('searchCondition', ['myAjaxData', '$ocLazyLoad','$timeout','$http', (myAjaxData, $ocLazyLoad,$timeout,$http) => ({
    restrict: 'E',
    replace: !0,
    templateUrl: 'tpl/enrichment/components/searchConditionTpl.html',
    scope: {
        selectedBrands: '=',
        selectedFaults: '='
    },
    link($scope, $element) {
        

        const getBrandsData = ()=>{
            $http({
                method: "GET",
                url: window.baseUrl + "/Manufacturer/selectByPowerType.htm",
                params: {
                    powerType: 'PV'
                }
            }).success(function (res) {
                if(res.code == 0){
                    $scope.brandsList = res.body;
                    $timeout(()=>{
                        let $checkAllBrand =  $element.find('input[name="brandCheckAll"]');
                        let $checkEveryBrand = $element.find('input[name="brandType"]');

                        $element.on('click','input[name="brandCheckAll"]', (e)=>{
                            Array.from($checkEveryBrand).forEach(item=>item.checked = e.target.checked)
                        });
                        $element.on('click','input[name="brandType"]', (e)=>{
                            $checkAllBrand.prop('checked', Array.from($checkEveryBrand).every(item => item.checked== true));
                        });
                    },0);
                }else{
                    $scope.brandsList = [];
                    // toaster.pop('error', '', res.msg);
                }
            });
        }

        const getfaultTypesData = ()=>{
            $http({
                method: "GET",
                url: window.baseUrl + "/Basedictionary/selectAll.htm",
                params: {
                    dictType: 'FAULT_REAL_TYPE'
                }
            }).success(function (res) {
                $scope.faultTypesList = res;
                $timeout(()=>{
                    let $checkAllFault =  $element.find('input[name="faultCheckAll"]');
                    let $checkEveryFault = $element.find('input[name="faultType"]');

                    $element.on('click','input[name="faultCheckAll"]', (e)=>{
                        Array.from($checkEveryFault).forEach(item=>item.checked = e.target.checked)
                    });
                    $element.on('click','input[name="faultType"]', (e)=>{
                        $checkAllFault.prop('checked', Array.from($checkEveryFault).every(item => item.checked== true));
                    });
                },0);
            });
        }

        //获取品牌
        getBrandsData();
        //获取故障类型
        getfaultTypesData();

        //全选控制
        $timeout(()=>{
            $scope.ifShowModel = false;//默认不显示弹框
            $scope.ifBeback = false;//默认不显示后退
        },0);


        $scope.search = () =>{
            $scope.ifShowModel = false;
            
            const brandArr = [],faultArr = [];
            $("input[name='brandType']:checked").map((index,v)=>{
                brandArr.push(v.dataset.ids)
            })
            $("input[name='faultType']:checked").map((index,v)=>{
                faultArr.push(v.dataset.ids)
            })
            
            $scope.selectedBrands = brandArr;
            $scope.selectedFaults = faultArr;
        }

        $scope.cancel = () =>{
            $scope.ifShowModel = false;
        }

        $scope.showSearchModel = (e) =>{
            e.stopPropagation();
            $scope.ifShowModel = !$scope.ifShowModel;
        }

        document.addEventListener('click', closeSearchAlert);
        function closeSearchAlert() {
            $scope.ifShowModel = false;
            $scope.$apply();
        }

        // 销毁 事件
        $scope.$on('$destroy', () => {
            document.removeEventListener('click', closeSearchAlert);
        });

        
    }
})])