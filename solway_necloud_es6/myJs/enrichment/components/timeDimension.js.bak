app.directive('timeRange', ['myAjaxData','$timeout', (myAjaxData, $timeout) => ({
    restrict: 'E',
    replace: !0,
    scope: {
        updated: '=',
        endDate: "=",
        dateType: '=',
        dateTime: '=',
        accumulative: '='
    },
    templateUrl: window.baseUrl + '/tpl/enrichment/components/timeDimension.html',
    link($scope) {
        $timeout(() => {
            $scope.$watch('dateTime', async (newValue, oldValue) => {
                if (!newValue) return;
                // if (!newValue.showDate) return;
                await myAjaxData.timeout(0);
                $scope.range = $scope.dateType;
                const dateTime = newValue;
                switch ($scope.range) {
                    case 0:
                        $scope.dayDate = new Date(+dateTime);
                        break;
                    case 1:
                        $scope.monthDate = new Date(+dateTime);
                        break;
                    case 2:
                        $scope.yearDate = new Date(+dateTime);
                        break;
                
                    default:
                        break;
                }
            });
        },0);
    },
    controller($scope) {
        const {dateTime = new Date, dateType} = $scope;
        $scope.dayDate = new Date(+dateTime);
        $scope.monthDate = new Date(+dateTime);
        $scope.yearDate = new Date(+dateTime);
        $scope.range = dateType || 0;

        let updateCount = 0;
        $scope.myUpdated = () => {
            if (updateCount++ < 3) return;
            const {range, dayDate, monthDate, yearDate} = $scope;
            $scope.updated && $scope.updated(range, [dayDate, monthDate, yearDate][range]);
        };
    }
})]);