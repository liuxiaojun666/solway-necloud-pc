ajaxData(
    {
        getRunRealDataBInverter: {
            name: 'GETDeviceStationGetRunRealDataBInverter',
            data: {},
            later: true,
            onlyLatest: true,
            sameTimeOnce: true,
        },
        realtimeWindTurbine: {
            name: 'GETrealtimeWindTurbine2',
            data: {},
            onlyLatest: true,
            sameTimeOnce: true,
            later: true
        },
    },
    {
        __serviceName__: 'equipmentRunDetailService',
    }
)('equipmentRunDetailCtrl', ['$scope', 'equipmentRunDetailService', 'actionRecord', '$interval'], ($scope, myAjaxData, historicalRecord, $interval) => {

    $scope.$on('equipmentRunDetail', (event, { state: statusText, stClass }) => {
        $scope.stClass = stClass;
        $scope.status = {
            '离线': '04',
            '维护': '06',
            '故障': '02',
            '待机': '05',
        }[statusText];

        $scope.diffGetData();
    });

    $scope.diffGetData = () => {
        $scope.datasource = null;
        const { stClass, status } = $scope;

        if (stClass === '01') {
            $scope.getRunRealDataBInverter.getData({
                status: status.replace('06', '').replace('05', ''),
                pageIndex: 0,
                pageSize: 20
            });
        } else if (stClass === '02') {
            $scope.realtimeWindTurbine.getData({
                status,
                pageIndex: 0,
                pageSize: 20
            });
        }
    };

    $scope.column = [
        {
            title: '电站',
            dataIndex: 'stationName',
            sort: true
        },
        {
            title: '设备',
            dataIndex: 'name',
            sort: true
        },
        {
            title: '状态',
            dataIndex: 'statusDesc',
            align: 'center',
            sort: true,
            render(text, item) {
                if (item.comm == '1') return '<span class="data-grey">通讯中断</span>';
                else if (item.comm == '2') return `<span class="data-grey">${text}</span>`;
                else if (item.comm == '0' && item.status == '1') return `<span class="data-red">${text}</span>`;
                else if (item.comm == '0' && item.status == '2') return `<span class="data-yellow">${text}</span>`;
                else return `<span>${text}</span>`;
            }
        },
        {
            title: '时间',
            dataIndex: 'utime',
            align: 'center',
            sort: true,
            render(text) {
                return text && new Date(text * 1000).Format('yyyy-MM-dd hh:mm:ss');
            }
        },
    ];

    // 逆变器 处理
    $scope.getRunRealDataBInverter.subscribe(res => {
        $scope.paging = res;
        $scope.pagingGetData = $scope.getRunRealDataBInverter.getData;
        $scope.datasource = res.data || [];
    });

    // 风机 处理
    $scope.realtimeWindTurbine.subscribe(res => {
        $scope.paging = res;
        $scope.pagingGetData = $scope.realtimeWindTurbine.getData;
        $scope.datasource = res.data || [];
    });

    $scope.showInformation = (item, index, event) => {
        $scope.$broadcast(
            {
                '01': "equipmentPopUp",
                '02': "equipmentPopUpWp"
            }[$scope.stClass],
            {
                stid: item.sid,
                eqid: item.did
            }
        );
    };


    // 实例销毁 清除定时器 清除事件绑定
    $scope.$on('$destroy', () => {

    });
});