ajaxData(
    {
        resourceDetailStationDay: {
            name: 'GETresourceDetailStationDay',
            data: { },
            later: true,
        },
        action_station_clean_suggest_mark_30day_line: {
            name: 'GETaction_station_clean_suggest_mark_30day_line',
            data: { },
            later: true
        },
        action_station_clean_suggest_subject: {
            name: 'GETaction_station_clean_suggest_subject',
            data: {},
            later: true
        },
        action_station_clean_suggest_dust_30day_dust_we: {
            name: 'GETaction_station_clean_suggest_dust_30day_dust_we',
            data: {},
            later: true
        },
        action_station_clean_suggest_dust_top5_line: {
            name: 'GETaction_station_clean_suggest_dust_top5_line',
            data: {},
            later: true
        },
        action_station_clean_suggest_dust_bottom5_line: {
            name: 'GETaction_station_clean_suggest_dust_bottom5_line',
            data: {},
            later: true
        },
    },
    {
        __serviceName__: 'actionPlanSummaryStationCleaningAdviceService',
    }
)('actionPlanSummaryStationCleaningAdviceCtrl', ['$scope', 'actionPlanSummaryStationCleaningAdviceService', 'actionRecord'], ($scope, myAjaxData, historicalRecord) => {
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { tabIndex = 0 } = historicalRecord.get().actionPlanSummaryStationCleaningAdvice || {};
        $scope.changeTab(tabIndex);
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData();
        $scope.$apply();
    };


    // 切换电站 回调
    $scope.switchPowerCallback = () => {
        if ($scope.dataType !== 0) return;
        $scope.diffGetData();
    };

    // tab 切换
    $scope.changeTab = tabIndex => {
        $scope.tabIndex = tabIndex;
        historicalRecord.set({
            actionPlanSummaryStationCleaningAdvice: {
                ...historicalRecord.get().actionPlanSummaryStationCleaningAdvice || {},
                tabIndex
            }
        });
        $scope.diffGetData();
    };

    // 接口请求
    $scope.diffGetData = async () => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        setDataNull();
        const { tabIndex, dataType } = $scope;
        if (dataType !== 0) return;
        if (tabIndex === 0) {
            $scope.resourceDetailStationDay.getData({
                date: (new Date).Format('yyyy-MM-dd'),
                dateType: 3,
                queryType: 3
            });
            $scope.action_station_clean_suggest_mark_30day_line.getData({
                queryCode: 'action_station_clean_suggest_mark_30day_line',
                queryType: 3,
                start_date: new Date(Date.now() - 1000 * 24 * 60 * 60 * 365).Format('yyyy-MM-dd'),
                date: new Date(Date.now() - 1000 * 24 * 60 * 60).Format('yyyy-MM-dd')
            });
            $scope.action_station_clean_suggest_subject.getData({
                queryCode: 'action_station_clean_suggest_subject',
                queryType: 3,
                start_date: new Date(Date.now() - 1000 * 24 * 60 * 60 * 30).Format('yyyy-MM-dd'),
                date: new Date(Date.now() - 1000 * 24 * 60 * 60).Format('yyyy-MM-dd')
            }).then((res) => {
                if (res.body.data.pre_clean_status !== 1) return;
                $scope.action_station_clean_suggest_dust_30day_dust_we.getData({
                    queryCode: 'action_station_clean_suggest_dust_30day_dust_we',
                    queryType: 3,
                    start_date: new Date(Date.now() - 1000 * 24 * 60 * 60 * 30).Format('yyyy-MM-dd'),
                    date: new Date(Date.now() - 1000 * 24 * 60 * 60).Format('yyyy-MM-dd')
                });
            });
        } else if (tabIndex === 1) {
            $scope.action_station_clean_suggest_subject.getData({
                queryCode: 'action_station_clean_suggest_subject',
                queryType: 3,
                start_date: new Date(Date.now() - 1000 * 24 * 60 * 60 * 30).Format('yyyy-MM-dd'),
                date: new Date(Date.now() - 1000 * 24 * 60 * 60).Format('yyyy-MM-dd')
            }).then(() => {
                $scope.action_station_clean_suggest_dust_top5_line.getData({
                    queryCode: 'action_station_clean_suggest_dust_top5_line',
                    queryType: 3,
                    start_date: new Date(Date.now() - 1000 * 24 * 60 * 60 * 30).Format('yyyy-MM-dd'),
                    date: new Date(Date.now() - 1000 * 24 * 60 * 60).Format('yyyy-MM-dd')
                });
                $scope.action_station_clean_suggest_dust_bottom5_line.getData({
                    queryCode: 'action_station_clean_suggest_dust_bottom5_line',
                    queryType: 3,
                    start_date: new Date(Date.now() - 1000 * 24 * 60 * 60 * 30).Format('yyyy-MM-dd'),
                    date: new Date(Date.now() - 1000 * 24 * 60 * 60).Format('yyyy-MM-dd')
                });
            });
        }
    };

    $scope.action_station_clean_suggest_mark_30day_line.subscribe(res => {
        $scope.xdata = res.body.data.dtime;
        $scope.ydatas = [[res.body.data.clean_mark.map(v => v || 0)], [res.body.data.pcpn]];
    });

    $scope.action_station_clean_suggest_subject.subscribe(res => {
        $scope.markLine = res.body.data.clean_th && [[void 0, {
            label: {
                normal: {
                    formatter: '{b}: {c}%',
                    position: 'middle'
                }
            },
            lineStyle: {
                normal: {
                    type: 'solid',
                    color: '#f0cd81'
                }
            },
            data: [
                {
                    name: '平均清洁指数(%)',
                    yAxis: res.body.data.clean_mark
                },
            ]
        }]];
    });

    $scope.action_station_clean_suggest_dust_top5_line.subscribe(res => {
        if (!$scope.action_station_clean_suggest_dust_bottom5_line.res) return;
        topBottomMerge();
    });
    
    $scope.action_station_clean_suggest_dust_bottom5_line.subscribe(res => {
        if (!$scope.action_station_clean_suggest_dust_top5_line.res) return;
        topBottomMerge();
    });

    function topBottomMerge() {
        const topRes = $scope.action_station_clean_suggest_dust_top5_line.res;
        const bottomRes = $scope.action_station_clean_suggest_dust_bottom5_line.res;
        $scope.xdata = [...bottomRes.body.data.eq_name, ...topRes.body.data.eq_name.reverse()];
        $scope.ydatas = [[bottomRes.body.data.clean_mark, [null, null, null, null, null, ...topRes.body.data.clean_mark.reverse()]]];
        $scope.tooltipFormatter = '{a}<br/>{b0}: {c0}'
    }


    // 数据置空
    function setDataNull() {
        $scope.xdata = void 0;
        $scope.ydatas = void 0;
        $scope.action_station_clean_suggest_mark_30day_line.res = null;
        $scope.action_station_clean_suggest_subject.res = null;
        $scope.action_station_clean_suggest_dust_top5_line.res = null;
        $scope.action_station_clean_suggest_dust_bottom5_line.res = null;
    }


    // 键盘 左右 键   切换主题  组合键 放大缩小（ctrl + M）
    $(document).on('keydown', keyChangeTheme);
    $scope.$on('$destroy', () => $(document).off('keydown', keyChangeTheme));
    function keyChangeTheme(event) {
        const { tabIndex } = $scope;
        switch (event.keyCode) {
            case 38:
                if (tabIndex === 0) return;
                $scope.changeTab(tabIndex - 1);
                $scope.$apply();
                break;

            case 40:
                if (tabIndex === 1) return;
                $scope.changeTab(tabIndex + 1);
                $scope.$apply();
                break;

            default:
                break;
        }
    }
    // 销毁 事件
    $scope.$on('$destroy', () => {
        setDataNull();
    });
});