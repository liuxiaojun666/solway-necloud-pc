ajaxData({
    // 给默认选中电站
    getuserAuthHandleSetSTClass: {
        name: 'GETUserAuthHandleSetSTClass',
        data: {},
        later: true
    },
    // 切换电站
    changeStation: {
        name: 'GETUserAuthHandleChangeDataType',
        data: {},
        later: true
    },
    // 基本电站信息
    getUserAuthHandleGetCurrentInfo: {
        name: 'GETUserAuthHandleGetCurrentInfo',
        data: {},
        later: true
    },
    // 电站基本信息 新
    getCurrentInfoNew: {
        name: 'GETgetCurrentInfoNew',
        data: {},
        later: true
    }
}, {})('monitoringSummaryCtrl', ['$scope', 'myAjaxData', 'historicalRecord'], ($scope, myAjaxData, historicalRecord) => {
    $scope.beforeLoading = true; // 页面loading

    // 电站 信息  对比
    const diffStationInfo = async stationData => {
        const currentStationData = await $scope._getStationInfo;
        if (currentStationData.isMan === 1) return;
        if (!currentStationData.currentSTID) { // 没有选择过电站
            await $scope.getuserAuthHandleSetSTClass.getData({});
            return window.location.reload();
        }
        if (!stationData) { // 没有记录电站信息  
            const { currentSTID: id, currentSTType: isGroup, currentType: dataType, currentSTClass: stClass } = await $scope.getUserAuthHandleGetCurrentInfo.getData({});
            $scope.switchPowerCallback({ id, isGroup, dataType, stClass });
        } else if (Object.is(currentStationData.currentSTID, stationData.id)) { // 电站信息 没有变化
            await myAjaxData.timeout(500);
        } else { // 电站信息  发生变化   切换到记录中的电站
            await $scope.changeStation.getData(stationData);
            const { currentDataName } = await $scope.getCurrentInfoNew.getData({ currentView: '00', isGroup: 1 });
            $scope.switchPowerScope.currentDataName = currentDataName;
        }
    };

    // 当前页面行为记录初始化回调 获取行为记录
    $scope.historyInitCallback = async () => {
        const historiData = historicalRecord.get();
        const { detailFullPage, dateType = 0, dateTime = new Date(), theme = 'BasicSituation', stationData } = historiData;
        $scope.dateTime = dateTime;
        $scope.dateType = dateType;
        $scope.theme = theme;
        $scope.detailFullPage = detailFullPage;
        $scope.themeDetail = `tpl/enrichment/monitoringSummary/components/theme${theme}Detail.html`;
        if (!stationData) historicalRecord.set({ dateType, dateTime, theme });
        await diffStationInfo(stationData);
        $scope.beforeLoading = false;
        computeClass();
        $scope.mainPageInitComplete && $scope.mainPageInitComplete($scope.currentClass);
        $scope.$apply();
    };

    // 日期更新后回调   range 时间范围（日月年累计）    date 为日期
    $scope.dateUpdated = (dateType, dateTime) => {
        historicalRecord.set({ dateType, dateTime });
        computeClass();
        if ((dateType === 1 || dateType === 2) && $scope.theme === 'Power') $scope.changeTheme('BasicSituation');
        else if (dateType === 3) $scope.changeTheme('Accumulative');
        else if ($scope.theme === 'Accumulative') $scope.changeTheme('BasicSituation');
    };

    // 切换电站 回调
    $scope.switchPowerCallback = (switchArguments, switchPowerScope) => {
        if (switchPowerScope) $scope.switchPowerScope = switchPowerScope;
        if (!switchArguments) return;
        historicalRecord.set({ stationData: switchArguments });
        computeClass();
    };

    // 放大显示详情操作
    $scope.switchDetailFullPage = () => historicalRecord.set({ detailFullPage: $scope.detailFullPage = !$scope.detailFullPage });

    // 切换主题模块
    $scope.changeTheme = theme => {
        $scope.theme = theme;
        historicalRecord.set({ theme });
        $scope.themeDetail = `tpl/enrichment/monitoringSummary/components/theme${theme}Detail.html`;
    };

    // 计算当前 所属 哪一类
    const computeClass = () => {
        if ($scope.beforeLoading) return;
        const { dateTime, dateType, stationData: { dataType } } = historicalRecord.get();
        const str1 = ['Station', 'Company', 'Company'][dataType];
        const str2 = ['Day', 'Month', 'Year', 'Accumulative'][dateType];
        if (str2 !== 'Day') return $scope.currentClass = str1 + str2;
        if (dateTime.showDate === (new Date).Format('yyyy-MM-dd')) return $scope.currentClass = str1 + str2 + 'Today';
        return $scope.currentClass = str1 + str2 + 'Ago';
    };


    // 初始化子页面scope
    $scope.initChildScope = async (__childScope, __myAjaxData) => {
        // 主页面初始化完成
        const mainPageInitComplete = __childScope.$parent.$parent.mainPageInitComplete;
        __childScope.$parent.$parent.mainPageInitComplete = (...arg) => {
            mainPageInitComplete && mainPageInitComplete(...arg);
            __childScope.hasOwnProperty('mainPageInitComplete') && __childScope.mainPageInitComplete();
        };

        // 日期切换
        const dateUpdated = __childScope.$parent.$parent.dateUpdated;
        __childScope.$parent.$parent.dateUpdated = (...arg) => {
            dateUpdated && dateUpdated(...arg);
            if ($scope.beforeLoading) return;
            __childScope.hasOwnProperty('dateUpdated') && __childScope.dateUpdated();
        };

        // 电站切换
        const switchPowerCallback = __childScope.$parent.$parent.switchPowerCallback;
        __childScope.$parent.$parent.switchPowerCallback = (...arg) => {
            switchPowerCallback && switchPowerCallback(...arg);
            if ($scope.beforeLoading) return;
            __childScope.hasOwnProperty('switchPowerCallback') && __childScope.switchPowerCallback();
        };

        // 详情放大缩小 切换
        const switchDetailFullPage = __childScope.$parent.$parent.switchDetailFullPage;
        __childScope.$parent.$parent.switchDetailFullPage = (...arg) => {
            switchDetailFullPage && switchDetailFullPage(...arg);
            if ($scope.beforeLoading) return;
            __childScope.hasOwnProperty('switchDetailFullPage') && __childScope.switchDetailFullPage();
        };

        // 如果已初始化  尝试调用初始化完成函数
        if (!$scope.beforeLoading) {
            await myAjaxData.timeout(0);
            __childScope.hasOwnProperty('mainPageInitComplete') && __childScope.mainPageInitComplete($scope.currentClass);
        }

        // 子页面销毁 删除监听
        __childScope.$on('$destroy', () => {
            delete __childScope.mainPageInitComplete;
            delete __childScope.dateUpdated;
            delete __childScope.switchPowerCallback;
            delete __childScope.switchDetailFullPage;
        });
    };

});