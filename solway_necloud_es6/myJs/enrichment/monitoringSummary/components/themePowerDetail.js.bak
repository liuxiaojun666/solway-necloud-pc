ajaxData({
    // 矩阵视图
    getDeviceLayout: {
        name: 'GETdeviceLayoutV2',
        data: {},
        later: true,
        onlyLatest: true
    },
    rtmSingleStationComm: {
        name: 'GETRtmSingleStationComm',
        data: {
            dateString: new Date().Format("yyyy-MM-dd")
        },
        later: true,
        onlyLatest: true
    },
    // 电站 今日  时间  列表
    stationDayTodayTime: {
        name: 'GETPowerStationDayTodayTime',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 电站 今日  时间  图表
    stationDayTodayTime2: {
        name: 'GETPowerStationDayTodayTime2',
        data: {},
        later: true,
        onlyLatest: true
    },
    //电站日功率时间列表（历史日
    stationDayAgoTimeList: {
        name: 'GETPowerStationDayAgoTimeList',
        data: {},
        later: true,
        onlyLatest: true,
    },
    //电站日功率时间曲线（历史日
    stationDayAgoTimeLine: {
        name: 'GETPowerStationDayAgoTimeLine',
        data: {},
        later: true,
        onlyLatest: true,
    },
    // 公司今日 时间 列表
    companyDayTodayTime: {
        name: 'GETPowerCompanyDayTodayTime',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 公司今日 时间 图表
    companyDayTodayTime2: {
        name: 'GETPowerCompanyDayTodayTime2',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 公司今日 电站
    companyDayTodayStation: {
        name: 'GETPowerCompanyDayTodayStation',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 公司历史日 时间 列表
    companyDayAgoTimeList: {
        name: 'GETPowerCompanyDayAgoTimeList',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 公司历史日 时间 曲线
    companyDayAgoTimeLine: {
        name: 'GETPowerCompanyDayAgoTimeLine',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 公司历史日 电站 列表
    query_company_day_kw_detail_stationlist_his: {
        name: 'GETquery_company_day_kw_detail_stationlist_his',
        data: {},
        later: true,
        onlyLatest: true
    },
}, {
        __serviceName__: 'themePowerDetailService'
    })('themePowerDetailCtrl', ['$scope', 'themePowerDetailService', 'historicalRecord', '$interval'], ($scope, myAjaxData, historicalRecord, $interval) => {
        // 初始化 scope
        $scope.initChildScope($scope, myAjaxData);

        // 主页面初始化完成 回调
        $scope.mainPageInitComplete = async () => {
            let { showShape, tabIndex = 0, checkboxStatus = [true, true, true, true, true] } = historicalRecord.get().themePower || {};
            $scope.changeShowShape((tabIndex === 1 && currentClass === 'CompanyDayToday') ? 'list' : (showShape || 'chart'));
            const { dateType, dateTime } = historicalRecord.get();
            $scope.dateType = dateType;
            $scope.dateTime = dateTime;
            await $scope.dateUpdated();
            $scope.checkboxStatus = checkboxStatus;
            $scope.changeTab(($scope.dataType > 0 && $scope.tabIndex > 1) ? 0 : tabIndex);
            $('.ng-clock').removeClass('ng-clock');
            $scope.initComplete = true;
            await diffGetData();
            $scope.$apply();
        };

        // 切换电站 回调
        $scope.switchPowerCallback = () => {
            if ($scope.tabIndex === 1 && $scope.currentClass === 'CompanyDayToday') $scope.changeShowShape('list');
            if ($scope.dataType > 0 && $scope.tabIndex > 1) $scope.changeTab(0);
            $scope.$broadcast("switchPowerCallback");
            diffGetData();
        };

        // 日期改变
        $scope.dateUpdated = async () => {
            await myAjaxData.timeout(0);
            if ($scope.tabIndex === 1 && $scope.currentClass === 'CompanyDayToday') $scope.changeShowShape('list');
            $scope.xdata = void 0;
            $scope.ydatas = void 0;
            $scope.stationDayTodayTime.res = null;
            $scope.companyDayTodayTime.res = null;
            await diffGetData();
        };

        // tab 切换
        $scope.changeTab = tabIndex => {
            if (tabIndex === $scope.tabIndex) return;
            $scope.tabIndex = tabIndex;
            if (tabIndex === 1 && $scope.currentClass === 'CompanyDayToday') $scope.changeShowShape('list');
            historicalRecord.set({
                themePower: {
                    ...historicalRecord.get().themePower || {},
                    tabIndex
                }
            });
            diffGetData();
        };

        // 切换显示形式  图表 or 列表
        $scope.changeShowShape = showShape => {
            if (showShape === $scope.showShape) return;
            $scope.showShape = showShape;
            historicalRecord.set({
                themePower: {
                    ...historicalRecord.get().themePower || {},
                    showShape
                }
            });
            if ($scope.tabIndex === 1 && $scope.showShape === 'chart') {
                $scope.getDeviceLayout.getData({});
                $scope.rtmSingleStationComm.getData({ dateString: new Date().Format("yyyy-MM-dd") });
            }
            // if ($scope.dateType === 0 && $scope.tabIndex === 0) return;
            // if ($scope.currentClass === 'CompanyDayToday') return;
            diffGetData();
        };

        // 复选框状态改变
        $scope.changeCheckboxStatus = index => {
            if (index === 0) $scope.checkboxStatus.fill($scope.checkboxStatus[0]);
            else if (!$scope.checkboxStatus[index]) $scope.checkboxStatus[0] = false;
            else if ($scope.checkboxStatus.slice(1).every(v => v)) $scope.checkboxStatus[0] = true;
            historicalRecord.set({
                themePower: {
                    ...historicalRecord.get().themePower || {},
                    checkboxStatus: $scope.checkboxStatus
                }
            });
            diffGetData();
        };

        // 列表
        $scope.column = [
            {
                title: '电站名称',
                dataIndex: '',
                width: '',
                align: 'left'
            }
        ];



        // 判断 调用  对应 接口
        async function diffGetData() {
            if (!$scope.initComplete) return;
            await myAjaxData.timeout(0);
            const { currentClass, showShape, dateTime, tabIndex, dateType } = $scope;
            if (!currentClass.includes('DayToday')) $scope.column = [];
            switch (currentClass) {
                case 'StationDayToday':
                    if (tabIndex === 0 && showShape === 'chart') {
                        $scope.stationDayTodayTime.res = null;
                        $scope.stationDayTodayTime2.getData({
                            queryType: 3,
                            dateType: 3,
                            date: dateTime.showDate,
                            dataType: 2,
                            stime: $scope.stationDayTodayTime2.res
                                ? $scope.stationDayTodayTime2.res.body.echarts_xaTime[$scope.stationDayTodayTime2.res.body.echarts_xaTime.length - 1].split(':').join('')
                                : 0,
                        });
                    }
                    if (tabIndex === 0 && showShape === 'list') {
                        if ($scope.stationDayTodayTime.res) return;
                        $scope.stationDayTodayTime.getData({
                            queryType: 3,
                            dateType: 3,
                            date: dateTime.showDate,
                            dataType: 1,
                            stime: $scope.stationDayTodayTime.res
                                ? $scope.stationDayTodayTime.res.body.chartList[$scope.stationDayTodayTime.res.body.chartList.length - 1].xaTime.split(':').join('')
                                : 0,
                        });
                    }
                    break;

                case 'StationDayAgo':
                    if (showShape === 'list') {
                        $scope.stationDayAgoTimeList.getData({
                            queryType: 3,
                            dateType: 3,
                            date: dateTime.showDate
                        });
                    } else if (showShape === 'chart') {
                        $scope.stationDayAgoTimeLine.getData({
                            queryType: 3,
                            dateType: 3,
                            date: dateTime.showDate
                        });
                    }
                    break;

                case 'CompanyDayToday':
                    if (tabIndex === 0) {
                        if (showShape === 'list') {
                            if ($scope.companyDayTodayTime.res) return;
                            $scope.companyDayTodayTime.getData({
                                queryType: 1,
                                dateType: 3,
                                date: dateTime.showDate,
                                dataType: 1,
                                stime: $scope.companyDayTodayTime.res
                                    ? $scope.companyDayTodayTime.res.body.chartList[$scope.companyDayTodayTime.res.body.chartList.length - 1].xaTime.split(':').join('')
                                    : 0,
                            });
                        } else if (showShape === 'chart') {
                            $scope.companyDayTodayTime.res = null;
                            $scope.companyDayTodayTime2.getData({
                                queryType: 1,
                                dateType: 3,
                                date: dateTime.showDate,
                                dataType: 2,
                                stime: $scope.companyDayTodayTime2.res
                                    ? $scope.companyDayTodayTime2.res.body.echarts_xaTime[$scope.companyDayTodayTime2.res.body.echarts_xaTime.length - 1].split(':').join('')
                                    : 0,
                            });
                        }
                    } else if (tabIndex === 1) {
                        $scope.companyDayTodayStation.getData({
                            queryType: 1,
                            dateType: 3,
                            date: dateTime.showDate
                        });
                    }
                    break;

                case 'CompanyDayAgo':
                    if (tabIndex === 0 && showShape === 'list') {
                        $scope.companyDayAgoTimeList.getData({
                            queryType: 1,
                            dateType: 3,
                            date: dateTime.showDate
                        });
                    } else if (tabIndex === 0 && showShape === 'chart') {
                        $scope.companyDayAgoTimeLine.getData({
                            queryType: 1,
                            dateType: 3,
                            date: dateTime.showDate
                        });
                    } else if (tabIndex === 1) {
                        $scope.query_company_day_kw_detail_stationlist_his.getData({
                            queryCode: 'query_company_day_kw_detail_stationlist_his',
                            queryType: 1,
                            date: dateTime.showDate
                        });
                    }
                    break;


                default:
                    break;
            }
        };


        // 电站 今日 时间 列表 列表
        $scope.stationDayTodayTime.getDataCallback = (success, res) => {
            if (!success) return;
            const tempArr = res.body.chartList.slice(1);
            tempArr.isConcat = true;
            $scope.datasource = tempArr;
            $scope.column = [
                {
                    title: '时间',
                    dataIndex: 'xaTime',
                    sort: true,
                    width: '',
                    align: 'center'
                },
                {
                    title: '实发功率(kW)',
                    dataIndex: 'p',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '应发功率(kW)',
                    dataIndex: 'shd_p',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '光照强度(W/㎡)',
                    dataIndex: 'sun',
                    sort: true,
                    width: '',
                    align: 'right',
                }
            ];
        };
        // 电站 今日 时间 列表 图表
        const stationDayTodayTimeLineData = { xdata: [], line1: [], line2: [], line3: [] };
        $scope.stationDayTodayTime2.getDataCallback = (success, res) => {
            if (!success) return;
            const { xdata, line1, line2, line3 } = stationDayTodayTimeLineData;
            const length = xdata.length;
            $scope.xdata = stationDayTodayTimeLineData.xdata = xdata.slice(0, length - 1).concat(res.body.echarts_xaTime);
            $scope.ydatas = [[stationDayTodayTimeLineData.line1 = line1.slice(0, length - 1).concat(res.body.echarts_p),
            stationDayTodayTimeLineData.line2 = line2.slice(0, length - 1).concat(res.body.echarts_shd_p)],
            [stationDayTodayTimeLineData.line3 = line3.slice(0, length - 1).concat(res.body.echarts_sun)]];
        };
        // 电站  历史日   时间   列表
        $scope.stationDayAgoTimeList.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.column = [
                {
                    title: '时间',
                    dataIndex: 'time',
                    sort: true,
                    width: '',
                    align: 'center'
                },
                {
                    title: '实发功率(kW)',
                    dataIndex: 'real_curve',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '应发功率(kW)',
                    dataIndex: 'shd_curve',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '光照强度(W/㎡)',
                    dataIndex: 'sun_curve',
                    sort: true,
                    width: '',
                    align: 'right',
                }
            ];
        };
        // 电站  历史日   时间   曲线
        $scope.stationDayAgoTimeLine.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.xdata = res.body.x;
            $scope.ydatas = [[res.body.real_curve, res.body.shd_curve], [res.body.sun_curve]]
        };
        // 公司 今日 时间 列表
        $scope.companyDayTodayTime.getDataCallback = (success, res) => {
            if (!success) return;
            const tempArr = res.body.chartList.slice(1);
            tempArr.isConcat = true;
            $scope.datasource = tempArr;
            $scope.column = [
                {
                    title: '时间',
                    dataIndex: 'xaTime',
                    sort: true,
                    width: '',
                    align: 'center'
                },
                {
                    title: '实发功率(kW)',
                    dataIndex: 'p',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '应发功率(kW)',
                    dataIndex: 'shd_p',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '光照强度(W/㎡)',
                    dataIndex: 'sun',
                    sort: true,
                    width: '',
                    align: 'right',
                }
            ];
        }
        // 公司 今日 时间 图表
        const companyDayTodayTimeLineData = { xdata: [], line1: [], line2: [], line3: [] };
        $scope.companyDayTodayTime2.getDataCallback = (success, res) => {
            if (!success) return;
            const { xdata, line1, line2, line3 } = companyDayTodayTimeLineData;
            const length = xdata.length;
            $scope.xdata = companyDayTodayTimeLineData.xdata = xdata.slice(0, length - 1).concat(res.body.echarts_xaTime);
            $scope.ydatas = [[companyDayTodayTimeLineData.line1 = line1.slice(0, length - 1).concat(res.body.echarts_p),
            companyDayTodayTimeLineData.line2 = line2.slice(0, length - 1).concat(res.body.echarts_shd_p)],
            [companyDayTodayTimeLineData.line3 = line3.slice(0, length - 1).concat(res.body.echarts_sun)]];
        };
        // 公司 今日 电站 列表
        $scope.companyDayTodayStation.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.column = [
                {
                    title: '电站',
                    dataIndex: 'name',
                    sort: true,
                    width: '',
                    align: 'left'
                },
                {
                    title: '装机容量(kW)',
                    dataIndex: 'installedCapacity_s',
                    sort: true,
                    width: '',
                    align: 'right'
                },
                {
                    title: '功率(kW)',
                    dataIndex: 'power_s',
                    sort: true,
                    width: '',
                    align: 'right'
                },
                {
                    title: '出力比(%)',
                    dataIndex: 'outputPowerRatio',
                    sort: true,
                    width: '',
                    align: 'right'
                },
            ];
        };
        // 公司 历史日 时间 列表
        $scope.companyDayAgoTimeList.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.column = [
                {
                    title: '时间',
                    dataIndex: 'time',
                    sort: true,
                    width: '',
                    align: 'center'
                },
                {
                    title: '实发功率(kW)',
                    dataIndex: 'real_curve',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '应发功率(kW)',
                    dataIndex: 'shd_curve',
                    sort: true,
                    width: '',
                    align: 'right',
                },
                {
                    title: '光照强度(W/㎡)',
                    dataIndex: 'sun_curve',
                    sort: true,
                    width: '',
                    align: 'right',
                }
            ];
        };
        // 公司  历史日   时间   曲线
        $scope.companyDayAgoTimeLine.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.xdata = res.body.x;
            $scope.ydatas = [[res.body.real_curve, res.body.shd_curve], [res.body.sun_curve]]
        };
        // 公司 历史日 电站 列表
        $scope.query_company_day_kw_detail_stationlist_his.getDataCallback = (success, res) => {
            if (!success) return;
            $scope.column = [
                {
                    title: '电站名称',
                    dataIndex: 'st_name',
                    sort: true,
                    width: '',
                    align: 'left'
                },
                {
                    title: '装机容量(kW)',
                    dataIndex: 'inst_kw',
                    sort: true,
                    width: '',
                    align: 'right'
                },
                {
                    title: '最大功率(kW)',
                    dataIndex: 'max_p',
                    sort: true,
                    width: '',
                    align: 'right'
                },
                {
                    title: '最大功率时刻',
                    dataIndex: 'max_p_time',
                    sort: true,
                    width: '',
                    align: 'right'
                },
            ];
        };


        // 定时器  定时刷新接口
        const timer = $interval(() => {
            if ($scope.currentClass === 'StationDayToday' || $scope.currentClass === 'CompanyDayToday') diffGetData();
        }, 10000);
        $scope.$on('$destroy', () => $interval.cancel(timer));

    });