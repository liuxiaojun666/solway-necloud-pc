ajaxData({
    // 电站 历史日 列表
    query_station_day_elec_his_list: {
        name: 'GETquery_station_day_elec_his_list',
        data: {},
        later: true,
        onlyLatest: true
    },
    // 电站 历史日 图表
    query_station_day_elec_his_line: {
        name: 'GETquery_station_day_elec_his_line',
        data: {},
        later: true,
        onlyLatest: true
    },
}, {
    __serviceName__: 'themeElectricityStationDayAgoService'
    })('themeElectricityStationDayAgoCtrl', ['$scope', 'themeElectricityStationDayAgoService', 'actionRecord', 'myAjaxData'], ($scope, myAjaxData, historicalRecord, myAjaxDataParent) => {
    // 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { showShape, select1, select2 } = historicalRecord.get().themeElectricityStationDayAgo || {};
        $scope.changeShowShape(showShape || 'list');
        const { dateType, dateTime } = historicalRecord.get();
        $scope.dateType = dateType;
        $scope.dateTime = dateTime;
        await $scope.dateUpdated();
        $scope.select1 = select1 || 2;
        $scope.select2 = select2 || 2;
        if (select1) await $scope.selectChange('select1');
        if (select2) await $scope.selectChange('select2');
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        await $scope.diffGetData();
        $scope.$apply();
    };


    // 切换电站 回调
    $scope.switchPowerCallback = () => {
        if ($scope.currentClass !== 'StationDayAgo') return;
        setDataNull();
        diffSelectOptions();
        $scope.diffGetData();
    };

    // 日期改变
    $scope.dateUpdated = async () => {
        if ($scope.currentClass !== 'StationDayAgo') return;
        await myAjaxData.timeout(0);
        setDataNull();
        diffSelectOptions();
        $scope.diffGetData();
    };

    // 切换显示形式  图表 or 列表
    $scope.changeShowShape = showShape => {
        $scope.showShape = showShape;
        historicalRecord.set({
            themeElectricityStationDayAgo: {
                ...historicalRecord.get().themeElectricityStationDayAgo || {},
                showShape
            }
        });
        setDataNull();
        diffSelectOptions();
        $scope.diffGetData();
    };

    // 图标轴线切换
    $scope.selectChange = async (arg) => {
        await myAjaxData.timeout(0);
        historicalRecord.set({
            themeElectricityStationDayAgo: {
                ...historicalRecord.get().themeElectricityStationDayAgo || {},
                [arg]: $scope[arg]
            }
        });
        diffChartLineData();
        $scope.$apply();
    };

    $scope.diffGetData = async () => {
        if (!$scope.initComplete) return;
        await myAjaxData.timeout(0);
        const { showShape, dateTime } = $scope;
        if (showShape === 'list') {
            $scope.query_station_day_elec_his_list.getData({
                queryCode: 'query_station_day_elec_his_list',
                queryType: 3,
                date: dateTime.showDate
            });
        } else if (showShape === 'chart') {
            $scope.query_station_day_elec_his_line.getData({
                queryCode: 'query_station_day_elec_his_line',
                queryType: 3,
                date: dateTime.showDate
            });
        }
    };

    // 设备故障， 查看设备详情
    $scope.equipmentDetail = (item, index, event) => {
        if (!event.target.className.includes('clickable')) return;
        const { deviceSerialNnumber, deviceId, pstationid, deviceType: deviceTypeNow, hasJB, stid, eqid } = item;
        $scope.$broadcast("equipmentPopUp", {
            deviceSerialNnumber,
            deviceId,
            pstationid,
            deviceTypeNow,
            hasJB,
            stid: stid || myAjaxDataParent.currentStationData.currentSTID,
            eqid
        });
    };

    $scope.query_station_day_elec_his_list.subscribe(res => {
        $scope.column = [
            {
                title: '设备名称',
                dataIndex: 'eq_name',
                width: '23%',
                sort: true,
                render(text) {
                    return `<span class="clickable">${text}</span>`
                }
            },
            {
                title: '装机容量' + (res.body.units.inst_kw ? '(' + res.body.units.inst_kw + ')' : ''),
                dataIndex: 'inst_kw',
                width: '13%',
                align: 'right',
                sort: true,
            },
            {
                title: '发电量' + (res.body.units.real_kwh_chk ? '(' + res.body.units.real_kwh_chk + ')' : ''),
                dataIndex: 'real_kwh_chk',
                width: '13%',
                align: 'right',
                sort: true,
            },
            {
                title: '发电小时数' + (res.body.units.real_hours ? '(' + res.body.units.real_hours + ')' : ''),
                dataIndex: 'real_hours',
                width: '15%',
                align: 'right',
                sort: true,
            },
            {
                title: 'PR' + (res.body.units.pr ? '(' + res.body.units.pr + ')' : ''),
                dataIndex: 'pr',
                width: '15%',
                sort: true,
                align: 'right',
            },
            {
                title: '故障损失电量' + (res.body.units.fail_we ? '(' + res.body.units.fail_we + ')' : ''),
                dataIndex: 'fail_we',
                width: '15%',
                align: 'right',
                sort: true,
            },
            {
                title: '阴影损失电量' + (res.body.units.shade_we ? '(' + res.body.units.shade_we + ')' : ''),
                dataIndex: 'shade_we',
                width: '15%',
                align: 'right',
                sort: true,
            },
            {
                title: '灰尘损失电量' + (res.body.units.dust_we ? '(' + res.body.units.dust_we + ')' : ''),
                dataIndex: 'dust_we',
                width: '15%',
                align: 'right',
                sort: true,
            },
        ];
    });

    $scope.query_station_day_elec_his_line.subscribe(async res => {
        $scope.select1 = $scope.selectOptions[$scope.select1 || '__'] ? $scope.select1 : 'real_hours';
        $scope.select2 = $scope.selectOptions[$scope.select2 || '__'] ? $scope.select2 : 'real_kwh_chk';
        await $scope.selectChange('select1');
        await $scope.selectChange('select2');
        diffSelectOptions(res.body.units);
        diffChartLineData();
        $scope.$apply();
    });


    // 计算 图表 显示对应 轴
    function diffChartLineData() {
        if (!$scope.initComplete) return;
        const {select1, select2} = $scope;
        
        $scope.xdata = $scope.query_station_day_elec_his_line.res.body.data.eq_name
        $scope.ydatas = [[$scope.query_station_day_elec_his_line.res.body.data[select1]], [$scope.query_station_day_elec_his_line.res.body.data[select2]]]
        
    }

    // 轴线切换  可选项  判断
    function diffSelectOptions(units = {}) {
            $scope.selectOptions = {
                real_hours: '发电小时数' + (units.real_hours ? '(' + units.real_hours + ')' : ''),
                inst_kw: '装机容量' + (units.inst_kw ? '(' + units.inst_kw + ')' : ''),
                real_kwh_chk: '发电量' + (units.real_kwh_chk ? '(' + units.real_kwh_chk + ')' : ''),
                pr: 'PR' + (units.pr ? '(' + units.pr + ')' : ''),
                shade_we: '阴影损失电量' + (units.shade_we ? '(' + units.shade_we + ')' : ''),
                dust_we: '灰尘损失电量' + (units.dust_we ? '(' + units.dust_we + ')' : ''),
            };
    }

    // 数据置空
    function setDataNull() {
        $scope.column = [];
        $scope.xdata = void 0;
        $scope.ydatas = void 0;
        $scope.query_station_day_elec_his_list.res = null;
        $scope.query_station_day_elec_his_line.res = null;
    }

});