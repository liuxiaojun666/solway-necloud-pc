ajaxData({
    //集团、电站---------当日
    deviceCurrent: {
        name: 'GETEquipmentInfo',
        later: true
    },
    //电站---------历史日
    query_station_day_dev_subject_his: {
        name: 'GETquery_station_day_dev_subject_his',
        later: true
    },
    //电站---------月
    query_station_month_dev_subject_his: {
        name: 'GETquery_station_month_dev_subject_his',
        later: true
    },
    //电站---------年
    query_station_year_dev_subject_his: {
        name: 'GETquery_station_year_dev_subject_his',
        later: true
    },
    //集团---------历史日
    query_company_day_dev_subject_his: {
        name: 'GETquery_company_day_dev_subject_his',
        later: true
    },
    //集团---------月
    query_company_month_dev_subject_his: {
        name: 'GETquery_company_month_dev_subject_his',
        later: true
    },
    //集团---------年
    query_company_year_dev_subject_his: {
        name: 'GETquery_company_year_dev_subject_his',
        later: true
    }
}, {
    __serviceName__: 'themeEqumentOperationAjaxData'
    })('themeEqumentOperationCtrl', ['$scope', 'themeEqumentOperationAjaxData', '$interval'], ($scope, myAjaxData,$interval) => {

    $scope.initChildScope($scope, myAjaxData);

    let pieChart = echarts.init(document.getElementById('themeEquipmentPieEchart'))
    const initPieEchart = (fault, comm, maintain, run, wait) => {
        const option = {
            tooltip: {
                trigger: 'item',
                confine:true
            },
            series: [
                {
                    type: 'pie',
                    radius: ['40%', '73%'],
                    center: ['50%', '45%'],
                    label: {
                        normal: {
                            show: false,
                            position: 'inside'
                        },
                        emphasis: {
                            show: false
                        }
                    },
                    lableLine: {
                        normal: {
                            show: false
                        },
                        emphasis: {
                            show: false
                        }
                    },
                    
                    data: [
                        {
                            value:fault,
                            name: '故障台数',
                            itemStyle: {
                                normal: {
                                    color: '#e57d70'
                                }
                            }
                        },
                        {
                            value: comm,
                            name: '离线台数',
                            itemStyle: {
                                normal: {
                                    color: '#a99bac'
                                }
                            }
                        },
                        {
                            value: maintain,
                            name: $scope.pieThirdItemName,//第三个参数，不同情况显示名称不一样
                            itemStyle: {
                                normal: {
                                    color: '#efc185'
                                }
                            }
                        },
                        {
                            value: wait,
                            name: '待机台数',
                            itemStyle: {
                                normal: {
                                    color: '#62a6c9'
                                }
                            }
                        },
                        {
                            value: run,
                            name: '运行台数',
                            itemStyle: {
                                normal: {
                                    color: '#7072c9'
                                }
                            }
                        }
                    ]
                }
            ]
        };
        pieChart.setOption(option)
        pieChart.resize();
    }

    const initParams = async () => {
        if ($scope.detailFullPage) {
            return false; //放大状态，不做处理
        } else {
            if ($scope.getTopXhr === false) return false; //条件未改变，不做处理

            const queryType = $scope.dataType ? 1 : 3 //集团1，电站3
            const dateType = ($scope._dateType == 0) ? 3 : ($scope._dateType == 1 ? 2 : 1);
            const dateTime = $scope._dateTime.showDate;

            await myAjaxData.timeout(0)

            $scope.getAjaxData(queryType, dateTime, dateType)
        };
    }
    
    //父页面初始化完成
    $scope.mainPageInitComplete = () => {
        $scope.themeEquipmentIsLoding = true;
        initParams();
    };

    //切换日期类型
    $scope.dateUpdated = () => {
        if ($scope._dateType != 3) {
            $scope.themeEquipmentIsLoding = true;
            initParams();
        }
    }

    //切换电站
    $scope.switchPowerCallback = () => {
        if ($scope._dateType != 3) {
            $scope.themeEquipmentIsLoding = true;
            initParams();
        }
    }

    //点击放大后
    $scope.switchDetailFullPage = () => {
        initParams();
    }

    //接口
    $scope.getAjaxData = (queryType, dateTime, dateType) => {
        // $scope.themeEquipmentIsLoding = !$scope.deviceCurrent.res;
        if ($scope.currentClass == 'StationDayToday' || $scope.currentClass == 'CompanyDayToday') {
            $scope.deviceCurrent.getData({
                'queryType': queryType,
                'date': dateTime,
                'dateType': dateType
            }).then(res => {
                $scope.themeEquipmentIsLoding = false;
                if (res.code == 0) {
                    const data = res.body;
                    $scope.eqcount = data.fault + data.comm + data.maintain + data.run + data.wait ;
                    $scope.pieThirdItemName = '维护台数';
                    initPieEchart(data.fault, data.comm, data.maintain, data.run, data.wait);//故障、离线、维护、运行、待机
                }
            })
        } else {
            let params = '';
            switch ($scope.currentClass) {
                case 'StationDayAgo':
                    params = 'query_station_day_dev_subject_his'
                    break;
                case 'StationMonth':
                    params = 'query_station_month_dev_subject_his'
                    break;
                case 'StationYear':
                    params = 'query_station_year_dev_subject_his'
                    break;
                case 'CompanyDayAgo':
                    params = 'query_company_day_dev_subject_his'
                    break;
                case 'CompanyMonth':
                    params = 'query_company_month_dev_subject_his'
                    break;
                case 'CompanyYear':
                    params = 'query_company_year_dev_subject_his'
                    break;
                default:
                    break;
            }
            $scope.getHistoryData(params, queryType, dateTime)
        }
    }

    //历史接口
    $scope.getHistoryData = (params, queryType, dateTime) => {
        $scope[params].getData({
            'queryCode': params,
            'queryType': queryType,
            'date': dateTime
        }).then(res => {
            $scope.themeEquipmentIsLoding = false;
            if (res.code == 0) {
                const data = res.body;
                $scope.comp_score = data.comp_score;
                $scope.eqcount = data.eqcount;
                $scope.pieThirdItemName = '告警台数';

                initPieEchart(data.fail_count, data.inter_count, data.alarm_count);//故障、离线、告警
            }
        })
    }

    const interval = $interval(() => {
        if ($scope.currentClass === 'StationDayToday' || $scope.currentClass === 'CompanyDayToday') initParams();
    }, 10000);

    const pieChartResize = () => {
        pieChart.resize();
    }
    window.addEventListener('resize', pieChartResize);

    $scope.$on('$destroy', () => {
        pieChart = null;
        $interval.cancel(interval);
        window.removeEventListener('resize', pieChartResize);
    });
});