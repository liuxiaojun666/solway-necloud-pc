ajaxData({
    selectVideos: {
        name: 'GETPowerStationMonitorSelectVideos',
        data: {},
        onlyLatest: true
    },
}, {
        __serviceName__: 'themeBasicSituationVedioService'
    })('themeBasicSituationVedioCtrl', ['$scope', 'themeBasicSituationVedioService', '$http'], ($scope, myAjaxData, $http) => {
        $scope.selectVideos.subscribe((res) => {
            $scope.params = [];
            const $videosContainer = $('#videosContainer');
            res.videos.forEach((item, i) => {
                $scope.params.push({
                    station_id: item.stId,
                    stream: [
                        {
                            name: item.monitorPointName,
                            source: item.monitorPointSource,
                            dest: item.monitorPointDest
                        }
                    ]
                });
                $videosContainer.append(
                    `<a href="#" title="${item.monitorPointName}" style="
                            position:relative;
                            float:left;
                            display:block;
                            margin-right:2px;
                            margin-bottom:2px;
                            width:${($scope.winWidth - 46) / 3}px;
                            height:${($scope.winWidth - 46) / 4}px" 
                        id="player${i}"></a>`
                );

                flowplayer("player" + i, "vendor/flash/flowplayer/flowplayer-3.2.18.swf", {
                    clip: {
                        url: item.monitorPointDest,
                        provider: 'rtmp',
                        live: true,
                        autoPlay: true,
                    },
                    plugins: {
                        rtmp: {
                            url: 'vendor/flash/flowplayer/flowplayer.rtmp-3.2.8.swf',
                            netConnectionUrl: item.monitorPointDest
                        },
                        controls: {
                            play: false, opacity: 0.5, scrubber: false, volume: false, mute: false, time: false,
                            tooltips: {
                                buttons: true,
                                fullscreen: '全屏',
                            }
                        }
                    }
                }).onBegin(function () {
                    if (!this.again) {
                        setTimeout(() => {
                            this.again = true;
                            this.stop();
                        }, 10 * 1000);
                    } else {
                        $scope.params.push({
                            station_id: item.stId,
                            stream: [
                                {
                                    name: item.monitorPointName,
                                    source: item.monitorPointSource,
                                    dest: item.monitorPointDest
                                }
                            ]
                        });
                    }
                }).onStart(function () {
                    // debugger
                    
                }).onBeforeStop(function (obj) {
                    $scope.params = $scope.params.filter(item => item.stream[0].dest !== obj.url)
                });
            });
            timer();
        });

        async function timer() {
            $scope.params.forEach(item => {
                $http({
                    method: "POST",
                    url: $scope.selectVideos.res.VIDEO_URL,
                    timeout: 4000,
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    data: item,
                });
            });
            if ($scope.isDestroy) return;
            await myAjaxData.timeout(30 * 1000);
            timer();
        }

        $scope.$on('$destroy', () => {
            $scope.isDestroy = true;
        });
    });