ajaxData({
    // 分析类型
    HighAnalysis_selectAnlsType: {
        name: 'GETHighAnalysis_selectAnlsType',
        data: {
            stationClass: '01'
        }
    },
    // 获取echarts图表
    ...((() => {
        const o = {};
        ['1', '2', '3'].forEach(v => {
            ['1', '2', '3', '401', '402', '403', '404', '405', '417', '418', '5', '101', '102'].forEach(vv => {
                ['0', '1', '2', '3', '4', '5'].forEach(vvv => {
                    o['analysis_selectAnlsType' + v + vv + vvv] = {
                        name: `analysis_selectAnlsType${v}${vv}${vvv}`,
                        data: {},
                        later: true
                    }
                })
            })
        });
        return o;
    })()),
},
    {
        anlsType: null,   //分析类型
        herizonData: {},  //横轴数据 纵轴数据
        dmsType: null,    //分析对象参数
        dmsTime: null,    //时间纬度参数
        dmsTypeAs: [[], [], [], []],    //设备 参数
        dmsTypeBs: [[], [], [], []],    //电站|区域(部门)|集团  接口需要的数据
        dmsTypeCs: [[], [], [], []],    //机型/故障类型 参数
        dmsTypeDs: [[], [], [], []],    //机型/故障类型 参数
        dmsTimeDates: [[], [], [], []], //时间 参数 时间数据
        fdX: {            //横轴指标字段 参数
            key: '',
            name: ''
        },
        fdY: {            //纵轴指标字段 参数
            key: '',
            name: ''
        },
        fds: [[], [], [], []],          //横轴、纵轴指标 参数
        analysFds: [[], [], [], []],    //分析指标 参数
        benchSort: [[], [], [], []],  //对标分析 分析指标 排序
        fdStyle: null,    //图表的类型(曲线、柱状、散点)
        fdStyleArr: [],   //图表的类型(数组)
        bIdToName: [{}, {}, {}, {}],    //busiId 和 name的映射
        tableData: [      //图表的历史数据
            {}, {}, {}, {}
        ],
        paramsData: [      //参数的历史数据
            {}, {}, {}, {}
        ],
        analysObjData: [{}, {}, {}, {}], //选择的分析对象 历史数据
        countTime: [{}, {}, {}, {}],     //选择的统计时间 历史数据
        horizonHdata: [{}, {}, {}, {}],  //选择的横轴指标 历史数据
        verticHdata: [{}, {}, {}, {}],   //选择的纵轴指标 历史数据
        alysHdata: [{}, {}, {}, {}],     //选择的分析指标 历史数据
        checkChart: null,  //选中第几个图表
        tableDataTrue: [false, false, false, false],   //第几个图表 是否有历史数据
        alsRlist: null  //分析对象右侧选择的数量
    })('expertAnalysisCtrl', ['$scope', 'myAjaxData', 'actionRecord', '$interval', '$ocLazyLoad', 'toaster'], ($scope, myAjaxData, historicalRecord, $interval, $ocLazyLoad, toaster) => {

        $scope.$on('$destroy', () => {
            myAjaxData.config.tableData = [{}, {}, {}, {}],
                myAjaxData.config.dmsTypeAs = [[], [], [], []],    //设备 参数
                myAjaxData.config.dmsTypeBs = [[], [], [], []],    //电站|区域(部门)|集团  接口需要的数据
                myAjaxData.config.dmsTypeCs = [[], [], [], []],    //机型/故障类型 参数
                myAjaxData.config.dmsTypeDs = [[], [], [], []],    //机型/故障类型 参数
                myAjaxData.config.dmsTimeDates = [[], [], [], []],
                myAjaxData.config.fds = [[], [], [], []],          //横轴、纵轴指标 参数
                myAjaxData.config.analysFds = [[], [], [], []],    //分析指标 参数
                myAjaxData.config.benchSort = [[], [], [], []],
                myAjaxData.config.bIdToName = [{}, {}, {}, {}],
                myAjaxData.config.analysObjData = [{}, {}, {}, {}], //选择的分析对象 历史数据
                myAjaxData.config.countTime = [{}, {}, {}, {}],     //选择的统计时间 历史数据
                myAjaxData.config.horizonHdata = [{}, {}, {}, {}],  //选择的横轴指标 历史数据
                myAjaxData.config.verticHdata = [{}, {}, {}, {}],   //选择的纵轴指标 历史数据
                myAjaxData.config.alysHdata = [{}, {}, {}, {}],
                myAjaxData.config.tableDataTrue = [false, false, false, false],
                myAjaxData.config.checkChart = null,
                myAjaxData.config.fdX = {            //横轴指标字段 参数
                    key: '',
                    name: ''
                },
                myAjaxData.config.fdY = {            //纵轴指标字段 参数
                    key: '',
                    name: ''
                },
                myAjaxData.config.paramsData = [      //参数的历史数据
                    {}, {}, {}, {}
                ],
                myAjaxData.config.alsRlist == 0
        });

        historicalRecord.init();// 历史记录 初始化
        $scope.beforeLoading = true; // 页面loading
        $scope.moduleName = '专家分析';//当前页面名称
        $scope.endDate = new Date((+new Date) - 1000 * 60 * 60 * 24); // 日历可选 的截止日期
        historyInitCallback();

        // 当前页面行为记录初始化回调 获取行为记录
        async function historyInitCallback() {
            const historiData = historicalRecord.get();
            const { } = historiData;
            $scope.beforeLoading = false;
            await myAjaxData.timeout(0);
            $scope.$apply();
        };

        //初始化图表
        var line0 = echarts.init(document.getElementById("line0"));
        var line1 = echarts.init(document.getElementById("line1"));
        var line2 = echarts.init(document.getElementById("line2"));
        var line3 = echarts.init(document.getElementById("line3"));

        //初始化 excelIo
        let excelIo;

        // 分析类型下拉框的数据获取
        $scope.HighAnalysis_selectAnlsType.subscribe(res => {
            $scope.selectData = res.body;
            // analysisObjFun();
        });

        // 选中第一个下拉框 动态改变其他的下拉框
        $scope.queryData = {
            'analysisType': 1
        }

        //获取分析对象的数据
        function analysisObjFun() {
            //获取不同分析类型的数据
            if (!$scope.selectData) return;
            var key;
            for (key in $scope.selectData) {
                if ($scope.queryData.analysisType == $scope.selectData[key].k) {
                    $scope.analysObDataOld = $scope.selectData[key].ll;
                }
            }
            //将设备 和 其他数据分离
            $scope.analysObDataNew = $scope.analysObDataOld.filter((item) => {
                return item.k.substr(0, 1) != "4";
            })

            $scope.analysObDataNewDevice = $scope.analysObDataOld.filter((item) => {
                return item.k.substr(0, 1) == "4";
            })

            //向分析对象发送数据
            $scope.$broadcast('analysObDataNew', { 'analysObDataNew': $scope.analysObDataNew, 'analysObDataNewDevice': $scope.analysObDataNewDevice });

            //向横轴指标发送anlsType
            myAjaxData.config.anlsType = $scope.queryData.analysisType;
        }

        //---------------------------------关联分析 ->散点图方法组
        //获取 x轴和 y轴的 名字和单位
        function indexName() {
            $scope['xname' + $scope.checkChart] = myAjaxData.config.fdX.name;
            $scope['yname' + $scope.checkChart] = myAjaxData.config.fdY.name;
            var key;
            for (key in $scope.tableData.units) {
                if (key == myAjaxData.config.fdX.key) {
                    $scope['xunits' + $scope.checkChart] = $scope.tableData.units[key];
                }
                if (key == myAjaxData.config.fdY.key) {
                    $scope['yunits' + $scope.checkChart] = $scope.tableData.units[key];
                }
            }
        }
        //获取最大值 最小值
        function extreme(newArr) {
            if (newArr.length > 0) {
                var xArr = [];
                var yArr = [];
                newArr.map((item) => {
                    xArr.push(item[0]);
                    yArr.push(item[1]);
                })
                $scope.maxX = xArr.sort((a, b) => {
                    return b - a;
                })[0];

                $scope.minX = xArr.sort((a, b) => {
                    return a - b;
                })[0];

                $scope.maxY = yArr.sort((a, b) => {
                    return b - a;
                })[0];
                $scope.minY = yArr.sort((a, b) => {
                    return a - b;
                })[0];
                if ($scope.maxX > 0) {
                    $scope.maxX = $scope.maxX * 1.1;
                    $scope.maxX = $scope.maxX.toFixed(2);
                } else {
                    $scope.maxX = $scope.maxX * 0.8;
                    $scope.maxX = $scope.maxX.toFixed(2);
                }
                if ($scope.minX > 0) {
                    $scope.minX = 0;
                } else {
                    $scope.minX = $scope.minX * 1.1;
                }
                if ($scope.maxY > 0) {
                    $scope.maxY = $scope.maxY * 1.1;
                    $scope.maxY = $scope.maxY.toFixed(2);
                } else {
                    $scope.maxY = $scope.maxY * 0.8;
                    $scope.maxY = $scope.maxY.toFixed(2);
                }
                if ($scope.minY > 0) {
                    $scope.minY = 0;
                } else {
                    $scope.minY = $scope.minY * 1.1;
                }
            } else {
                $scope.minX = 0;
                $scope.minY = 0;
                $scope.maxX = 100;
                $scope.maxY = 100;
            }

        }
        //图表的setOption
        function chartOption(i, legend, series) {
            echarts.init(document.getElementById('container' + i)).setOption({
                color: [
                    '#dd4444', '#fec42c', '#80F1BE', '#ff0000', '#ff6a00', '#d8ff00', '#7aff00', '#00ffdc', '#00ffff', '#7a00ff', '#c000ff', '#ff00e0', '#ff008d', '#ff0023'
                ],
                legend: legend,
                tooltip: {
                    trigger: 'item',
                    formatter: function (params) {
                        var tooltipFormatter;
                        var xunits = $scope['xunits' + $scope.checkChart] ? $scope['xunits' + $scope.checkChart] : '';
                        if (params['data'][0] != null) {
                            tooltipFormatter = `<div style="font-size: 12px;">${params['data'][0]}${xunits}</div>`;
                        }
                        if (params['data'][1] != null) {
                            var yunits = $scope['yunits' + $scope.checkChart] ? `(${$scope['yunits' + $scope.checkChart]})` : '';

                            var newName = params.seriesName;
                            if (newName.length > 15) {
                                newName = newName.substring(0, 15) + "...";
                            }
                            var str = `${newName} ${$scope['yname' + i]}${yunits}: ${params['data'][1]} 时间:${params['data'][2]}`;

                            tooltipFormatter += `<div style="font-size: 12px;">${str}</div>`;
                        }
                        return tooltipFormatter;
                    },
                    position: function (point, params, dom, rect, size) {
                        // 鼠标坐标和提示框位置的参考坐标系是：以外层div的左上角那一点为原点，x轴向右，y轴向下
                        // 提示框位置
                        var x = 0; // x坐标位置
                        var y = 0; // y坐标位置

                        // 当前鼠标位置
                        var pointX = point[0];
                        var pointY = point[1];

                        // 提示框大小
                        var boxWidth = size.contentSize[0];
                        var boxHeight = size.contentSize[1];

                        // boxWidth > pointX 说明鼠标左边放不下提示框
                        if (boxWidth > pointX) {
                            x = 5;
                        } else { // 左边放的下
                            x = pointX - boxWidth;
                        }

                        // boxHeight > pointY 说明鼠标上边放不下提示框
                        if (boxHeight > pointY) {
                            y = 5;
                        } else { // 上边放得下
                            y = pointY - boxHeight;
                        }

                        return [x, y];
                    }
                },
                xAxis: {
                    name: $scope['xunits' + $scope.checkChart] ? `${$scope['xname' + $scope.checkChart]}(${$scope['xunits' + $scope.checkChart]})` : `${$scope['xname' + $scope.checkChart]}`,
                    min: $scope.minX,
                    max: $scope.maxX,
                    nameTextStyle: {
                        color: '#fff',
                        fontSize: 12
                    },
                    //改变x轴字体颜色为白色
                    axisLabel: {
                        show: true,
                        textStyle: {
                            color: '#fff'
                        }
                    },
                    //去掉x轴分隔线
                    splitLine: {
                        show: false
                    },
                    //设置轴线的属性
                    axisLine: {
                        lineStyle: {
                            color: 'rgba(68, 150, 255, 1)'
                        }
                    }
                },
                yAxis: {
                    name: $scope['yunits' + $scope.checkChart] ? `${$scope['yname' + $scope.checkChart]}(${$scope['yunits' + $scope.checkChart]})` : `${$scope['yname' + $scope.checkChart]}`,
                    min: $scope.minY,
                    max: $scope.maxY,
                    nameTextStyle: {
                        color: '#fff',
                        fontSize: 12
                    },
                    //改变y轴字体颜色为白色
                    axisLabel: {
                        show: true,
                        textStyle: {
                            color: '#fff'
                        }
                    },
                    //设置y轴分隔线
                    splitLine: {
                        lineStyle: {
                            color: 'rgba(68, 150, 255, 1)'
                        }
                    },
                    //设置轴线的属性
                    axisLine: {
                        show: false
                    },
                    //去掉刻度线
                    axisTick: {
                        show: false
                    }
                },
                series: series,
                grid: {
                    top: "26%",
                    right: "14%",
                    bottom: "18%"
                }
            },true)
            setTimeout(() => {
                echarts.getInstanceByDom(document.getElementById('container' + i)).resize();
            }, 0)
        }

        //分析指标发送 fdName
        $scope.$on('analysFds_fdName', (event, data) => {
            $scope['analysfdName' + $scope.checkChart] = data.fdName;
        })

        var tableStyle = {
            1: 'line',
            3: 'bar'
        }

        //找回参数
        function backParams() {
            if (!myAjaxData.config.paramsData[$scope.checkChart].dmsTypeAs) {
                return;
            }
            myAjaxData.config.dmsTypeAs[myAjaxData.config.checkChart] = myAjaxData.config.paramsData[$scope.checkChart].dmsTypeAs;
            myAjaxData.config.dmsTypeBs[myAjaxData.config.checkChart] = myAjaxData.config.paramsData[$scope.checkChart].dmsTypeBs;
            myAjaxData.config.dmsTypeCs[myAjaxData.config.checkChart] = myAjaxData.config.paramsData[$scope.checkChart].dmsTypeCs;
            myAjaxData.config.dmsTypeDs[myAjaxData.config.checkChart] = myAjaxData.config.paramsData[$scope.checkChart].dmsTypeDs;
            myAjaxData.config.dmsTimeDates[myAjaxData.config.checkChart] = myAjaxData.config.paramsData[$scope.checkChart].dmsTime;
            myAjaxData.config.fds[myAjaxData.config.checkChart] = myAjaxData.config.paramsData[$scope.checkChart].fds;
        }

        //调接口前 判空
        function judgeBeforeAjax() {
            if ((($scope.queryData.analysisObjectK == 1 || $scope.queryData.analysisObjectK == 2 || $scope.queryData.analysisObjectK == 3 || $scope.queryData.analysisObjectK == 5) && myAjaxData.config.dmsTypeBs[myAjaxData.config.checkChart].length == 0) || ($scope.queryData.analysisObjectK == 99 && myAjaxData.config.dmsTypeAs[myAjaxData.config.checkChart].length == 0) || (($scope.queryData.analysisObjectK == 101 || $scope.queryData.analysisObjectK == 102) && (myAjaxData.config.dmsTypeCs[myAjaxData.config.checkChart].length == 0 && myAjaxData.config.dmsTypeDs[myAjaxData.config.checkChart].length == 0))) {
                toaster.pop('error', '', '请选择分析对象');
                return false;
            } else if (myAjaxData.config.alsRlist == 0) {
                toaster.pop('error', '', '请选择分析对象');
                return false;
            } else
                if (!$scope.queryData.timeLat && $scope.queryData.analysisType != 3) {
                    toaster.pop('error', '', '请选择时间纬度');
                    return false;
                } else if (myAjaxData.config.dmsTimeDates[myAjaxData.config.checkChart].length == 0) {
                    toaster.pop('error', '', '请选择统计时间');
                    return false;
                } else if (!myAjaxData.config.fdX.key && $scope.queryData.analysisType == 1) {
                    toaster.pop('error', '', '请选择横轴指标');
                    return false;
                } else if (!myAjaxData.config.fdY.key && $scope.queryData.analysisType == 1) {
                    toaster.pop('error', '', '请选择纵轴指标');
                    return false;
                } else if (myAjaxData.config.analysFds[myAjaxData.config.checkChart].length == 0 && $scope.queryData.analysisType != 1) {
                    toaster.pop('error', '', '请选择分析指标');
                    return false;
                } else {
                    return true;
                }
        }

        //查询接口 传的参数
        function ajaxParams() {
            var dataJ = {
                dmsTypeAs: myAjaxData.config.dmsTypeAs[myAjaxData.config.checkChart].length > 0 ? myAjaxData.config.dmsTypeAs[myAjaxData.config.checkChart] : null,
                dmsTypeBs: myAjaxData.config.dmsTypeBs[myAjaxData.config.checkChart].length > 0 ? myAjaxData.config.dmsTypeBs[myAjaxData.config.checkChart] : null,
                dmsTypeCs: myAjaxData.config.dmsTypeCs[myAjaxData.config.checkChart].length > 0 ? myAjaxData.config.dmsTypeCs[myAjaxData.config.checkChart] : null,
                dmsTypeDs: myAjaxData.config.dmsTypeDs[myAjaxData.config.checkChart].length > 0 ? myAjaxData.config.dmsTypeDs[myAjaxData.config.checkChart] : null,
                dmsTime: {
                    dateType: $scope['dmsTimeDateType' + $scope.checkChart],
                    dates: myAjaxData.config.dmsTimeDates[myAjaxData.config.checkChart]
                },
                fds: $scope.queryData.analysisType == 1 ? myAjaxData.config.fds[myAjaxData.config.checkChart] : myAjaxData.config.analysFds[myAjaxData.config.checkChart],
                sort: $scope.queryData.analysisType == 3 ? myAjaxData.config.benchSort[myAjaxData.config.checkChart] : null
            }
            return dataJ;
        }

        //另存一份 params 参数
        function storeAnotherParams() {
            myAjaxData.config.paramsData[$scope.checkChart].dmsTypeAs = JSON.parse(JSON.stringify(myAjaxData.config.dmsTypeAs[myAjaxData.config.checkChart]));
            myAjaxData.config.paramsData[$scope.checkChart].dmsTypeBs = JSON.parse(JSON.stringify(myAjaxData.config.dmsTypeBs[myAjaxData.config.checkChart]));
            myAjaxData.config.paramsData[$scope.checkChart].dmsTypeCs = JSON.parse(JSON.stringify(myAjaxData.config.dmsTypeCs[myAjaxData.config.checkChart]));
            myAjaxData.config.paramsData[$scope.checkChart].dmsTypeDs = JSON.parse(JSON.stringify(myAjaxData.config.dmsTypeDs[myAjaxData.config.checkChart]));
            myAjaxData.config.paramsData[$scope.checkChart].dmsTime = JSON.parse(JSON.stringify(myAjaxData.config.dmsTimeDates[myAjaxData.config.checkChart]));
            myAjaxData.config.paramsData[$scope.checkChart].fds = JSON.parse(JSON.stringify(myAjaxData.config.fds[myAjaxData.config.checkChart]));
        }
        
        //存储历史数据
        function storeData() {
            //获取图表的类型(曲线、柱状、散点)
            myAjaxData.config.tableData[$scope.checkChart].fdStyle = myAjaxData.config.fdStyleArr[$scope.checkChart];
            //获取图表的历史数据
            myAjaxData.config.tableDataTrue[$scope.checkChart] = true;

            $scope['alysType' + $scope.checkChart] = myAjaxData.config.tableData[$scope.checkChart].analysisType = $scope.queryData.analysisType;
            if ($scope.queryData.analysisType != 3) {
                myAjaxData.config.tableData[$scope.checkChart].timeLat = $scope.queryData.timeLat;
            }

            myAjaxData.config.tableData[$scope.checkChart].alsObj = {
                'alsObjk': myAjaxData.config.analysObjData[myAjaxData.config.checkChart].analysisObjectK,
                'dmsType': myAjaxData.config.analysObjData[myAjaxData.config.checkChart].dmsType,
                'equipCItem': myAjaxData.config.analysObjData[myAjaxData.config.checkChart].equipChoiceItem,
                'equipCIndex': myAjaxData.config.analysObjData[myAjaxData.config.checkChart].equipChoiceIndex,
                'checkData': myAjaxData.config.analysObjData[myAjaxData.config.checkChart].checkData,
                'radioItem': myAjaxData.config.analysObjData[myAjaxData.config.checkChart].radioItem
            }

            myAjaxData.config.tableData[$scope.checkChart].ctime = {
                'radioIndex': myAjaxData.config.countTime[myAjaxData.config.checkChart].radioIndex,
                'radioName': myAjaxData.config.countTime[myAjaxData.config.checkChart].radioName,
                'dateType': myAjaxData.config.countTime[myAjaxData.config.checkChart].dateType,
                'checkData': myAjaxData.config.countTime[myAjaxData.config.checkChart].checkData
            };

            myAjaxData.config.tableData[$scope.checkChart].horizon = {
                'hrizonAxisK': myAjaxData.config.horizonHdata[myAjaxData.config.checkChart].hrizonAxisK,
                'hrizonItem': myAjaxData.config.horizonHdata[myAjaxData.config.checkChart].hrizonItem,
                'radioIndex': myAjaxData.config.horizonHdata[myAjaxData.config.checkChart].radioIndex,
                'checkData': myAjaxData.config.horizonHdata[myAjaxData.config.checkChart].checkData
            };

            myAjaxData.config.tableData[$scope.checkChart].vertical = {
                'verticAxisK': myAjaxData.config.verticHdata[myAjaxData.config.checkChart].verticAxisK,
                'verticItem': myAjaxData.config.verticHdata[myAjaxData.config.checkChart].verticItem,
                'radioIndex': myAjaxData.config.verticHdata[myAjaxData.config.checkChart].radioIndex,
                'checkData': myAjaxData.config.verticHdata[myAjaxData.config.checkChart].checkData
            };

            myAjaxData.config.tableData[$scope.checkChart].alys = {
                'alysIndexK': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].alysIndexK,
                'analysData': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].analysData,
                'alysItem': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].alysItem,
                'radioIndex': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].radioIndex,
                'checkData': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].checkData,
                // 'sortType': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].sortType,
                // 'tableType': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].tableType,
                // 'actFdTb': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].actFdTb,
                // 'actFdHb': myAjaxData.config.alysHdata[myAjaxData.config.checkChart].actFdHb
            };
        }

        //最终的 查询按钮
        $scope.loading0 = false;
        $scope.loading1 = false;
        $scope.loading2 = false;
        $scope.loading3 = false;
        $scope.search = () => {
            if ($scope['loading' + $scope.checkChart] == true) {
                toaster.pop('error', '', '稍等加载完毕');
            }
            var judge = judgeBeforeAjax();
            if (!judge) {
                return;
            }
            var dataJ = ajaxParams();
            //接口调用
            $scope['loading' + $scope.checkChart] = true;
            $scope.queryData.timeLat = $scope.queryData.analysisType == 3 ? 0 : $scope.queryData.timeLat;
            $scope['analysis_selectAnlsType' + $scope.queryData.analysisType + myAjaxData.config.dmsType + $scope.queryData.timeLat].getData(dataJ).then((res) => {
                if (res.code == 500) {
                    toaster.pop('error', '', res.code);
                    $scope['loading' + $scope.checkChart] = false;
                    return;
                } else if (!res.body || !res.body.data) {
                    toaster.pop('error', '', res.msg);
                    $scope['loading' + $scope.checkChart] = false;
                    return;
                } else if (Object.keys(res.body.data).length == 0) {
                    toaster.pop('error', '', '图表无数据');
                    $scope['loading' + $scope.checkChart] = false;
                    return;
                }
                //另存一份 params 参数
                storeAnotherParams();
                //存储历史数据
                storeData();

                $scope.tableData = res.body;
                if ($scope.queryData.analysisType == 1) {
                    //获取 x轴和 y轴的 名字和单位
                    indexName();
                    //处理 接口的数据 -> echarts需要的数据
                    var key;
                    var newArr = [];
                    var newArrKey = [];
                    var newArrVal = [];
                    for (key in $scope.tableData.data) {
                        newArr.push(...$scope.tableData.data[key]);
                        newArrVal.push($scope.tableData.data[key]);
                        newArrKey.push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key]);
                    }
                    //获取 series
                    $scope['series' + myAjaxData.config.checkChart] = [];
                    newArrKey.map((item, i) => {
                        $scope['series' + myAjaxData.config.checkChart].push(
                            {
                                name: item,
                                data: newArrVal[i],
                                type: 'scatter',
                                symbolSize: 6,
                                opacity: 1,
                                shadowBlur: 2,
                                shadowOffsetX: 0,
                                shadowOffsetY: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        )
                    })

                    //获取 legend
                    var legend = {
                        y: 'top',
                        data: newArrKey,
                        type: 'scroll',
                        width: 450,
                        itemWidth: 12,
                        left: 'center',
                        textStyle: {
                            color: '#fff',
                            fontSize: 12,
                            height: 20,
                            lineHeight: 20,
                            padding: [3, 0, 0, 0]
                        }
                    }
                    //获取最大值 最小值
                    extreme(newArr);

                    //------------------------------------整合echarts -> table的数据  (excel单个sheet)
                    // $scope['fileName' + $scope.checkChart] = '关联分析';
                    // var arr = [];
                    // $scope['series' + myAjaxData.config.checkChart].forEach((v, i) => {
                    //     var headData = [];
                    //     var secondData = [];
                    //     headData.push(v.name, '', '');
                    //     secondData.push($scope['xname' + $scope.checkChart], $scope['yname' + $scope.checkChart], '统计时间');
                    //     arr.push(headData);
                    //     arr.push(secondData);
                    //     v.data.forEach((xv, xi) => {
                    //         arr.push(xv);
                    //     })
                    // })

                    // var str = ``;
                    // arr.forEach((v, i) => {
                    //     str += `<tr>`;
                    //     v.forEach((xv, xi) => {
                    //         str += `<td>${xv}</td>`;
                    //     })
                    //     str += `</tr>`;
                    // })

                    // $('.chartTable' + $scope.checkChart).html(str);

                    //------------------------------------整合echarts -> table的数据  (excel多个sheet)
                    $scope['spread' + $scope.checkChart] = new GC.Spread.Sheets.Workbook(document.getElementById('relationTable' + $scope.checkChart), { sheetCount: $scope['series' + myAjaxData.config.checkChart].length });
                    excelIo = new GC.Spread.Excel.IO();
                    $scope['series' + myAjaxData.config.checkChart].forEach((v, i) => {
                        var arr = [];
                        var secondData = [];
                        secondData.push($scope['xname' + $scope.checkChart], $scope['yname' + $scope.checkChart], '统计时间');
                        arr.push(secondData);
                        v.data.forEach((xv, xi) => {
                            var newXv = xv.map((xxv, xxi) => {
                                return xxv == null ? '-' : xxv;
                            })
                            arr.push(newXv);
                        })
                        var sheet = $scope['spread' + $scope.checkChart].getSheet(i);
                        sheet.name(v.name);
                        sheet.setArray(0, 0, arr);
                    })

                    //图表的 setoption
                    chartOption($scope.checkChart, legend, $scope['series' + myAjaxData.config.checkChart]);
                } else {
                    // 获取y轴的名字
                    // $scope['yname' + $scope.checkChart] = $scope['yunits' + $scope.checkChart] ? $scope['analysfdName' + $scope.checkChart] + '(' + $scope['yunits' + $scope.checkChart] + ')' : $scope['analysfdName' + $scope.checkChart];
                    // 获取各项数据
                    var key;
                    var key2;
                    $scope['newArrName' + $scope.checkChart] = [];
                    $scope['tableType' + $scope.checkChart] = [];
                    $scope['colors' + $scope.checkChart] = [];
                    $scope['xdata' + $scope.checkChart] = [];
                    $scope['ydatas' + $scope.checkChart] = [];
                    $scope['stack' + $scope.checkChart] = [];
                    $scope['yname' + $scope.checkChart] = [];
                    $scope['series' + $scope.checkChart] = [];
                    //图表 颜色的预设
                    var colorsAry = ['#D2E058', '#F29958', '#71cf53', '#35c4ee', '#FF7070', '#70C7FF', '#FF0072', '#3c763d', '#a94442', '#777777', '#7266ba', '#fad733', '#a733ff', '#e033ff', '#ff33c0', '#ff3362'];
                    if ($scope.queryData.analysisType == 3) {
                        //----------------------------------------------------对标分析 数据处理
                        $scope['ydatas' + $scope.checkChart] = [];
                        for (key in $scope.tableData.data) {
                            //获取到 yname  保证ydatas 和 yname 一致
                            $scope['analysfdName' + $scope.checkChart].forEach((item) => {
                                if (key == item.fdKey) {
                                    var units;
                                    units = $scope.tableData.units[key] ? $scope.tableData.units[key] : '';
                                    $scope['yname' + $scope.checkChart].push(item.fdName + '(' + units + ')');
                                    $scope['newArrName' + $scope.checkChart].push(item.fdName);
                                }
                            })
                            //获取到 fdstyle
                            myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                if (key == item.fdKey) {
                                    $scope['tableType' + $scope.checkChart].push(tableStyle[item.fdStyle]);
                                }
                            })
                            //获取到ydatas   同时获取ydatas 和 fdstyle，保证y轴数据 和 数据类型一致
                            myAjaxData.config.analysFds[myAjaxData.config.checkChart].forEach((son) => {
                                if (key == son.fdKey) {
                                    $scope['ydatas' + $scope.checkChart].push($scope.tableData.data[key]);
                                } else {
                                    if (myAjaxData.config.dmsType == 5) {
                                        $scope['xdata' + $scope.checkChart] = [];
                                        $scope.tableData.data['deptid'].map((item) => {
                                            $scope['xdata' + $scope.checkChart].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][item]);
                                        })
                                    } else {
                                        $scope['xdata' + $scope.checkChart] = [];
                                        $scope.tableData.data[key].map((item) => {
                                            $scope['xdata' + $scope.checkChart].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][item]);
                                        })
                                    }
                                }
                            })
                        }
                        // $scope['tableType' + $scope.checkChart].push(tableStyle[myAjaxData.config.tableData[$scope.checkChart].fdStyle]);
                        // $scope['colors' + $scope.checkChart].push('#D2E058');
                        // $scope['newArrName' + $scope.checkChart].push('对标分析');

                        //-------------------------------------------------------------------重写
                        var yAxis = [];
                        $scope['yname' + $scope.checkChart].forEach((item, i) => {
                            var offset = i == 2 ? 60 : 0;
                            yAxis.push(
                                {
                                    name: item,
                                    offset: offset,
                                    nameTextStyle: {
                                        color: '#fff',
                                        fontSize: 12
                                    },
                                    //改变y轴字体颜色为白色
                                    axisLabel: {
                                        show: true,
                                        textStyle: {
                                            color: '#fff'
                                        }
                                    },
                                    //设置y轴分隔线
                                    splitLine: {
                                        show: false,
                                        lineStyle: {
                                            color: 'rgba(68, 150, 255, 1)'
                                        }
                                    },
                                    //设置轴线的属性
                                    axisLine: {
                                        show: true,
                                        lineStyle: {
                                            color: 'rgba(68, 150, 255, 1)'
                                        }
                                    },
                                    //去掉刻度线
                                    axisTick: {
                                        show: false
                                    }
                                });
                        })

                        $scope['ydatas' + $scope.checkChart].forEach((v, i) => {
                            $scope['series' + $scope.checkChart].push({
                                type: $scope['tableType' + $scope.checkChart][i],
                                name: $scope['newArrName' + $scope.checkChart][i],
                                yAxisIndex: i,
                                data: v.map((xv, xi) => {
                                    return xv === null ? '-' : xv;
                                }),
                                barWidth: 15
                            })
                        })

                        //整合echarts -> table的数据
                        $scope['fileName' + $scope.checkChart] = '对标分析';
                        var headData = ['分析对象'];
                        var arr = [];
                        $scope['xdata' + $scope.checkChart].forEach((v, i) => {
                            arr[i] = [v];
                        })
                        $scope['series' + $scope.checkChart].forEach((v, i) => {
                            headData.push(v.name);
                            v.data.forEach((xv, xi) => {
                                arr[xi].push(xv);
                            })
                        })
                        arr.splice(0, 0, headData);
                        $scope['tableData' + $scope.checkChart] = arr;

                        var str = ``;
                        arr.forEach((v, i) => {
                            str += `<tr>`;
                            v.forEach((xv, xi) => {
                                str += `<td>${xv}</td>`;
                            })
                            str += `</tr>`;
                        })

                        $('.chartTable' + $scope.checkChart).html(str);

                        //初始化echarts 并 塞入数据
                        echarts.init(document.getElementById('line' + $scope.checkChart)).setOption({
                            color: [
                                '#dd4444', '#fec42c', '#80F1BE', '#ff0000', '#ff6a00', '#d8ff00', '#7aff00', '#00ffdc', '#00ffff', '#7a00ff', '#c000ff', '#ff00e0', '#ff008d', '#ff0023'
                            ],
                            tooltip: {
                                trigger: 'axis',
                            },
                            legend: {
                                type: 'scroll',
                                width: 450,
                                data: $scope['newArrName' + $scope.checkChart],
                                textStyle: {
                                    color: '#fff',
                                    fontSize: 12,
                                    height: 20,
                                    lineHeight: 20,
                                    padding: [3, 0, 0, 0]
                                }
                            },
                            xAxis: {
                                data: $scope['xdata' + $scope.checkChart],
                                nameTextStyle: {
                                    color: '#fff',
                                    fontSize: 12
                                },
                                //改变x轴字体颜色为白色
                                axisLabel: {
                                    show: true,
                                    textStyle: {
                                        color: '#fff'
                                    }
                                },
                                //去掉x轴分隔线
                                splitLine: {
                                    show: false
                                },
                                //设置轴线的属性
                                axisLine: {
                                    lineStyle: {
                                        color: 'rgba(68, 150, 255, 1)'
                                    }
                                }
                            },
                            yAxis: yAxis,
                            series: $scope['series' + $scope.checkChart],
                            grid: {
                                top: "26%",
                                right: "14%",
                                bottom: "18%"
                            }
                        }, true)

                        setTimeout(() => {
                            echarts.getInstanceByDom(document.getElementById('line' + $scope.checkChart)).resize();
                        }, 0)

                    } else {
                        //----------------------------------------------------趋势分析 数据处理
                        //获取 xdata
                        $scope['xdata' + $scope.checkChart] = $scope.tableData.data.dtime;
                        $scope['ydatas' + $scope.checkChart] = [];
                        $scope['newArrName' + $scope.checkChart] = [];
                        delete $scope.tableData.data.dtime;
                        //获取 yunits
                        // for (key in $scope.tableData.units) {
                        //     if (key == myAjaxData.config.analysFds[0]['fdKey']) {
                        //         $scope['yunits' + $scope.checkChart] = $scope.tableData.units[key];
                        //     }
                        // }
                        var ydatalen = myAjaxData.config.analysFds[myAjaxData.config.checkChart].length;
                        for (var i = 0; i < ydatalen; i++) {
                            $scope['ydatas' + $scope.checkChart].push([]);
                            $scope['newArrName' + $scope.checkChart].push([]);
                            $scope['tableType' + $scope.checkChart].push([]);
                        }
                        //判断 是否点击 同比 环比
                        myAjaxData.config.analysFds[myAjaxData.config.checkChart].forEach((item, i) => {
                            var judge = item.fdTb.toString() + item.fdHb.toString();
                            var topKey = item.fdKey;
                            var topName;
                            $scope['analysfdName' + $scope.checkChart].forEach((v) => {
                                if (v.fdKey == topKey) {
                                    topName = v.fdName;
                                }
                            })
                            switch (judge) {
                                case '10':
                                    for (key in $scope.tableData.data) {
                                        $scope['yname' + $scope.checkChart] = [];
                                        for (key2 in $scope.tableData.data[key]) {
                                            if (key2.toLowerCase().indexOf('hb') == -1 && key2.toLowerCase().indexOf('tb') == -1) {
                                                if (key2 == topKey) {
                                                    $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                    $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName);
                                                    //获取到 fdstyle
                                                    myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                        if (item.fdKey == key2) {
                                                            $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                        }
                                                    })
                                                }
                                                //同步获取 yname
                                                $scope['analysfdName' + $scope.checkChart].forEach((item) => {
                                                    if (key2 == item.fdKey) {
                                                        var units;
                                                        units = $scope.tableData.units[key2] ? '(' + $scope.tableData.units[key2] + ')' : '';
                                                        $scope['yname' + $scope.checkChart].push(item.fdName + units);
                                                    }
                                                })
                                            } else if (key2.toLowerCase().indexOf('tb') != -1 && key2.toLowerCase().indexOf('rate') == -1) {
                                                if (key2.includes(topKey)) {
                                                    $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                    $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName + '同比');
                                                    //获取到 fdstyle
                                                    myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                        if (key2.includes(topKey)) {
                                                            $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                        }
                                                    })
                                                }
                                            }
                                        }
                                    }
                                    break;
                                case '01':
                                    for (key in $scope.tableData.data) {
                                        $scope['yname' + $scope.checkChart] = [];

                                        for (key2 in $scope.tableData.data[key]) {
                                            if (key2.toLowerCase().indexOf('hb') == -1 && key2.toLowerCase().indexOf('tb') == -1) {
                                                if (key2 == topKey) {
                                                    $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                    $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName);
                                                    //获取到 fdstyle
                                                    myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                        if (item.fdKey == key2) {
                                                            $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                        }
                                                    })
                                                }
                                                //同步获取 yname
                                                $scope['analysfdName' + $scope.checkChart].forEach((item) => {
                                                    if (key2 == item.fdKey) {
                                                        var units;
                                                        units = $scope.tableData.units[key2] ? '(' + $scope.tableData.units[key2] + ')' : '';
                                                        $scope['yname' + $scope.checkChart].push(item.fdName + units);
                                                    }
                                                })
                                            } else if (key2.toLowerCase().indexOf('hb') != -1 && key2.toLowerCase().indexOf('rate') == -1) {
                                                if (key2.includes(topKey)) {
                                                    $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                    $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName + '环比');
                                                    //获取到 fdstyle
                                                    myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                        if (key2.includes(topKey)) {
                                                            $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                        }
                                                    })
                                                }
                                            }
                                        }
                                    }
                                    break;
                                case '11':
                                    for (key in $scope.tableData.data) {
                                        $scope['yname' + $scope.checkChart] = [];
                                        for (key2 in $scope.tableData.data[key]) {
                                            if (key2.toLowerCase().indexOf('hb') == -1 && key2.toLowerCase().indexOf('tb') == -1) {
                                                if (key2 == topKey) {
                                                    $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                    $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName);
                                                    //获取到 fdstyle
                                                    myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                        if (item.fdKey == key2) {
                                                            $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                        }
                                                    })
                                                }
                                                //同步获取 yname
                                                $scope['analysfdName' + $scope.checkChart].forEach((item) => {
                                                    if (key2 == item.fdKey) {
                                                        var units;
                                                        units = $scope.tableData.units[key2] ? '(' + $scope.tableData.units[key2] + ')' : '';
                                                        $scope['yname' + $scope.checkChart].push(item.fdName + units);
                                                    }
                                                })
                                            } else if (key2.toLowerCase().indexOf('hb') != -1 && key2.toLowerCase().indexOf('rate') == -1) {
                                                if (key2.includes(topKey)) {
                                                    $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                    $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName + '环比');
                                                    //获取到 fdstyle
                                                    myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                        if (key2.includes(topKey)) {
                                                            $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                        }
                                                    })
                                                }

                                            } else if (key2.toLowerCase().indexOf('tb') != -1 && key2.toLowerCase().indexOf('rate') == -1) {
                                                if (key2.includes(topKey)) {
                                                    $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                    $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName + '同比');
                                                    //获取到 fdstyle
                                                    myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                        if (key2.includes(topKey)) {
                                                            $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                        }
                                                    })
                                                }


                                            }
                                        }
                                    }
                                    break;
                                case '00':
                                    for (key in $scope.tableData.data) {
                                        $scope['yname' + $scope.checkChart] = [];
                                        for (key2 in $scope.tableData.data[key]) {
                                            if (key2 == topKey) {
                                                $scope['ydatas' + $scope.checkChart][i].push($scope.tableData.data[key][key2]);
                                                $scope['newArrName' + $scope.checkChart][i].push(myAjaxData.config.bIdToName[myAjaxData.config.checkChart][key] + topName);
                                                //获取到 fdstyle
                                                myAjaxData.config.tableData[$scope.checkChart].fdStyle.forEach((item) => {
                                                    if (item.fdKey == key2) {
                                                        $scope['tableType' + $scope.checkChart][i].push(tableStyle[item.fdStyle]);
                                                    }
                                                })
                                            }
                                            //同步获取 yname
                                            $scope['analysfdName' + $scope.checkChart].forEach((item) => {
                                                if (key2 == item.fdKey) {
                                                    var units;
                                                    units = $scope.tableData.units[key2] ? '(' + $scope.tableData.units[key2] + ')' : '';
                                                    $scope['yname' + $scope.checkChart].push(item.fdName + units);
                                                }
                                            })
                                        }
                                    }
                                    break;
                            }
                        })

                        //计算endPercent
                        var dataLen = 0;
                        $scope.endPercent = 0;
                        $scope['ydatas' + $scope.checkChart].forEach(v => {
                            v.forEach((xv) => {
                                dataLen += xv.length;
                            })
                        })
                        $scope.endPercent = dataLen < 30 ? 100 : (30 / dataLen) * 100;

                        //曲线或者柱状图 颜色 的获取
                        $scope['newArrName' + $scope.checkChart].forEach((item, i) => {
                            item.forEach((xitem, xi) => {
                                if (colorsAry[xi]) {
                                    $scope['colors' + $scope.checkChart].push(colorsAry[xi]);
                                } else {
                                    colorsAry[xi] = '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);
                                    $scope['colors' + $scope.checkChart].push(colorsAry[xi]);
                                }
                            })
                        })

                        //yAxis数据 整合
                        var yAxis = [];
                        $scope['yname' + $scope.checkChart].forEach((item, i) => {
                            var offset = i == 2 ? 60 : 0;
                            yAxis.push(
                                {
                                    name: item,
                                    offset: offset,
                                    nameTextStyle: {
                                        color: '#fff',
                                        fontSize: 12
                                    },
                                    //改变y轴字体颜色为白色
                                    axisLabel: {
                                        show: true,
                                        textStyle: {
                                            color: '#fff'
                                        }
                                    },
                                    //设置y轴分隔线
                                    splitLine: {
                                        show: false,
                                        lineStyle: {
                                            color: 'rgba(68, 150, 255, 1)'
                                        }
                                    },
                                    //设置轴线的属性
                                    axisLine: {
                                        show: true,
                                        lineStyle: {
                                            color: 'rgba(68, 150, 255, 1)'
                                        }
                                    },
                                    //去掉刻度线
                                    axisTick: {
                                        show: false
                                    }
                                });
                        })

                        //series数据 整合
                        $scope['ydatas' + $scope.checkChart].forEach((v, i) => {
                            v.forEach((xv, xi) => {
                                $scope['series' + $scope.checkChart].push({
                                    type: $scope['tableType' + $scope.checkChart][i][xi],
                                    name: $scope['newArrName' + $scope.checkChart][i][xi],
                                    yAxisIndex: i,
                                    data: xv.map((xxv, xxi) => {
                                        return xxv === null ? '-' : xxv;
                                    }),
                                    barWidth: 15
                                })
                            })
                        })

                        //整合echarts -> table的数据
                        $scope['fileName' + $scope.checkChart] = '趋势分析';
                        var headData = ['统计时间'];
                        var arr = [];
                        $scope['xdata' + $scope.checkChart].forEach((v, i) => {
                            arr[i] = [v];
                        })
                        $scope['series' + $scope.checkChart].forEach((v, i) => {
                            headData.push(v.name);
                            v.data.forEach((xv, xi) => {
                                arr[xi].push(xv);
                            })
                        })
                        arr.splice(0, 0, headData);
                        $scope['tableData' + $scope.checkChart] = arr;

                        var str = ``;
                        arr.forEach((v, i) => {
                            str += `<tr>`;
                            v.forEach((xv, xi) => {
                                str += `<td>${xv}</td>`;
                            })
                            str += `</tr>`;
                        })

                        $('.chartTable' + $scope.checkChart).html(str);

                        //-------------------------------------------------------------------重写
                        //初始化echarts 并 塞入数据
                        echarts.init(document.getElementById('line' + $scope.checkChart)).setOption({
                            color: $scope['colors' + $scope.checkChart],
                            tooltip: {
                                trigger: 'axis',
                                position: function (point, params, dom, rect, size) {
                                    // 鼠标坐标和提示框位置的参考坐标系是：以外层div的左上角那一点为原点，x轴向右，y轴向下
                                    // 提示框位置
                                    var x = 0; // x坐标位置
                                    var y = 0; // y坐标位置

                                    // 当前鼠标位置
                                    var pointX = point[0];
                                    var pointY = point[1];

                                    // 提示框大小
                                    var boxWidth = size.contentSize[0];
                                    var boxHeight = size.contentSize[1];

                                    // boxWidth > pointX 说明鼠标左边放不下提示框
                                    if (boxWidth > pointX) {
                                        x = 5;
                                    } else { // 左边放的下
                                        x = pointX - boxWidth;
                                    }

                                    // boxHeight > pointY 说明鼠标上边放不下提示框
                                    if (boxHeight > pointY) {
                                        y = 5;
                                    } else { // 上边放得下
                                        y = pointY - boxHeight;
                                    }

                                    return [x, y];
                                }
                            },
                            legend: {
                                type: 'scroll',
                                width: 450,
                                data: $scope['newArrName' + $scope.checkChart].reduce((a, b) => a.concat(b), []),
                                textStyle: {
                                    color: '#fff',
                                    fontSize: 12,
                                    height: 20,
                                    lineHeight: 20,
                                    padding: [3, 0, 0, 0]
                                }
                            },
                            xAxis: {
                                type: 'category',
                                data: $scope['xdata' + $scope.checkChart],
                                nameTextStyle: {
                                    color: '#fff',
                                    fontSize: 12
                                },
                                //改变x轴字体颜色为白色
                                axisLabel: {
                                    show: true,
                                    textStyle: {
                                        color: '#fff'
                                    }
                                },
                                //去掉x轴分隔线
                                splitLine: {
                                    show: false
                                },
                                //设置轴线的属性
                                axisLine: {
                                    lineStyle: {
                                        color: 'rgba(68, 150, 255, 1)'
                                    }
                                }
                            },
                            yAxis: yAxis,
                            series: $scope['series' + $scope.checkChart],
                            dataZoom: [
                                {
                                    type: 'slider',
                                    show: true,
                                    start: 0,
                                    end: $scope.endPercent
                                },
                            ],
                            grid: {
                                top: "26%",
                                right: "14%",
                                bottom: "18%"
                            }
                        }, true)

                        setTimeout(() => {
                            echarts.getInstanceByDom(document.getElementById('line' + $scope.checkChart)).resize();
                        }, 0)
                    }
                }

                $scope['loading' + $scope.checkChart] = false;
            })
        }

        $scope.relaTableExport = (i) => {
            var json = $scope['spread' + $scope.checkChart].toJSON();
            excelIo.save(json, function (blob) {
                saveAs(blob, '关联分析' + ".xlsx");
            }, function (e) {
                console.log(e);
            });
        }

        $ocLazyLoad.load([
            'vendor/spreadjs/scripts/gc.spread.sheets.all.11.0.0.min.js'
        ]).then(() => {
            return $ocLazyLoad.load([
                'vendor/spreadjs/scripts/gc.spread.excelio.11.0.0.min.js'
            ])
        })

        //导出图表
        $ocLazyLoad.load([
            'vendor/jquery/TableExport/libs/js-xlsx/xlsx.core.min.js',
            'vendor/jquery/TableExport/libs/FileSaver/FileSaver.min.js',
            'vendor/jquery/TableExport/tableExport.js'
        ]).then(() => {
            $scope.tableExport = (i) => {
                $('.chartTable' + i).tableExport({
                    headings: true,
                    footers: true,
                    formats: ["xls", "csv", "txt"],
                    fileName: $scope['fileName' + i] ? $scope['fileName' + i] : '未命名',
                    bootstrap: true,
                    position: "bottom",
                    ignoreRows: null,
                    ignoreCols: null
                });
            };
        });

        //双击图表 全屏
        var dblFlag = false;
        $scope.fullscreen = (i) => {
            if (!dblFlag) {
                $scope.chartSortIndex = 1;
                $('.table1').each((index, item) => {
                    if (i == index) {
                        $(item).css({
                            'width': '100%',
                            'height': '100%'
                        })
                    } else {
                        $(item).css({
                            'width': '0',
                            'height': '0'
                        })
                    }
                })
                dblFlag = true;
            } else {
                $scope.chartSortIndex = $scope.chartSortCopy;
                if ($scope.chartSortCopy == 1) {
                    $('.table1').each((index, item) => {
                        $(item).css({
                            'width': '100%',
                            'height': '100%'
                        })
                    })
                } else if ($scope.chartSortCopy == 2) {
                    $('.table1').each((index, item) => {
                        $(item).css({
                            'width': '100%',
                            'height': '49%'
                        })
                    })
                } else if ($scope.chartSortCopy == 3) {
                    $('.table1').each((index, item) => {
                        $(item).css({
                            'width': '49.6%',
                            'height': '100%'
                        })
                    })
                } else if ($scope.chartSortCopy == 4) {
                    $('.table1').each((index, item) => {
                        $(item).css({
                            'width': '49.6%',
                            'height': '49%'
                        })
                    })
                }
                dblFlag = false;
            }
        }

        //切换图表排列方式
        $scope.chartSortCopy = $scope.chartSortIndex = 4;
        $scope.chartSort = (index) => {
            $scope.chartSortCopy = $scope.chartSortIndex = index;
            if ($scope.chartSortIndex == 1) {
                $scope.chartStyle = { 'width': '100%', 'height': '100%' }
            } else if ($scope.chartSortIndex == 2) {
                $scope.chartStyle = { 'width': '100%', 'height': '49%' }
            } else if ($scope.chartSortIndex == 3) {
                $scope.chartStyle = { 'width': '49.6%', 'height': '100%' }
            } else if ($scope.chartSortIndex == 4) {
                $scope.chartStyle = { 'width': '49.6%', 'height': '49%' }
            }
        }

        //图表的点击
        $scope.checkChartFun = async (index) => {
            myAjaxData.config.checkChart = $scope.checkChart = index;
            if (myAjaxData.config.tableDataTrue[$scope.checkChart]) {
                myAjaxData.config.anlsType = $scope.queryData.analysisType = myAjaxData.config.tableData[$scope.checkChart].analysisType;
                await myAjaxData.timeout(200);
                analysisObjFun();
                $scope.$broadcast('haveData', true);
                await myAjaxData.timeout(200);
                $scope.$broadcast('trend_dmsTime', $scope.queryData.timeLat);
                backParams();

            } else {
                $scope.queryData.analysisType = 1;
                await myAjaxData.timeout(500);
                analysisObjFun();
                $scope.$broadcast('haveData', false);
            }
        }
        $scope.checkChartFun(0);

        //散点图---图表初始化
        function chartsInit() {
            // setTimeout(() => {
            var myChart0 = echarts.init(document.getElementById("container0"));
            var myChart1 = echarts.init(document.getElementById("container1"));
            var myChart2 = echarts.init(document.getElementById("container2"));
            var myChart3 = echarts.init(document.getElementById("container3"));
            var option = null;
            option = {
                xAxis: {
                    name: '',
                    min: 0,
                    max: 100,
                    nameTextStyle: {
                        color: '#fff',
                        fontSize: 12
                    },
                    //改变x轴字体颜色为白色
                    axisLabel: {
                        show: true,
                        textStyle: {
                            color: '#fff'
                        }
                    },
                    //去掉x轴分隔线
                    splitLine: {
                        show: false
                    },
                    //设置轴线的属性
                    axisLine: {
                        lineStyle: {
                            color: 'rgba(68, 150, 255, 1)'
                        }
                    }
                },
                yAxis: {
                    name: '',
                    min: 0,
                    max: 100,
                    nameTextStyle: {
                        color: '#fff',
                        fontSize: 12
                    },
                    //改变y轴字体颜色为白色
                    axisLabel: {
                        show: true,
                        textStyle: {
                            color: '#fff'
                        }
                    },
                    //设置y轴分隔线
                    splitLine: {
                        lineStyle: {
                            color: 'rgba(68, 150, 255, 1)'
                        }
                    },
                    //设置轴线的属性
                    axisLine: {
                        show: false
                    },
                    //去掉刻度线
                    axisTick: {
                        show: false
                    }
                },
                series: [],
                grid: {
                    top: "26%",
                    right: "14%",
                    bottom: "18%"
                }
            };
            if (option && typeof option === "object") {
                myChart0.setOption(option, true);
                myChart1.setOption(option, true);
                myChart2.setOption(option, true);
                myChart3.setOption(option, true);
            }
            // }, 0)

        }
        chartsInit();

        //曲线、柱状图---图表初始化
        function lineChartsInit() {
            var option = null;
            option = {
                color: [
                    '#dd4444', '#fec42c', '#80F1BE', '#ff0000', '#ff6a00', '#d8ff00', '#7aff00', '#00ffdc', '#00ffff', '#7a00ff', '#c000ff', '#ff00e0', '#ff008d', '#ff0023'
                ],
                tooltip: {
                    trigger: 'axis',
                },
                legend: {
                    data: [],
                    textStyle: {
                        color: '#fff',
                        fontSize: 12,
                        height: 20,
                        lineHeight: 20,
                        padding: [3, 0, 0, 0]
                    }
                },
                xAxis: [
                    {
                        type: 'category',
                        name: '',
                        data: [],
                        nameTextStyle: {
                            color: '#fff',
                            fontSize: 12
                        },
                        //改变x轴字体颜色为白色
                        axisLabel: {
                            show: true,
                            textStyle: {
                                color: '#fff'
                            }
                        },
                        //去掉x轴分隔线
                        splitLine: {
                            show: false
                        },
                        //设置轴线的属性
                        axisLine: {
                            lineStyle: {
                                color: 'rgba(68, 150, 255, 1)'
                            }
                        }
                    }

                ],
                yAxis: [
                    {
                        type: 'value',
                        name: '温度',
                        offset: 0,
                        nameTextStyle: {
                            color: '#fff',
                            fontSize: 12
                        },
                        //改变y轴字体颜色为白色
                        axisLabel: {
                            show: true,
                            textStyle: {
                                color: '#fff'
                            }
                        },
                        //设置y轴分隔线
                        splitLine: {
                            show: false,
                            lineStyle: {
                                color: 'rgba(68, 150, 255, 1)'
                            }
                        },
                        //设置轴线的属性
                        axisLine: {
                            show: true,
                            lineStyle: {
                                color: 'rgba(255, 255, 255, 1)'
                            }
                        },
                        //去掉刻度线
                        axisTick: {
                            show: false
                        }
                    }

                ],
                series: [],
                grid: {
                    top: "26%",
                    right: "14%",
                    bottom: "18%"
                }
            };
            if (option && typeof option === "object") {
                line0.setOption(option, true);
            }
        }
        lineChartsInit();

        //resize图表
        $('.table1').resize(function () {
            setTimeout(() => {
                var myChart0 = echarts.getInstanceByDom(document.getElementById("container0"));
                var myChart1 = echarts.getInstanceByDom(document.getElementById("container1"));
                var myChart2 = echarts.getInstanceByDom(document.getElementById("container2"));
                var myChart3 = echarts.getInstanceByDom(document.getElementById("container3"));
                myChart0.resize();
                myChart1.resize();
                myChart2.resize();
                myChart3.resize();
                line0.resize();
                line1.resize();
                line2.resize();
                line3.resize();
                // if ($scope['fdStyle' + $scope.checkChart] != 4 && $scope['fdStyle' + $scope.checkChart] && $scope['xdata' + $scope.checkChart] && $scope['ydatas' + $scope.checkChart]) {
                //     echarts.getInstanceByDom(document.getElementById("line" + $scope.checkChart)).resize();
                // }
            }, 500)
        });

        //点击 弹出框
        $scope.analysisObjectModel = true;
        $scope.horizonIndexChange = (param) => {
            if (param == 1) {
                // 纵轴指标弹出
                if ($scope.queryData.timeLat && $scope.horizonNan != 1) {
                    //向纵轴指标发送数据
                    $scope.$broadcast('verticalData');
                    $scope.verticalIndexModel = true;
                } else if (!$scope.queryData.timeLat) {
                    toaster.pop('error', '', '请选择时间纬度');
                } else if ($scope.horizonNan == 1) {
                    toaster.pop('error', '', '纵轴指标无数据');
                }
            } else if (param == 2) {
                // 横轴指标弹出
                if ($scope.queryData.timeLat && $scope.horizonNan != 1) {
                    //监听横轴指标页面打开
                    $scope.$broadcast('horizonOpen');
                    $scope.horizonIndexModel = true;
                } else if (!$scope.queryData.timeLat) {
                    toaster.pop('error', '', '请选择时间纬度');
                } else if ($scope.horizonNan == 1) {
                    toaster.pop('error', '', '横轴指标无数据');
                }
            } else if (param == 3) {
                // 统计时间弹出
                $scope.countTimeModel = true;
            } else if (param == 4) {  //时间纬度 弹出
                if (!$scope.queryData.timeLat) {
                    $scope.haveData2 = false;
                    $scope.queryData.horizonIndexV = '请选择';
                    $scope.queryData.verticalIndexV = '请选择';
                } else {
                    $scope.haveData2 = true;
                    //向横轴指标发送数据
                    if ($scope.queryData.analysisType == 1) {
                        $scope.$broadcast('dmsTime', $scope.queryData.timeLat);
                    } else if ($scope.queryData.analysisType == 2) {
                        $scope.$broadcast('trend_dmsTime', $scope.queryData.timeLat);
                    }
                    $scope.$broadcast('clearTime');
                    $scope.haveData3 = false;
                }
            } else if (param == 5) {
                // 分析对象弹出
                if ($scope.analysObDataNew) {
                    $scope.analysisObjectModel = true;
                }
            } else if (param == 6) {
                // 分析类型下拉框 选中处理数据
                analysisObjFun();
                $scope.$broadcast('clearTime');
                $scope.haveData3 = false;
            } else if (param == 7) {
                // 分析指标弹出
                if (myAjaxData.config.anlsType == 2 && $scope.queryData.timeLat && $scope.analysNan != 1) {
                    $scope.analysIndexModel = true;
                    $scope.$broadcast('analysOpen');
                } else if (myAjaxData.config.anlsType == 3 && $scope.analysNan != 1) {
                    $scope.analysIndexModel = true;
                    $scope.$broadcast('analysOpen');
                } else if (!$scope.queryData.timeLat) {
                    toaster.pop('error', '', '请选择时间纬度');
                } else if ($scope.analysNan == 1) {
                    toaster.pop('error', '', '分析指标无数据');
                }
            }
        }

        //给按钮赋初始值
        $scope.queryData.analysisObjectV = '请选择';
        $scope.queryData.timeLatV = '请选择';
        $scope.queryData.countTimeV = '请选择';
        $scope.queryData.horizonIndexV = '请选择';
        $scope.queryData.verticalIndexV = '请选择';
        $scope.queryData.analysIndexV = '请选择';

        //获取子级发送的数据(被选择的radio)
        $scope.$on('radioToFather', (event, data) => {
            if (data.type == 'horizon') {
                //选择的是横轴指标
                $scope.queryData.horizonIndexK = data.k;
                $scope.queryData.horizonIndexV = data.value;
            } else if (data.type == 'countTime') {
                $scope.queryData.countTimeV = data.name;
                $scope['dmsTimeDateType' + $scope.checkChart] = data.dateType;
            } else if (data.type == 'analysisObject') {
                $scope.queryData.analysisObjectK = data.k;
                $scope.queryData.analysisObjectV = data.value;
                $scope.$broadcast('clearTime');
                $scope.haveData3 = false;
                //对标分析-> 取dmsType
                if ($scope.queryData.analysisType == 3 && data.k != 99) {
                    $scope.$broadcast('bench_dmsType', $scope.queryData.analysisType);
                }
                // 取时间纬度的数据
                if (data.isHistory) {
                    setTimeout(() => {
                        if ($scope.queryData.analysisType != 3) {
                            $scope.changeTime = 2;
                            $scope.queryData.timeLat = myAjaxData.config.tableData[$scope.checkChart].timeLat;
                        }
                        if ($scope.analysObDataNew) {
                            $scope.analysObDataNew.map((item) => {
                                if (item.k == $scope.queryData.analysisObjectK) {
                                    $scope.timeLat = item.ll;
                                }
                            })
                        }
                        $scope.haveData2 = true;
                    }, 0)
                } else {
                    $scope.queryData.timeLat = '';
                    $scope.haveData2 = false;
                    $scope.queryData.horizonIndexV = '请选择';
                    $scope.queryData.verticalIndexV = '请选择';
                    $scope.queryData.analysIndexV = '请选择';
                    if ($scope.analysObDataNew) {
                        $scope.analysObDataNew.map((item) => {
                            if (item.k == $scope.queryData.analysisObjectK) {
                                $scope.timeLat = item.ll;
                                myAjaxData.config.fdX.key = null;
                                myAjaxData.config.fdY.key = null;
                            }
                        })
                    }
                }

            } else if (data.type == 'vertical') {
                //选择的是纵轴指标
                $scope.queryData.verticalIndexV = data.value;
            } else if (data.type == 'analys') {
                //选择的是分析指标
                $scope.queryData.analysIndexV = data.value;
            }
        })

        // 逆变器 汇流箱 点击 特殊处理 时间纬度的数据
        $scope.$on('deviceTimeLat', (event, v) => {
            if (!v.isHistory) {
                $scope.queryData.timeLat = '';
                $scope.queryData.horizonIndexV = '请选择';
                $scope.queryData.verticalIndexV = '请选择';
                $scope.queryData.analysIndexV = '请选择';
            }
            $scope.timeLat = v.ll;
            $scope.$broadcast('clearTime');
            $scope.haveData3 = false;
            $scope.haveData5 = false;
            $scope.haveData6 = false;
            //对标分析-> 取dmsType
            if ($scope.queryData.analysisType == 3) {
                $scope.$broadcast('bench_dmsType', $scope.queryData.analysisType);
            }
        })

        //横轴指标没有数据的 标志符
        $scope.$on('horizonNan', (event, v) => {
            $scope.horizonNan = v.data;
        })
        //分析指标没有数据的 标志符
        $scope.$on('analysNan', (event, v) => {
            $scope.analysNan = v.data;
        })

        //取消后的回调
        $scope.analysisObjectModel = false;
        $scope.$on('cancelCallback', () => {
            $scope.analysisObjectModel = false;
            $scope.countTimeModel = false;
            $scope.horizonIndexModel = false;
            $scope.verticalIndexModel = false;
            $scope.analysIndexModel = false;
        });

        //新增后的回调
        $scope.$on('addCallback', (event, v) => {
            if (v == 'analysisObj') {
                $scope.haveData1 = true;
            } else if (v == 'countTime') {
                $scope.haveData3 = true;
            } else if (v == 'analysAxisIndex') {
                $scope.haveData4 = true;
            } else if (v == 'horizontalAxisIndex') {
                $scope.haveData5 = true;
            } else if (v == 'verticalAxisIndex') {
                $scope.haveData6 = true;
            }
            $scope.analysisObjectModel = false;
            $scope.countTimeModel = false;
            $scope.horizonIndexModel = false;
            $scope.verticalIndexModel = false;
            $scope.analysIndexModel = false;
        });

        //没有选数据的标志符
        $scope.$on('noChecked', (event, v) => {
            if (v == 'analysisObj') {
                $scope.haveData1 = false;
            } else if (v == 'countTime') {
                $scope.haveData3 = false;
            } else if (v == 'analysAxisIndex') {
                $scope.haveData4 = false;
            } else if (v == 'horizontalAxisIndex') {
                $scope.haveData5 = false;
            } else if (v == 'verticalAxisIndex') {
                $scope.haveData6 = false;
            }
        });
    });

