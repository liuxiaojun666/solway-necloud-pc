ajaxData({
    authoritySave:{
        name:'POSTauthoritySave',
        data: {},
        later: true,
        onlyLatest: true
    },
    layoutDetail:{
        name:'GETlayoutDetail',
        data: {},
        later: true,
        onlyLatest: true
    },
    queryBPowerStation:{
        name:'GETqueryBPowerStation',
        data: {},
        later: true,
        onlyLatest: true
    }
}, {
    __serviceName__: 'newSvgModelService',
})('newSvgModelCtrl', ['$scope', 'newSvgModelService', 'actionRecord','$timeout','toaster','$http','$interval'], ($scope, myAjaxData, historicalRecord,$timeout,toaster,$http,$interval) => {

    window.pStationSelectChange = $scope.pStationSelectChange = function (pstationId) {
        $scope.queryDeviceSelectData("BLayoutConfig/queryBJunctionBox.htm", pstationId, "HLX");
        $scope.queryDeviceSelectData("BLayoutConfig/queryBInverter.htm", pstationId, "NBQ");
        $scope.queryDeviceSelectData("BLayoutConfig/queryBInverter.htm?hasJb=1", pstationId, "NBQHLX");
        $scope.queryDeviceSelectData("BLayoutConfig/queryBBoxChange.htm", pstationId, "XB");
        $scope.queryDeviceSelectData("BLayoutConfig/queryBWindTurbine.htm", pstationId, "windTurbine");
        $scope.queryDeviceSelectData("BLayoutConfig/queryBWindTower.htm", pstationId, "windTower");
        $scope.queryDeviceSelectData("BLayoutConfig/queryVideoConfig.htm", pstationId, "videoImage");
        $scope.queryDeviceSelectData("BLayoutConfig/queryMeterConfig.htm", pstationId, "Meter");
        $scope.queryDeviceSelectData("BLayoutConfig/queryMeteorographConfig.htm", pstationId, "Meteorograph");
    };

    $scope.queryDeviceSelectData = function (url, pstationId, type) {
        $http({
            method: "POST",
            url: url,
            params: {
                pstationId: pstationId
            }
        }).success(function (res) {
            if (res.key == 0){
                svgIframe.window.dataInitSelect(res, type);
            }
        });
    };

    $scope.init = function () {
        if (svgIframe.window.svgCanvas == undefined) return;
        $interval.cancel($scope.time);
        if ($scope.id){
            $scope.dataInitEdit();
        }else {
            $scope.dataInitCreate();
        }
    };

    //初始
    $scope.$on('newSvgBroad',function(e,data){
        $scope.id = data.id;
        $scope.time = $interval($scope.init, 100);
    });

    $scope.dataInitEdit = function () {
        $scope.layoutDetail.getData({
            id:$scope.id
        }).then(res=>{
            if (res.key == 0){
                svgIframe.window.setDataWithEdit(res.data);
            }
        });
    };

    $scope.dataInitCreate = function () {
        $scope.queryBPowerStation.getData().then(res=>{
            if (res.key == 0){
                svgIframe.window.setDataWithCreate(res);
            }
        });
    };

    window.saveSvgDataToDataBase = $scope.saveSvg = function (data) {
        let svgCanvas = svgIframe.window.svgCanvas;
        let blob = new Blob([svgCanvas.getSvgString()], {type:"text/xml"});
        let formData = new FormData();
        formData.append("id", data.id);
        formData.append("entityId", data.entityId);
        formData.append("name", data.name);
        formData.append("file", blob);
        formData.append("isDisplay", data.isDisplay);
        $.ajax({
            type:'POST',
            url: 'BLayoutConfig/updateBLayoutConfig.htm',
            processData: false,
            cache: false,
            contentType: false,
            data: formData,
            success: function(result){
                if (result.key == 0){
                    toaster.pop('success','','保存成功');
                    $scope.$emit('saveSuccess');
                }else{
                    toaster.pop('error','','保存失败');
                }
            }
        });
    };

    window.cancelSvgClick = $scope.cancelSvg = function () {
        $scope.$emit('cancelCallback');
    }
    
});