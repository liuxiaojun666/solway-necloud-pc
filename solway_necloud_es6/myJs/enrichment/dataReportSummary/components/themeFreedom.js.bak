ajaxData(
    {
        freeRptPage: {
            name: 'GETfreeRptPage',
            data: {},
            later: true,
        }
    }, {
        __serviceName__: 'themeFreedomService',
    }
)('themeFreedomCtrl', ['$scope', 'themeFreedomService', 'actionRecord', 'toaster'], ($scope, myAjaxData, historicalRecord, toaster) => {
    /// 初始化 scope
    $scope.initChildScope($scope, myAjaxData);

    // 主页面初始化完成 回调
    $scope.mainPageInitComplete = async () => {
        let { timeRange } = historicalRecord.get().themeFreedom || {};
        const { dateType, dateTime } = historicalRecord.get();
        $scope.dateType = dateType;
        $scope.dateTime = dateTime;
        await $scope.dateUpdated();
        $scope.timeRange = timeRange;
        $('.ng-clock').removeClass('ng-clock');
        $scope.initComplete = true;
        await myAjaxData.timeout(0);
        $scope.freeRptPage.beforGetData();
        $scope.$apply();
    };

    // 日期改变
    $scope.dateUpdated = async () => {
        await myAjaxData.timeout(0);
        $scope.$apply();
        $scope.freeRptPage.beforGetData();
    };

    // 切换电站
    $scope.switchPowerCallback = () => {
        getTabData();
        $scope.freeRptPage.beforGetData();
    }

    // 列表 接口请求
    $scope.freeRptPage.beforGetData = () => {
        if (!$scope.initComplete) return;
        $scope.column = [];
        const {_dateType, _dateTime, keywords} = $scope;
        $scope.freeRptPage.getData({
            pageIndex: 0,
            pageSize: 10,
            dateType: _dateType,
            queryDate: _dateTime.showDate,
            keywords
        });
    };

    // 列表 接口 返回
    $scope.freeRptPage.subscribe(res => {
        
        $scope.column = [
            {
                title: '报表名称',
                dataIndex: 'name',
                sort: true,
                align: 'center',
            },
            {
                title: '报表日期',
                dataIndex: 'rdate',
                sort: true,
                align: 'center',
                render(text) {
                    return new Date(text).Format('yyyy-MM-dd');
                }
            },
            {
                title: '生成时间',
                dataIndex: 'ctime',
                sort: true,
                align: 'center',
                render(text) {
                    return new Date(text).Format('yyyy-MM-dd');
                }
            },
            {
                title: '操作',
                dataIndex: 'fid',
                sort: true,
                align: 'center',
                render(text) {
                    return `<a target="_blank" style="color: #428bca;" href="minio/download.htm?id=${text}">下载</a>`;
                }
            },
        ];
    });


});