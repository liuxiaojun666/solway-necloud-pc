ajaxData({
    // 给默认选中电站
    getuserAuthHandleSetSTClass: {
        name: 'GETUserAuthHandleSetSTClass',
        data: {},
        later: true
    },
    // 切换电站
    changeStation: {
        name: 'GETUserAuthHandleChangeDataType',
        data: {},
        later: true
    },
    // 基本电站信息
    getUserAuthHandleGetCurrentInfo: {
        name: 'GETUserAuthHandleGetCurrentInfo',
        data: {},
        later: true
    },
    // 电站基本信息 新
    getCurrentInfoNew: {
        name: 'GETgetCurrentInfoNew',
        data: {},
        later: true
    },
    // 报表展示  tab
    tab: {
        name: 'GETreportShowTab',
        data: {},
        later: true
    },
    // 报表展示 view
    view: {
        name: 'GETreportShowView',
        data: {},
        later: true
    },
    // 报表展示  判断用户是否订阅
    checkSubscribe: {
        name: 'GETreportShowUserCheckSubscribe',
        data: {},
        later: true
    },
    // 报表展示  用户订阅操作
    subscribe: {
        name: 'reportShowUserDoSubscribe',
        data: {},
        later: true
    }
}, {})('dataReportSummaryCtrl', ['$scope', 'myAjaxData', 'actionRecord', 'toaster'], ($scope, myAjaxData, historicalRecord, toaster) => {
    historicalRecord.init();// 历史记录 初始化
    $scope.beforeLoading = true; // 页面loading
    $scope.moduleName = '数据报表';//当前页面名称；
    $scope.endDate = new Date((+new Date) - 1000 * 60 * 60 * 24); // 日历可选 的截止日期
    historyInitCallback();
    // 当前页面行为记录初始化回调 获取行为记录
    async function historyInitCallback() {
        const historiData = historicalRecord.get();
        const {
            dateType = 0,
            dateTime = new Date(+$scope.endDate),
            stationData,
            timeRange = 0,
        } = historiData;
        if (!dateTime.showDate) dateTime.showDate = dateTime.Format('yyyy-MM-dd');
        $scope.dateTime = dateTime;
        $scope.dateType = dateType;
        $scope._dateTime = dateTime;
        $scope._dateType = dateType;
        $scope.timeRange = timeRange;
        if (!stationData) historicalRecord.set({ dateType, dateTime });
        await diffStationInfo(stationData);
        $scope.beforeLoading = false;
        getTabData();
        $scope.$apply();
    };

    // 父页面重载  可修改记录
    $scope.reloadParentPage = async (data = {}) => {
        historicalRecord.set(data);
        $scope.beforeLoading = true;
        if (data.stationData) {
            await $scope.changeStation.getData(data.stationData);
            historicalRecord.set({ stationData: data.stationData });
            const stationInfo = await $scope.getCurrentInfoNew.getData({ currentView: '00', isGroup: 1 });
            myAjaxData.setCurrentStationData(stationInfo);
            const { currentDataName } = stationInfo;              
            $scope.switchPowerScope.currentDataName = currentDataName;
            $scope.switchPowerCallback(data.stationData);
        }
        return historyInitCallback();
    };

    // 日期更新后回调   range 时间范围（日月年累计）    date 为日期
    $scope.dateUpdated = async (dateType, dateTime) => {
        await myAjaxData.timeout(0);
        let getDataType = 0;
        if (!Object.is(dateType, historicalRecord.get().dateType)) getDataType = 1;
        historicalRecord.set({ dateType, dateTime });
        if (dateType < 3 && !dateTime.showDate) dateTime.showDate = dateTime.Format('yyyy-MM-dd');
        $scope._dateType = dateType;
        $scope._dateTime = dateTime;
        if (getDataType) getTabData();
        else $scope.changeTab2($scope.tabIndex);
    };

    // 切换电站 回调
    $scope.switchPowerCallback = (switchArguments, switchPowerScope) => {
        if (switchPowerScope) $scope.switchPowerScope = switchPowerScope;
        if (!switchArguments) return;
        $scope.dataType = switchArguments.dataType;
        historicalRecord.set({ stationData: switchArguments });
        return getTabData();
    };


    // 电站 信息  对比
    async function diffStationInfo(stationData) {
        while (!$scope._getStationInfo) await myAjaxData.timeout(100);
        const currentStationData = await $scope._getStationInfo;
        if (myAjaxData.currentStationData.isMan === 1) return;
        if (!myAjaxData.currentStationData.currentSTID && myAjaxData.currentStationData.currentSTID !== 0) { // 没有选择过电站
            const res = await $scope.getuserAuthHandleSetSTClass.getData({});
            if (res.result === false) {
                alert('没有选择任何 公司 或 电站，请联系管理员');
                return window.location.href = '/index.jsp'
            }
            return window.location.reload();
        }
        if (!stationData) { // 没有记录电站信息  
            const { currentSTID: id, currentSTType: isGroup, currentType: dataType, currentSTClass: stClass } = await $scope.getUserAuthHandleGetCurrentInfo.getData({});
            $scope.switchPowerCallback({ id, isGroup, dataType, stClass });
        } else if (Object.is(myAjaxData.currentStationData.currentSTID, stationData.id)) { // 电站信息 没有变化
            await myAjaxData.timeout(500);
            $scope.switchPowerCallback(stationData);
        } else { // 电站信息  发生变化   切换到记录中的电站
            const { currentSTID: id, currentSTType: isGroup, currentType: dataType, currentSTClass: stClass } = await $scope.getUserAuthHandleGetCurrentInfo.getData({});
            const stationInfo = await $scope.getCurrentInfoNew.getData({ currentView: '00', isGroup: 1 });
            myAjaxData.setCurrentStationData(stationInfo);
            return $scope.reloadParentPage({ stationData: { id, isGroup, dataType, stClass } });
            // const { result } = await $scope.changeStation.getData(stationData);
            // if (!result) {
            //     const { currentSTID: id, currentSTType: isGroup, currentType: dataType, currentSTClass: stClass } = await $scope.getUserAuthHandleGetCurrentInfo.getData({});
            //     return $scope.reloadParentPage({ stationData: { id, isGroup, dataType, stClass } });
            // }
            // const stationInfo = await $scope.getCurrentInfoNew.getData({ currentView: '00', isGroup: 1 });
            // myAjaxData.setCurrentStationData(stationInfo);
            // const { currentDataName } = stationInfo

            // $scope.switchPowerScope.currentDataName = currentDataName;
            // $scope.switchPowerCallback(stationData);
        }
    };

    // 获取tab
    function getTabData() {
        if ($scope.beforeLoading) return;
        const { dataType, _dateType } = $scope;
        return $scope.tab.getData({
            useSt: dataType === 0 ? 1 : 0,
            reportType: [4, 2, 1, null, 3][_dateType]
        });
    }

    // 默认操作 选择第一个tab 第一个子tab
    $scope.tab.getDataCallback = (success, res) => {
        if (!success) return;
        if (!res.body) toaster.pop("error", "", res.msg);
        return res.body && res.body[0] && $scope.changeTab1(0);
    };

    // 切换 第一层 tab
    $scope.changeTab1 = index => {
        $scope.timeRange = index;
        historicalRecord.set({ timeRange: index });
        $scope.checkSubscribe.getData({ tabId: $scope.tab.res.body[index].id });
        return $scope.changeTab2($scope.tab.res.body[index].subTabs[(historicalRecord.get().tab2Index || 0)] ? (historicalRecord.get().tab2Index || 0) : 0);
    };

    // 切换 第二次 tab
    $scope.changeTab2 = index => {
        if (index === void 0) return;
        $scope.tabIndex = index;
        historicalRecord.set({ tab2Index: index });
        $scope.timeType = [null, 'YEAR', 'MONTH', 'WEEK', 'DAY'][$scope.tab.res.body[$scope.timeRange].reportType];
        const { timeType, _dateTime, dataType } = $scope;
        return $scope.view.getData({
            timeType,
            subTabId: $scope.tab.res.body[$scope.timeRange].subTabs[index].id,
            style: 0,
            useSt: dataType === 0 ? 1 : 0,
            dateStr: _dateTime.showDate
        });
    };

    // view 处理
    $scope.view.getDataCallback = (success, res) => {
        if (!success) return;
        return document.getElementById('automaticReportView').innerHTML = res;
    };

    $scope.clickSubscribe = () => {
        const { tab, timeRange, checkSubscribe } = $scope;
        if (checkSubscribe.res.body.doSubscribe !== 1) return toaster.pop("error", "", "订阅失败：" + '该报表不可订阅');
        return $scope.subscribe.getData({ tabId: tab.res.body[timeRange].id, subscribeAble: checkSubscribe.res.body.hasSubscribe ? 0 : 1 });
    };

    // 订阅操作 后处理
    $scope.subscribe.getDataCallback = (success, res) => {
        if (!success) return;
        if (res.code !== 0) return toaster.pop("error", "", "error:" + res.msg);
        toaster.pop("success", "", res.msg);
        return $scope.checkSubscribe.getData({});
    };
});