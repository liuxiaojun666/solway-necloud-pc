ajaxData({
    // 给默认选中电站
    getuserAuthHandleSetSTClass: {
        name: 'GETUserAuthHandleSetSTClass',
        data: {},
        later: true
    },
    // 切换电站
    changeStation: {
        name: 'GETUserAuthHandleChangeDataType',
        data: {},
        later: true
    },
    // 基本电站信息
    getUserAuthHandleGetCurrentInfo: {
        name: 'GETUserAuthHandleGetCurrentInfo',
        data: {},
        later: true
    },
    // 电站基本信息 新
    getCurrentInfoNew: {
        name: 'GETgetCurrentInfoNew',
        data: {},
        later: true
    },
}, {})('dataReportSummaryCtrl', ['$scope', 'myAjaxData', 'actionRecord', 'toaster'], ($scope, myAjaxData, historicalRecord, toaster) => {
    historicalRecord.init();// 历史记录 初始化
    $scope.beforeLoading = true; // 页面loading
    $scope.moduleName = '数据报表';//当前页面名称；
    $scope.endDate = new Date((+new Date) - 1000 * 60 * 60 * 24); // 日历可选 的截止日期
    historyInitCallback();
    // 当前页面行为记录初始化回调 获取行为记录
    async function historyInitCallback() {
        const historiData = historicalRecord.get();
        const {
            dateType = 0,
            dateTime = new Date(+$scope.endDate),
            stationData,
            timeRange = 0,
            theme = 'General',
        } = historiData;
        if (!dateTime.showDate) dateTime.showDate = dateTime.Format('yyyy-MM-dd');
        $scope.dateTime = dateTime;
        $scope.dateType = dateType;
        $scope._dateTime = dateTime;
        $scope._dateType = dateType;
        $scope.timeRange = timeRange;
        $scope.weekTimeStart = new Date(Date.now() - 1000 * 60 * 60 * 24 * 8);
        $scope.theme = theme;
        $scope.themeDetail = `tpl/enrichment/dataReportSummary/components/theme${theme}.html${$scope.stamp}`;
        if (!stationData) historicalRecord.set({ dateType, dateTime });
        await diffStationInfo(stationData);
        $scope.beforeLoading = false;
        $scope.mainPageInitComplete && $scope.mainPageInitComplete($scope.currentClass);

        // getTabData();
        $scope.$apply();
    };

    // 父页面重载  可修改记录
    $scope.reloadParentPage = async (data = {}) => {
        historicalRecord.set(data);
        $scope.beforeLoading = true;
        if (data.stationData) {
            await $scope.changeStation.getData(data.stationData);
            historicalRecord.set({ stationData: data.stationData });
            const stationInfo = await $scope.getCurrentInfoNew.getData({ currentView: '00', isGroup: 1 });
            myAjaxData.setCurrentStationData(stationInfo);
            const { currentDataName } = stationInfo;              
            $scope.switchPowerScope.currentDataName = currentDataName;
            $scope.switchPowerCallback(data.stationData);
        }
        return historyInitCallback();
    };

    // 日期更新后回调   range 时间范围（日月年累计）    date 为日期
    $scope.dateUpdated = async (dateType, dateTime) => {
        await myAjaxData.timeout(0);
        historicalRecord.set({ dateType, dateTime });
        if (dateType < 3 && !dateTime.showDate) dateTime.showDate = dateTime.Format('yyyy-MM-dd');
        $scope._dateType = dateType;
        $scope._dateTime = dateTime;
    };

    $scope.weekUpdated = () => {
        $scope.dateUpdated($scope._dateType, $scope._dateTime);
    };

    // 切换电站 回调
    $scope.switchPowerCallback = (switchArguments, switchPowerScope) => {
        if (switchPowerScope) $scope.switchPowerScope = switchPowerScope;
        if (!switchArguments) return;
        $scope.dataType = switchArguments.dataType;
        historicalRecord.set({ stationData: switchArguments });
        // return getTabData();
    };


    // 电站 信息  对比
    async function diffStationInfo(stationData) {
        while (!$scope._getStationInfo) await myAjaxData.timeout(100);
        const currentStationData = await $scope._getStationInfo;
        if (myAjaxData.currentStationData.isMan === 1) return;
        if (!myAjaxData.currentStationData.currentSTID && myAjaxData.currentStationData.currentSTID !== 0) { // 没有选择过电站
            const res = await $scope.getuserAuthHandleSetSTClass.getData({});
            if (res.result === false) {
                alert('没有选择任何 公司 或 电站，请联系管理员');
                return window.location.href = '/index.html'
            }
            historicalRecord.set({ reloadNumber: (historicalRecord.get().reloadNumber || 0) + 1 });
            if (historicalRecord.get().reloadNumber > 1) {
                alert('获取电站信息失败，请联系管理员');
                historicalRecord.set({ reloadNumber: 0 });
                return window.location.href = '/index.html';
            }
            return window.location.reload();
        }
        historicalRecord.set({ reloadNumber: 0 });
        if (!stationData) { // 没有记录电站信息  
            const { currentSTID: id, currentSTType: isGroup, currentType: dataType, currentSTClass: stClass } = await $scope.getUserAuthHandleGetCurrentInfo.getData({});
            $scope.switchPowerCallback({ id, isGroup, dataType, stClass });
        } else if (Object.is(myAjaxData.currentStationData.currentSTID, stationData.id)) { // 电站信息 没有变化
            await myAjaxData.timeout(500);
            $scope.switchPowerCallback(stationData);
        } else { // 电站信息  发生变化   切换到记录中的电站
            const { currentSTID: id, currentSTType: isGroup, currentType: dataType, currentSTClass: stClass } = await $scope.getUserAuthHandleGetCurrentInfo.getData({});
            const stationInfo = await $scope.getCurrentInfoNew.getData({ currentView: '00', isGroup: 1 });
            myAjaxData.setCurrentStationData(stationInfo);
            return $scope.reloadParentPage({ stationData: { id, isGroup, dataType, stClass } });
            // const { result } = await $scope.changeStation.getData(stationData);
            // if (!result) {
            //     const { currentSTID: id, currentSTType: isGroup, currentType: dataType, currentSTClass: stClass } = await $scope.getUserAuthHandleGetCurrentInfo.getData({});
            //     return $scope.reloadParentPage({ stationData: { id, isGroup, dataType, stClass } });
            // }
            // const stationInfo = await $scope.getCurrentInfoNew.getData({ currentView: '00', isGroup: 1 });
            // myAjaxData.setCurrentStationData(stationInfo);
            // const { currentDataName } = stationInfo

            // $scope.switchPowerScope.currentDataName = currentDataName;
            // $scope.switchPowerCallback(stationData);
        }
    };



    // 切换主题模块
    $scope.changeTheme = theme => {
        // if (!$scope.themeShareUsable && theme === 'Share') return;
        if (theme !== $scope.theme) $scope.themeLoading = true;
        $scope.theme = theme;
        historicalRecord.set({ theme });
        $scope.themeDetail = `tpl/enrichment/dataReportSummary/components/theme${theme}.html${$scope.stamp}`;
    };


    // 初始化子页面scope
    $scope.initChildScope = async (__childScope, __myAjaxData) => {
        $scope.themeLoading = false;
        // 主页面初始化完成
        const mainPageInitComplete = __childScope.$parent.$parent.mainPageInitComplete;
        __childScope.$parent.$parent.mainPageInitComplete = (...arg) => {
            mainPageInitComplete && mainPageInitComplete(...arg);
            if (__childScope.hasOwnProperty('mainPageInitComplete')) {
                __childScope.mainPageInitComplete();
                // __childScope.$apply();
            }
        };

        // 日期切换
        const dateUpdated = __childScope.$parent.$parent.dateUpdated;
        __childScope.$parent.$parent.dateUpdated = (...arg) => {
            dateUpdated && dateUpdated(...arg);
            if ($scope.beforeLoading) return;
            if (__childScope.hasOwnProperty('dateUpdated')) {
                __childScope.dateUpdated();
                const { dateTime, dateType } = historicalRecord.get();
                __childScope.dateTime = dateTime;
                __childScope.dateType = dateType;
                // __childScope.$apply();
            }
        };

        // 电站切换
        const switchPowerCallback = __childScope.$parent.$parent.switchPowerCallback;
        __childScope.$parent.$parent.switchPowerCallback = (...arg) => {
            switchPowerCallback && switchPowerCallback(...arg);
            if ($scope.beforeLoading) return;
            if (__childScope.hasOwnProperty('switchPowerCallback')) {
                __childScope.switchPowerCallback();
                // __childScope.$apply();
            }
        };

        // 如果已初始化  尝试调用初始化完成函数
        if (!$scope.beforeLoading) {
            await myAjaxData.timeout(0);
            __childScope.hasOwnProperty('mainPageInitComplete') && __childScope.mainPageInitComplete($scope.currentClass);
        }

        // 子页面销毁 删除监听
        __childScope.$on('$destroy', () => {
            delete __childScope.mainPageInitComplete;
            delete __childScope.dateUpdated;
            delete __childScope.switchPowerCallback;
            delete __childScope.switchDetailFullPage;
        });
    };
});