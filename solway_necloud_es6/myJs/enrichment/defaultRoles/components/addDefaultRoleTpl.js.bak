ajaxData({
    unConfiguredModulelist:{ //未配置模块列表
        name: 'GETunConfiguredModulelist',
        data: {},
        later: true,
        onlyLatest: true
    },
    update:{
        name:'POSTupdateConfigureRoleModule',
        data: {},
        later: true,
        sameTimeOnce:true,
        onlyLatest: true
    }
}, {
    __serviceName__: 'addDefaultRoleModuleTplService',
})('addDefaultRoleModuleTplCtrl', ['$scope', 'addDefaultRoleModuleTplService', 'actionRecord','$timeout','toaster'], ($scope, myAjaxData, historicalRecord,$timeout,toaster) => {

    const initNotConfiguredModuleData = ()=>{
        $scope.notConfiguredModuleList = [];
        $scope.unConfiguredModulelist.getData({
            roleType:$scope.roleType
        }).then(res=>{
            if(res.code == 0){
                const data = res.body,childData = res.body;
                for(let i=0;i<data.length;i++){
                    if(data[i].appPid == 0){
                        $scope.notConfiguredModuleList.push(data[i]);
                    }
                    for(let j=0;j<childData.length;j++){
                        if(childData[j].appPid == data[i].appId){
                            $scope.notConfiguredModuleList.push(childData[j]);
                        }
                    }
                }
            }
            $timeout(function(){
                $("input[name='roleModuleIds']").each(function(){
                    this.checked=false;
                });
            },0);
        });
    }

    $scope.$on('broadAddDefaultRoleModule',function(e,data){
        initNotConfiguredModuleData();
    });

    //保存
    $scope.save = () =>{
        const stationIdsArr = [];
        $("input[name='roleModuleIds']:checked").map((index,v)=>{
            let appId = JSON.parse(v.value).appId;
            let appPid = JSON.parse(v.value).appPid;
            if(!stationIdsArr.includes(appId)) stationIdsArr.push(appId)
            if(appPid != 0 && !stationIdsArr.includes(appPid)) stationIdsArr.push(appPid)
            
        })
        
       
        $scope.update.getData({
            roleType:$scope.roleType,
            apps: stationIdsArr.map(v => ({
                appId: v,
                btnIds: ''
            })),
        }).then(res=>{
            if(res.code == 0){
                toaster.pop('success', '',res.msg)
                $scope.$emit('addDefaultRoleModuleCallback');
            }else{
                toaster.pop('error', '','添加失败')
            }
        });
    }

    //取消
    $scope.cancel = () =>{
        $scope.$emit('cancelCallback');
    }

});