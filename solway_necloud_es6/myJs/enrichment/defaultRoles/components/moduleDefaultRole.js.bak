ajaxData({
    newsTypeList:{
        name:'GETnewsTypeList',
        data: {},
        later: true,
        onlyLatest: true
    },
    getRoleList: {
        name: 'GETgetRoleList',
        data: {},
        later: true,
        onlyLatest: true
    },
    //删除
    deleteConfigureRoleModule:{
        name: 'POSTdeleteConfigureRoleModule',
        data: {},
        later: true,
        onlyLatest: true
    },
    getByRoleType:{
        name: 'GETgetByRoleType',
        data: {},
        later: true,
        onlyLatest: true
    },
    roleMsgUpdate:{
        name: 'POSTroleMsgUpdate',
        data: {},
        later: true,
        onlyLatest: true
    }
}, {
        __serviceName__: 'moduleDefaultRoleService',
    })('moduleDefaultRoleCtrl', ['$scope', 'moduleDefaultRoleService', 'actionRecord', '$timeout', 'toaster'], ($scope, myAjaxData, historicalRecord, $timeout, toaster) => {

        const serviceModeMap = { '00': '免费服务', '01': '收费服务', '02': '子模块收费', '09': '推广试用' };
        /// 初始化 scope
        $scope.initChildScope($scope, myAjaxData);

        // 主页面初始化完成 回调
        $scope.mainPageInitComplete = async () => {
            $('.ng-clock').removeClass('ng-clock');
            $scope.initComplete = true;
            await myAjaxData.timeout(0);

            $scope.roleType = '00';

            recieveNewsTypes();
            await $scope.diffGetData();
        };

        //接收消息类型列表
        const recieveNewsTypes = () =>{
            $scope.newsTypeList.getData({
                dictType: "ROLE_REC_MSG_TYPE_CODE"
            }).then(res => {
                $scope.recMsgTypes = res;
            });
        }

        //保存消息类型
        $scope.setMsgTypes = ()=>{
            const newsTypeArr = [];
            $("input[name='recmsgtypes']:checked").map((index,v)=>{
                newsTypeArr.push(v.value);
            })

            $scope.roleMsgUpdate.getData({
                id:$scope.curRoleId,
                roleType: $scope.roleType,
                recMsgTypes:newsTypeArr.join(',')
            }).then(res => {
                if(res.code == 0){
                    toaster.pop('success', '', res.msg)
                }else{
                    toaster.pop('error', '', '修改失败')
                }
            });
            
        }

        $scope.diffGetData = async () => {
            if (!$scope.initComplete) return;
            $scope.loading = true;
            await myAjaxData.timeout(0);

            $scope.getRoleList.getData({
                roleType:$scope.roleType
            });

            if($scope.roleType == '01' || $scope.roleType == '02'){
                $("input[name='recmsgtypes']").prop("checked", false);
                $scope.getByRoleType.getData({
                    roleType:$scope.roleType
                })
            }
            
        }

        $scope.getRoleList.getDataCallback = (success, res) => {
            $scope.loading = false;

            const data = res.body,childData = res.body;
            $scope.defaultRoleList = [];
            for(let i=0;i<data.length;i++){
                if(data[i].appPid == 0){
                    $scope.defaultRoleList.push(data[i]);
                }
                for(let j=0;j<childData.length;j++){
                    if(childData[j].appPid == data[i].appId){
                        $scope.defaultRoleList.push(childData[j]);
                    }
                }
            }

            $scope.column = [
                {
                    title: '名称',
                    dataIndex: 'originalName',
                    width: '20%',
                    align: 'left',
                    sort: true,
                    render(text, record) {
                        if (record.appPid != 0) {
                            return '<span style="padding-left:4em">' + text + '</span>';
                        } else {
                            return text;
                        }
                    }
                }, {
                    title: '唯一编码',
                    dataIndex: 'code',
                    width: '26%',
                    align: 'center',
                    sort: true,
                }, {
                    title: '服务模式',
                    dataIndex: 'serviceMode',
                    align: 'center',
                    sort: true,
                    render(text) {
                        return serviceModeMap[text]
                    }
                }, {
                    title: '操作',
                    align: 'center',
                    sort: true,
                    render(text, item, index) {
                        // if(!item.hasChildren){
                            return `
                            <div class="clearfix">
                                <i class="iconfont edit icon-shanchu1" style="font-size: 18px;color:#ff8080;"></i>
                            </div>
                            `
                        // }
                    },
                }
            ]
        }

        $scope.getByRoleType.getDataCallback = (success,res) =>{
            const recMsgTypes = res.body?res.body.recMsgTypes:'';
            $scope.curRoleId = res.body?res.body.id:'';

            if(recMsgTypes){
                $.each(recMsgTypes.split(','), function (i, v) {
                    $("input[name='recmsgtypes'][value='" + v + "']").prop("checked", true);
                })
            }
        }

        const deleteDefaultRoleModule = id => {
            $scope.deleteConfigureRoleModule.getData({
                id: id
            }).then(res => {
                if (res.code == 0) {
                    $scope.diffGetData()
                    toaster.pop('success', '', res.msg)
                } else {
                    toaster.pop('error', '', res.msg)
                }

            });
        }

        $scope.trClick = (item, index, event) => {
            if (event.target.className.includes('icon-shanchu1')) {
                $solway.confirm({ message: '确定删除此模块？' }, () => {
                    deleteDefaultRoleModule(item.roleId)
                });
            };
        };

        //新增
        $scope.addModule = () => {
            $scope.showAddDefaultRoleModule = true;
            $scope.$broadcast('broadAddDefaultRoleModule', { 'type':'add' });
        }

        //新增成功
        $scope.$on('addDefaultRoleModuleCallback', function () {
            $scope.showAddDefaultRoleModule = false;
            $scope.diffGetData();
        });

        //取消
        $scope.$on('cancelCallback',function(){
            $scope.showAddDefaultRoleModule = false;
        });


        // 销毁 事件
        $scope.$on('$destroy', () => {
           
        });
    });