
ajaxData({
    stationDeviceNumber:{
        name:'GETstationDeviceNumber',
        data: {},
        later: true,
        onlyLatest: true
    },
    deviceXBList:{
        name:'GETdeviceXBList',
        data: {},
        later: true,
        onlyLatest: true
    },
    deleteDeviceXB:{
        name:'POSTdeleteDeviceXB',
        data: {},
        later: true,
        onlyLatest: true
    },
    deviceNBQList:{
        name:'GETdeviceNBQList',
        data: {},
        later: true,
        onlyLatest: true
    },
    deleteDeviceNBQ:{
        name:'POSTdeleteDeviceNBQ',
        data: {},
        later: true,
        onlyLatest: true
    },
    deviceHLXList:{
        name:'GETdeviceHLXList',
        data: {},
        later: true,
        onlyLatest: true
    },
    deleteDeviceHLX:{
        name:'POSTdeleteDeviceHLX',
        data: {},
        later: true,
        onlyLatest: true
    },
    deviceOtherList:{
        name:'GETdeviceOtherList',
        data: {},
        later: true,
        onlyLatest: true
    },
    deleteDeviceOther:{
        name:'POSTdeleteDeviceOther',
        data: {},
        later: true,
        onlyLatest: true
    },
    
    
    
}, {
    __serviceName__: 'accountSolarTplService',
})('accountSolarTplCtrl', ['$scope', 'accountSolarTplService', 'actionRecord','$timeout','toaster','$http'], ($scope, myAjaxData, historicalRecord,$timeout,toaster,$http) => {
    $scope.menuActive = id =>{
        $scope.activeMenuBtn = id;
        document.getElementById(id).scrollIntoView()
    }

    $scope.menuActive('deviceTypeA');
    $scope.exportVersion = '00';

    $scope.endDate = new Date('2099');

    const initDeviceData = id =>{
        $scope.stationDeviceNumber.getData({id:id}).then(res=>{
            $scope.devNumberData = res;
        });
    }

    $scope.$on('solarBroad',(e,data)=>{
        $scope.stationId = data.id;
        initDeviceData(data.id);
        $scope.getXBData();
        $scope.getNBQData();
        $scope.getHLXData();
        $scope.getOtherData();
    });

    //导出模板---箱变、逆变器、汇流箱
    $scope.exportExcelData = type => {
        const version = $('select[name=version' + type + ']').val();
        let url = "PowerStation/downloadTemplate.htm";
        url +='?stid='+$scope.stationId;
        url += '&version='+version;
        url +='&deviceType='+type;
        window.location.href = url;
    }

    //导入模板---
    $scope.importExcelData = (type) =>{
        $scope.$broadcast('importBroad',{modalType:type});
        $scope.importExcelModel = true;
    }

    //导出
    $scope.export = () =>{
        let url = "PowerStation/downloadPowerData.htm";
        url +='?id='+$scope.stationId;
		url += '&version='+ $scope.exportVersion;
		url +='&sign=1';
		window.location.href = url;
        
    }

    /* ********************* 箱变部分 ***********************/

    $scope.$on('importSuccessCallback',function(){
        $scope.importExcelModel = false;
        $scope.getXBData();
        $scope.getNBQData();
        $scope.getHLXData();
        $scope.getOtherData();
    })

    $scope.columnXB = [
        {
            title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;"></i></label>',
            dataIndex: '',
            width: '60px',
            align: 'center',
            checkboxName: 'xbCheckboxName',
            render(text, record, index) {
                return '<label class="i-checks m-b-none"><input data-id="' + record.id + '" name="xbCheckboxName" type="checkbox" /><i style="background:transparent;"></i></label>';
            }
        },{
            title: '编号',
            dataIndex: 'code',
            sort: !0,
            align: 'center'
        }, {
            title: '设备名称',
            dataIndex: 'name',
            align: 'center',
            sort: !0
        }, {
            title: '产品型号',
            dataIndex: 'productname',
            align: 'center'
        }, {
            title: '位置',
            dataIndex: 'address',
            align: 'center'
        }, {
            title: '操作',
            dataIndex: '',
            align: 'center',
            sort: !0,
            render(text, item, index) {
                return `
                <div class="clearfix">
                    <i class="iconfont edit icon-bianji-copy" style="font-size: 18px;color:#1ddabe;margin-right:15px;"></i>
                    <i class="iconfont edit icon-shanchu1" style="font-size: 18px;color:#ff8080;"></i>
                </div>
                `
            },
        }
    ]

    const deleteXB = ids =>{
        $http({
            method : "POST",
            url : "BoxChange/deleteBatch.htm",
            params : {
                boxids:ids
            }
        }).success(function(res) {
            if (res.type == 'success'){
                toaster.pop('success','','删除成功');
                $scope.getXBData();
            }else{
                toaster.pop('error', '','删除失败')
            }
        });
    }
    
    //获取箱变列表
    $scope.getXBData = () =>{
        $scope.deviceXBList.getData({
            pageIndex:0,
            pageSize:10,
            pstationid:$scope.stationId,
            keyWords:$scope.keyWordsXB
        })
    }

    //新增箱变
    $scope.newXB = () =>{
        $scope.editXBModel = true;
        $scope.$broadcast('editXBBroad','');
    }

    //编辑箱变
    $scope.trClickEditXB = (item, index, event) =>{
        if(event.target.className.includes('icon-bianji-copy')) {
            $scope.editXBModel = true;
            $scope.$broadcast('editXBBroad',item);
        }else if(event.target.className.includes('icon-shanchu1')) {
            $solway.confirm({ message: '确定删除此箱变？' }, () => {
                deleteXB([item.id])
            });
        }
        
    }

    //批量删除-箱变
    $scope.deleteBatchXB = () =>{
        let ids = [];
        $("input[name='xbCheckboxName']:checked").each(function () {
            ids.push(this.dataset.id);
        });
        if (ids.length == 0){
            alert("请选择删除的数据");
            return;
        }
        $solway.confirm({ message: '确定删除所选的箱变？' }, () => {
            deleteXB(ids)
        });
    }

    //编辑箱变成功回调
    $scope.$on('editXBCallback',function(){
        $scope.editXBModel = false;
        $scope.getXBData();
    })

    //编辑箱变取消回调
    $scope.$on("cancelXB",function(){
        $scope.editXBModel = false;
    })


    /* ********************* 逆变器部分 ***********************/

    $scope.getNBQData = () =>{
        $scope.deviceNBQList.getData({
            pageIndex:0,
            pageSize:10,
            pstationid:$scope.stationId,
            keyWords:$scope.keyWordsNBQ
        });
    }

    $scope.columnNBQ = [
        {
            title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;"></i></label>',
            dataIndex: '',
            width: '60px',
            align: 'center',
            checkboxName: 'nbqCheckboxName',
            render(text, record, index) {
                return '<label class="i-checks m-b-none"><input data-id="' + record.id + '" name="nbqCheckboxName" type="checkbox" /><i style="background:transparent;"></i></label>';
            }
        },{
            title: '编号',
            dataIndex: 'code',
            sort: !0,
            align: 'center'
        }, {
            title: '设备名称',
            dataIndex: 'name',
            align: 'center',
            sort: !0
        }, {
            title: '所属箱变',
            dataIndex: 'boxchangename',
            align: 'center'
        }, {
            title: '产品型号',
            width:'20%',
            dataIndex: 'productname',
            align: 'center'
        }, {
            title: '容量',
            dataIndex: 'realcapacity',
            align: 'center'
        }, {
            title: '是否小逆',
            width:'80px',
            dataIndex: 'hasJB',
            align: 'center'
        }, {
            title: '操作',
            dataIndex: '',
            align: 'center',
            sort: !0,
            render(text, item, index) {
                return `
                <div class="clearfix">
                    <i class="iconfont edit icon-bianji-copy" style="font-size: 18px;color:#1ddabe;margin-right:15px;"></i>
                    <i class="iconfont edit icon-shanchu1" style="font-size: 18px;color:#ff8080;"></i>
                </div>
                `
            },
        }
    ];
    
    //新增逆变器
    $scope.newNBQ = () =>{
        $scope.editNBQModel = true;
        $scope.$broadcast('editNBQBroad','');
    }

    //删除逆变器
    const deleteNBQ = ids =>{
        $http({
            method : "POST",
            url : "Inverter/deleteBatch.htm",
            params : {
                inverids:ids
            }
        }).success(function(res) {
            if (res.type == 'success'){
                toaster.pop('success','','删除成功');
                $scope.getNBQData();
            }else{
                toaster.pop('error', '','删除失败')
            }
        });
    }

    //编辑
    $scope.trClickEditNBQ = (item, index, event) =>{
        if(event.target.className.includes('icon-bianji-copy')) {
            $scope.editNBQModel = true;
            $scope.$broadcast('editNBQBroad',item);
        }else if(event.target.className.includes('icon-shanchu1')) {
            $solway.confirm({ message: '确定删除此逆变器？' }, () => {
                deleteNBQ([item.id])
            });
        }
    }

    
    //批量删除-逆变器
    $scope.deleteBatchNBQ = () =>{
        let ids = [];
        $("input[name='nbqCheckboxName']:checked").each(function () {
            ids.push(this.dataset.id);
        });
        if (ids.length == 0){
            alert("请选择删除的数据");
            return;
        }
        $solway.confirm({ message: '确定删除所选的逆变器？' }, () => {
            deleteNBQ(ids)
        });
    }

    //编辑逆变器成功回调
    $scope.$on('editNBQCallback',function(){
        $scope.editNBQModel = false;
        $scope.getNBQData();
    })

    //编辑逆变器取消回调
    $scope.$on("cancelNBQ",function(){
        $scope.editNBQModel = false;
    })


    /* ********************* 汇流箱部分 ***********************/

    $scope.getHLXData = () =>{
        $scope.deviceHLXList.getData({
            pageIndex:0,
            pageSize:10,
            pstationid:$scope.stationId,
            keyWords:$scope.keyWordsHLX
        });
    }

    $scope.columnHLX = [
        {
            title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;"></i></label>',
            dataIndex: '',
            width: '60px',
            align: 'center',
            checkboxName: 'hlxCheckboxName',
            render(text, record, index) {
                return '<label class="i-checks m-b-none"><input data-id="' + record.id + '" name="hlxCheckboxName" type="checkbox" /><i style="background:transparent;"></i></label>';
            }
        },{
            title: '编号',
            dataIndex: 'code',
            sort: !0,
            align: 'center'
        }, {
            title: '设备名称',
            dataIndex: 'name',
            align: 'center',
            sort: !0
        }, {
            title: '所属逆变器',
            dataIndex: 'invertername',
            align: 'center'
        }, {
            title: '产品型号',
            width:'20%',
            dataIndex: 'productname',
            align: 'center'
        }, {
            title: '组串数',
            dataIndex: 'batterygcount',
            align: 'center'
        }, {
            title: '位置',
            width:'80px',
            dataIndex: 'address',
            align: 'center'
        }, {
            title: '操作',
            dataIndex: '',
            align: 'center',
            sort: !0,
            render(text, item, index) {
                return `
                <div class="clearfix">
                    <i class="iconfont edit icon-bianji-copy" style="font-size: 18px;color:#1ddabe;margin-right:15px;"></i>
                    <i class="iconfont edit icon-shanchu1" style="font-size: 18px;color:#ff8080;"></i>
                </div>
                `
            },
        }
    ];
    
    //删除逆变器
    const deleteHLX = ids =>{
        $scope.deleteDeviceHLX.getData({junctionids:ids.join(',')}).then(res=>{
            if (res.type == 'success'){
                toaster.pop('success','','删除成功');
                $scope.getHLXData();
            }else{
                toaster.pop('error', '','删除失败')
            }
        });
    }

    //编辑
    $scope.trClickEditHLX = (item, index, event) =>{
        if(event.target.className.includes('icon-bianji-copy')) {
            $scope.editHLXModel = true;
            $scope.$broadcast('editHLXBroad',item);
        }else if(event.target.className.includes('icon-shanchu1')) {
            $solway.confirm({ message: '确定删除此逆变器？' }, () => {
                deleteHLX([item.id])
            });
        }
    }

    //新增汇流箱
    $scope.newHLX = () =>{
        $scope.editHLXModel = true;
        $scope.$broadcast('editHLXBroad','');
    }

    //批量删除-汇流箱
    $scope.deleteBatchHLX = () =>{
        let ids = [];
        $("input[name='hlxCheckboxName']:checked").each(function () {
            ids.push(this.dataset.id);
        });
        if (ids.length == 0){
            alert("请选择删除的数据");
            return;
        }
        $solway.confirm({ message: '确定删除所选的汇流箱？' }, () => {
            deleteHLX(ids)
        });
    }


    //编辑逆变器成功回调
    $scope.$on('editHLXCallback',function(){
        $scope.editHLXModel = false;
        $scope.getHLXData();
    })

    //编辑逆变器取消回调
    $scope.$on("cancelHLX",function(){
        $scope.editHLXModel = false;
    })


    /* ********************* 其他设备 ***********************/

    $scope.getOtherData = () =>{
        $scope.deviceOtherList.getData({
            pageIndex:0,
            pageSize:10,
            pstationid:$scope.stationId,
            keyWords:$scope.keyWordsOther
        });
    }

    $scope.columnOther = [
        {
            title: '<label class="i-checks m-b-none"><input type="checkbox"><i style="background:transparent;"></i></label>',
            dataIndex: '',
            width: '60px',
            align: 'center',
            checkboxName: 'otherCheckboxName',
            render(text, record, index) {
                return '<label class="i-checks m-b-none"><input data-id="' + record.id + '" name="otherCheckboxName" type="checkbox" /><i style="background:transparent;"></i></label>';
            }
        },{
            title: '编号',
            dataIndex: 'code',
            sort: !0,
            align: 'center'
        }, {
            title: '设备名称',
            dataIndex: 'name',
            align: 'center',
            sort: !0
        }, {
            title: '所属电站',
            dataIndex: 'pstationname',
            align: 'center'
        }, {
            title: '产品型号',
            width:'20%',
            dataIndex: 'productname',
            align: 'center'
        }, {
            title: '位置',
            width:'80px',
            dataIndex: 'address',
            align: 'center'
        }, {
            title: '操作',
            dataIndex: '',
            align: 'center',
            sort: !0,
            render(text, item, index) {
                return `
                <div class="clearfix">
                    <i class="iconfont edit icon-bianji-copy" style="font-size: 18px;color:#1ddabe;margin-right:15px;"></i>
                    <i class="iconfont edit icon-shanchu1" style="font-size: 18px;color:#ff8080;"></i>
                </div>
                `
            },
        }
    ];
    
    //编辑
    $scope.trClickEditOther = (item, index, event) =>{
        if(event.target.className.includes('icon-bianji-copy')) {
            $scope.editOtherModel = true;
            $scope.$broadcast('editOtherBroad',item);
        }else if(event.target.className.includes('icon-shanchu1')) {
            $solway.confirm({ message: '确定删除此设备？' }, () => {
                deleteOther([item.id])
            });
        }
    }

    //新增其他设备
    $scope.newOther = () =>{
        $scope.editOtherModel = true;
        $scope.$broadcast('editOtherBroad','');
    }

    //删除逆变器
    const deleteOther = ids =>{
        $scope.deleteDeviceOther.getData({otherids:ids.join(',')}).then(res=>{
            if (res.type == 'success'){
                toaster.pop('success','','删除成功');
                $scope.getOtherData();
            }else{
                toaster.pop('error', '','删除失败')
            }
        });
    }

    //批量删除-其他设备
    $scope.deleteBatchOther = () =>{
        let ids = [];
        $("input[name='otherCheckboxName']:checked").each(function () {
            ids.push(this.dataset.id);
        });
        if (ids.length == 0){
            alert("请选择删除的数据");
            return;
        }
        $solway.confirm({ message: '确定删除所选的设备？' }, () => {
            deleteOther(ids)
        });
    }

    //编辑逆变器成功回调
    $scope.$on('editOtherCallback',function(){
        $scope.editOtherModel = false;
        $scope.getOtherData();
    })

    //编辑逆变器取消回调
    $scope.$on("cancelOther",function(){
        $scope.editOtherModel = false;
    })
    
   
});