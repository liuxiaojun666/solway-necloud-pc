app.directive('repeatFinish',function(){
    return {
        link: function(scope,element,attr){
            if(scope.$last == true){
                scope.$eval( attr.repeatFinish )
            }
        }
    }
})
//添加、编辑
app.directive('taskAutomaticAddTemp', ['myAjaxData','$timeout', (myAjaxData,$timeout) => {
    return {
        restrict: 'E',
        template: $('#task-add-temp').html(),
        replace: true,
        scope: {
            pageList:'=',
            taskDetail:'=',
            provinceList: '=',
            stationList:'=',
            cityList: '=',
            countryList: '=',
            getLatAndLong:'=',
            getRepairPersonList:'=',
            creatTask:"="
        },

        link ($scope, $element, $attrs) {

            $scope.stationChange = () =>{
                const lat = $scope.stationList.selected.latitude;
                const long = $scope.stationList.selected.longitude;

                $scope.getMap(lat ,long, false);
            }
            $scope.getMap();

            $scope.deleteCurrentImg = index =>{
                $scope.responseImgs.splice(index,1)
            }
            $timeout(()=>{
                $('#result_table').on('click','.icon-note.font16', function () {
                    let id = $(this).attr('id')
                    $scope.taskDetail.getData({
                        'id':id
                    }).then(res =>{
                        $scope.formData = res.body
                        $scope.radioValue = '2';
                        $scope.provinced.selected= { regionName: $scope.formData.provinceName,id: $scope.formData.provinceId}
                        $scope.cityd.selected = {regionName :$scope.formData.cityName,id: $scope.formData.cityId}
                        $scope.countyd.selected =  {regionName :$scope.formData.countyName,id: $scope.formData.countyId}
                        $("#address").val($scope.formData.address)
                        $scope.latitude = $scope.formData.latitude
                        $scope.longitude = $scope.formData.longitude
                        $scope.autoPub = $scope.formData.autoPub
                        let userIdsArr = (res.body.userIds).split(",")
                        $scope.personListData($scope.latitude,$scope.longitude)
                        $scope.renderFinish = () =>{
                            $scope.$apply()
                            let objs = document.getElementsByName("userIds");
                            for(let i=0; i<objs.length; i++) {
                                if($.inArray(objs[i].value, userIdsArr) != -1){
                                    objs[i].checked = true
                                }
                            }
                        }
                        $scope.timeSetLine = []
                        for(let i = 1;i<=3;i++){
                            if($scope.formData['bounsT'+i] != null){
                                $scope.timeSetLine.push({time:$scope.formData['bounsT'+i],money:$scope.formData['bouns'+i]})
                            }
                        }
                        $scope.strategyType = "0"
                        let strategyArr = $scope.formData.execStrategy.split(" ")
                        $scope.selectDay = strategyArr[3]
                        $scope.selectHour = strategyArr[2]
                        $('#powerIndexModalAdd').modal();
                    })
                })

                $(".automaticTaskList").on('click','#add-new',function(){
                    $scope.formData = {}
                    $scope.radioValue = '1';
                    $scope.provinced.selected= { regionName: "",id: ""}
                    $scope.cityd.selected = {regionName :"",id: ""}
                    $scope.countyd.selected =  {regionName :"",id: ""}
                    $("#address").val("")
                    $scope.latitude =""
                    $scope.longitude = ""
                    $scope.personList = []
                    $scope.timeSetLine = [{time:"",money:""}]
                    $scope.renderFinish = () =>{
                        $scope.$apply()
                        let objs = document.getElementsByName("userIds");
                        for(let i=0; i<objs.length; i++) {
                            objs[i].checked = false
                        }
                    }
                    $scope.$apply()
                    $('#powerIndexModalAdd').modal()
                })

                $scope.uploadOneImg = () =>{
                    $.ajaxFileUpload ({
                        url: window.baseUrl+'/wxa/img.htm', 
                        secureuri: false,
                        fileElementId: 'fileaaa',
                        type:"POST",
                        formName: "file",
                        dataType: 'json',
                        data:{
                            classify:'task',
                        },
                        success: function (data) {
                            if(data && data.length >=0){
                                $scope.responseImgs.push(data[0]);
                                $scope.$apply()
                            }
                        },
                        error: function (data, status, e) {
                            promptObj('error', "","上传失败");
                        }
                    })
    
                }
                
                $scope.uploadImgs = [],$scope.responseImgs = []

                $(".automaticTaskList").on('change','#fileaaa',function(){
                    
                    $scope.uploadOneImg()

                })
                
            },0);
        },

        controller ($scope, $element) {

            $scope.radioValue = '1'
            $scope.hasGetPerson = false //是否获取过人员列表
            $scope.autoPub = '1'
            $scope.strategyType = "0"

            $scope.timeSetLine = [{time:"",money:""}]

            $scope.$watch('radioValue',function(value){
                let allOverlay = map.getOverlays()
                for (let i = 0; i < allOverlay.length; i++){
                    map.removeOverlay(allOverlay[i])
                }
            })
            const map = new BMap.Map("allmap")
            $scope.getMap = (lat = 39.915 ,long = 116.404,first = true) =>{

                const point = new BMap.Point(long,lat);
                
                if(!first){
                    const marker = new BMap.Marker(point);
                    map.addOverlay(marker);
                }
                map.centerAndZoom(point, 11)
                map.enableScrollWheelZoom(true)
  
                map.addEventListener("click", function(e){  
                    if($scope.radioValue == '2'){
                        let allOverlay = map.getOverlays()
                        for (let i = 0; i < allOverlay.length; i++){
                            map.removeOverlay(allOverlay[i])
                        }
                        $scope.longitude = e.point.lng
                        $scope.latitude = e.point.lat
                        $scope.$apply()
                        let pt = e.point
                        const marker = new BMap.Marker(pt)
                        map.addOverlay(marker)
                    }
                    
                })
                
            }

            $scope.provinced = {}
            $scope.cityd = {}
            $scope.countyd = {}
            $scope.formData = {}
            

            const getProvinceList = () =>{
                $scope.provinceList.getData({
                    'treeLevel':1,
                    'parentId':1
                }).then(res =>{
                    $scope.province = res;
                    $scope.provinced.selected= { regionName: $scope.province[0].regionName,id: $scope.province[0].id}

                    if($scope.provinced.selected.id != undefined && $scope.provinced.selected != null){
                       $scope.provinceChange() 
                    }
                })
            }
            getProvinceList()

            $scope.provinceChange = () =>{
                let a = angular.copy($scope.provinced.selected.id);
                $scope.cityList.getData({
                    "treeLevel":2,
                    "parentId":a
                }).then(res =>{
                    $scope.city = res;
                    $scope.cityd.selected = {regionName : $scope.city[0].regionName,id : $scope.city[0].id}

                    if($scope.cityd.selected.id != undefined && $scope.cityd.selected != null){
                       $scope.cityChange() 
                    }
                })        
            }

            $scope.cityChange = () =>{
                let b = angular.copy($scope.cityd.selected.id);
                $scope.countryList.getData({
                    "treeLevel":3,
                    "parentId":((b==null) || (b==""))?0:b
                }).then(res =>{
                    $scope.county = res;
                    $scope.countyd.selected = {regionName : $scope.county[0].regionName,id : $scope.county[0].id}

                })
            }
            
            $scope.getlatandlng = () =>{
                const province = $scope.provinced.selected ?$scope.provinced.selected.regionName :null
                const city = $scope.cityd.selected ? $scope.cityd.selected.regionName :null
                const country = $scope.countyd.selected ? $scope.countyd.selected.regionName :null
                const street = $("#address").val();
                if(province !=null && city != null && country != null && street != ""){
                    const str = province+city+country+street
                    $scope.getLatAndLong.getData({
                        "add":str
                    }).then(res =>{
                        $scope.longitude = res[0]
                        $scope.latitude = res[1]
                        $scope.getMap($scope.latitude ,$scope.longitude, false);
                    })

                }else{
                    alert("省市县街道均不能为空")
                }
            }

            //获取周边人员
            $scope.getPersonList = () =>{

                let lat = "",long = ""
                if($scope.radioValue == "1"){
                    lat = $scope.stationList.selected.latitude
                    long = $scope.stationList.selected.longitude
                    if($scope.formData.sendScope == ""|| $scope.formData.sendScope == undefined){
                        alert("推送范围均不能为空")
                        return false
                    }
                    $scope.personListData(lat,long)
                }else if($scope.radioValue == "2"){
                    if($scope.longitude == "" || $scope.longitude == undefined || $scope.latitude == "" || $scope.latitude == undefined || $scope.formData.sendScope == ""|| $scope.formData.sendScope == undefined){
                        alert("经度、纬度、推送范围均不能为空")
                        return false
                    }else{
                        lat = $scope.latitude
                        long = $scope.longitude
                        $scope.personListData(lat,long)
                    }
                }             
            }  

            $scope.personListData = (lat,long,callback) =>{

                $scope.getRepairPersonList.getData({
                    "latitude":lat,
                    "longitude":long,
                    "range":$scope.formData.sendScope
                }).then(res =>{
                    $scope.hasGetPerson = true
                    if(res.code == 0 ){
                        $scope.personList = res.body
                    }else{
                        alert(res.msg)
                    }

                    $scope.personList && callback && callback($scope.personList)
                })    
            }
            $scope.addTimeLine = () =>{
                $scope.timeSetLine.push({time:"",money:""});
            }

            $scope.deleteTimeLine = (index) =>{
                $scope.timeSetLine.splice(index,1);
            }
            
            //执行策略
            
            $scope.hours = [],$scope.days = []
            for(let i=1;i<=31;i++){
                $scope.days.push(i)
            }
            for(let i=0;i<24;i++){
                $scope.hours.push(i)
            }

            $scope.release = () =>{
                organizeParams()
                if(validate()){
                    $scope.creatTask.getData(
                        $scope.formData
                    ).then(res =>{
                        if(res.code == "0"){
                            promptObj('success', '',res.msg);
                            $scope.pageList.getData({
                                pageIndex:0,
                                pageSize:10,
                            }).then(res =>{
                                $scope.hiddenModalAdd()
                            })
                        }
                    })
                }
            }

            const organizeParams = () =>{
                if($scope.radioValue == "1"){
                    $scope.formData['provinceId'] = $scope.stationList.selected.provinceid
                    $scope.formData['cityId'] = $scope.stationList.selected.cityid
                    $scope.formData['countyId'] = $scope.stationList.selected.countyid
                    $scope.formData['address'] = $scope.stationList.selected.address
                    $scope.formData['latitude'] = $scope.stationList.selected.latitude
                    $scope.formData['longitude'] = $scope.stationList.selected.longitude
                }else if($scope.radioValue == "2"){
                    $scope.formData['provinceId'] = $scope.provinced.selected.id
                    $scope.formData['cityId'] = $scope.cityd.selected.id
                    $scope.formData['countyId'] = $scope.countyd.selected.id
                    $scope.formData['address'] = $("#address").val()
                    $scope.formData['latitude'] = $scope.latitude
                    $scope.formData['longitude'] = $scope.longitude
                }

                $scope.formData['sendScope'] = $scope.formData.sendScope
                $scope.formData['taskTitle'] = $scope.formData.taskTitle
                $scope.formData['taskContent'] = $scope.formData.taskContent
                $scope.formData['autoPub'] = $scope.autoPub
               
                for(let i = 0;i<$scope.timeSetLine.length;i++){
                    let index = i+1
                    $scope.formData['bounsT'+index] = $scope.timeSetLine[i].time
                    $scope.formData['bouns'+index] = $scope.timeSetLine[i].money
                }

                let checkedIds = []
                let checkedInput = $("input[name=userIds]:checked")
                for(let i = 0;i<checkedInput.length;i++){
                    checkedIds.push(checkedInput[i].value)
                }
                $scope.formData['userIds'] = checkedIds.join(",")

                $scope.formData['taskImgs'] = $scope.responseImgs.join(",")

                //$scope.formData['a'] = "noUse"//todo
            }
            const validate = () =>{
                let validateFlag = true

                const validateKeys  = ['provinceId','cityd','countyId','address','latitude','longitude','sendScope','userIds','taskTitle','taskContent']
                const validateNamesMap = {'provinceId':'省','cityd':'市','countyId':'县','address':'详细地址','latitude':'纬度',
                                    'longitude':'经度','sendScope':'推送范围','userIds':'检修人员','taskTitle':'任务标题','taskContent':'任务内容'}

                for(let i = 0;i<validateKeys.length;i++){
                    for(let key in $scope.formData){
                        if(validateKeys[i] == key){
                            let val = $scope.formData[key]
                            if(val == undefined || val == null || val == ""){
                                alert(validateNamesMap[key]+'不能为空')
                                validateFlag = false
                                return validateFlag
                            }
                        }
                    }
                    if(validateKeys[i] == 'userIds'){
                        if($scope.formData['userIds'].length<=0){
                            alert(validateNamesMap['userIds']+'不能为空')
                            validateFlag = false
                            return validateFlag
                        }
                    }
                }

                //验证时间
                if($scope.timeSetLine && $scope.timeSetLine.length>0){
                    for(let i = 0;i<$scope.timeSetLine.length;i++){
                        if($scope.timeSetLine[i].time == undefined || $scope.timeSetLine[i].time == null || $scope.timeSetLine[i].time == ""){
                            alert("每组时间设置对应的时间不能为空")
                            validateFlag =  false
                            return validateFlag
                        }
                        if($scope.timeSetLine[i].money == undefined || $scope.timeSetLine[i].money == null || $scope.timeSetLine[i].money == ""){
                            alert("每组时间设置对应的红包金额不能为空")
                            validateFlag =  false
                            return validateFlag
                        }
                    }
                }else{
                    validateFlag = false
                    alert("时间设置请至少填写一组")
                }
                
                 //策略拼接字符串（并验证）
                if($scope.strategyType == 0){
                    if(!$scope.selectDay){
                        alert("请选择日期")
                        validateFlag =  false
                        return validateFlag 
                    }
                    if(!$scope.selectHour){
                        alert("请选择小时")
                        validateFlag =  false
                        return validateFlag
                    }
                    $scope.formData['execStrategy'] = "0 0 "+$scope.selectHour+" "+$scope.selectDay+" * ? *"
                }else if($scope.strategyType == 1){
                    let val = $scope.formData['execStrategy']
                    if(val == undefined || val == null || val == ""){
                        alert('执行策略不能为空')
                        validateFlag = false
                        return validateFlag
                    }
                }
                return validateFlag
            }

            $scope.hiddenModalAdd = () =>{
                $('#powerIndexModalAdd').modal("hide");
            }
        }
    }
}])

//审核，发红包
app.directive('taskAutomaticExamineTemp',['myAjaxData','$timeout',(myAjaxData,$timeout) => {
    return {
        restrict:'E',
        template:$('#task-examine-temp').html(),
        replace:true,
        scope:{
            pageList:"=",
            taskDetail:"=",
            taskBonusNum:"=",
            taskExamine:"=",
            redPacket:"="
        },
        link($scope,$element,$attrs){

            $timeout(()=>{

                $("#result_table").on('click','.task-title',function(){
                    $scope.statusType = "showInfo"
                    $scope.$apply()
                    $scope.id = $(this).attr("id")
                    $('#taskExamineModal').modal()
                    $scope.taskDetail.getData({
                        'id':$scope.id
                    }).then(res =>{
                        renderPage(res)
                    })

                })

                $('#result_table').on('click','.examine', function () {
                    $scope.statusType = "examine"
                    $scope.$apply()
                    $scope.id = $(this).attr("id")
                    $('#taskExamineModal').modal()
                    $scope.taskDetail.getData({
                        'id':$scope.id
                    }).then(res =>{
                        renderPage(res)
                    })

                    $scope.taskBonusNum.getData({
                        'id':$scope.id
                    }).then(res =>{
                        $scope.bonusNum = res.body ? res.body :0
                    })
                   
                })
                $('#result_table').on('click','.money', function () {
                    $scope.statusType = "money"
                    $scope.$apply()
                    $scope.id = $(this).attr("id")
                    $('#taskExamineModal').modal()

                    $scope.bonusBtnAbled = true
                    $scope.taskDetail.getData({
                        'id':$scope.id
                    }).then(res =>{
                        renderPage(res)
                    })
                })
                
            })

            const renderPage = res =>{
                
                $scope.data = res.body
                $scope.imageList = $scope.data.handleImg ? $scope.data.handleImg.split(",").map((v => window.baseUrl + '/' + v)) : []
                $scope.showHisContent =JSON.parse($scope.data.reviewContent || '[]')
                let arr = $scope.data.execStrategy.split(" ")
                $scope.execStrategy = "每月"+arr[3]+"日"+arr[2]+"时"
            
            }


            $scope.ifPass = yesOrNot =>{
                let time = new Date().getTime()
                const wxuser = localStorage.getItem("wxuser") ? JSON.parse(localStorage.getItem("wxuser")) : null
                const curContent = $("#examineCircumstance").val()
                const result = myAjaxData.config.passMap[yesOrNot]
                if(wxuser){
                    let content = [{'id':wxuser.id,'name':wxuser.realName,'time':time,'phone':wxuser.phone,'content':curContent,'result':result}]
                    if($scope.showHisContent){
                        content = [...$scope.showHisContent,...content]
                    }
                    $scope.taskExamine.getData({
                        'id':$scope.id,
                        'opType':yesOrNot,
                        'content':JSON.stringify(content),
                        'bonus':$("#bonusNum").val()
                    }).then(res =>{
                        if(res.code == 0 ){
                            $scope.hiddenModalExamine()
                            promptObj('success', '',res.msg);
                            $scope.pageList.getData({
                                pageIndex:0,
                                pageSize:10,
                            })
                        }else{
                            alert(res.msg)
                        }
                    })
                }else{
                    alert("审核人信息没有获取到")
                }
            }

            //发红包
            $scope.handOutMoney = () =>{
                if($scope.bonusBtnAbled){
                    $scope.bonusBtnAbled = false
                    $scope.redPacket.getData({
                        'id':$scope.id,
                        'opType':1,
                    }).then(res =>{
                        $scope.bonusBtnAbled = true
                        if(res.code == 0 ){
                            $scope.hiddenModalExamine()
                            promptObj('success', '',res.msg);
                            $scope.pageList.getData({
                                pageIndex:0,
                                pageSize:10,
                            })
                        }else{
                            alert(res.msg)
                        }

                    })
                }
                
            }
            
            $(".issueTaskList").on('click','.upload-img',function(){
                $(".bigImg").show()
                let imgUrl = $(this).attr('src')
                $scope.bigImg = imgUrl
                $scope.$apply()
            })

            $scope.hiddenBigImg = () =>{
                $(".bigImg").hide()
            }
        },
        controller($scope,$element){

            $scope.statusType = ""
            
            $scope.showStatus = sta =>{
                return myAjaxData.config.statusMap[sta]
            }

            $scope.rendarIfAutoPub = autoPub =>{
                return autoPub == 1?"是":"否"
            }
            $scope.hiddenModalExamine = () =>{
                $('#taskExamineModal').modal("hide");
            }
        }
    }
}])

ajaxData({
    pageList: {
        name: 'GETAutomaticTaskList',
        data: {
            pageIndex:0,
            pageSize:10,
        }
    },
    stationsPosition:{
        name:'GETStationsPos',
        data: {},
        later:true
    },
    provinceList:{
        name: 'POSTSelectProvince',
        data: {},
        later:true
    },
    cityList:{
        name: 'POSTSelectCity',
        data: {},
        later:true
    },
    countryList:{
        name: 'POSTSelectCountry',
        data: {},
        later:true
    },
    getLatAndLong:{
        name:'POSTLatandlng',
        data: {},
        later:true
    },
    getRepairPersonList:{
        name:'GETSelectRepairPerson',
        data: {},
        later:true
    },
    creatTask:{
        name:'POSTAutomaticTaskCreate',
        data:{},
        later:true
    },
    taskDetail:{
        name:'GETAutomaticTaskDetail',
        data:{},
        later:true
    },
    taskBonusNum:{
        name:'GETTaskBonusNum',
        data:{},
        later:true
    },
    taskExamine:{
        name:'POSTTaskExamine',
        data:{},
        later:true
    },
    taskDoInvalid:{
        name:'POSTAutomaticTaskDelete',
        data:{},
        later:true
    },
    redPacket:{
        name:'POSTRedPacket',
        data:{},
        later:true
    }
},{
    statusMap:{'00':"未发布",'01':"已发布",'02':"处理中",'03':"处理未完成",'04':"审核中",'05':"审核通过",'06':"审核未通过",'07':"已完成",'99':"已作废"},
    passMap : {'0':'不通过','1':'通过'}
})('automaticTaskListCtrl', ['$scope', 'myAjaxData','$ocLazyLoad'], ($scope, myAjaxData,$ocLazyLoad) => {

    $scope.baseUrl = window.baseUrl
    const wxuser = localStorage.getItem("wxuser") ? JSON.parse(localStorage.getItem("wxuser")) : null
    if(wxuser){
        $scope.authType = wxuser.authType
    }
    $ocLazyLoad.load([
        "http://api.map.baidu.com/api?v=2.0&ak=aBsOf0A0mp32b7M6A15dvByz"
    ]).then(()=>{
        //获取电站列表
        $scope.stationsPosition.getData({
        }).then(res =>{
            if(res.code == 0){
                $scope.stationList = res.body
                $scope.stationList.selected = $scope.stationList[0]
            }
        })
    })

    $scope.getStatus = sta =>{
        return myAjaxData.config.statusMap[sta]
    }
    
    //删除任务
    $('#result_table').on('click','.delete-task', function () {
        if(confirm("确定废除此任务？")){
            let id = $(this).attr("id")
            $scope.taskDoInvalid.getData({
                'id':id,
            }).then(res =>{
                if(res.code == 0){
                    $scope.pageList.getData({
                        pageIndex:0,
                        pageSize:10
                    })
                }else{
                    alert(res.msg)
                }
            })
        }
        
    })
})