app.directive('contentLeftDa', ['$timeout', 'myAjaxData', ($timeout, myAjaxData) => {
    return {
        restrict: 'E',
        template: $('#content-left2').html(),
        replace: !1,
        scope: {
            timeType:'=',
            pageList: '=',
            detail: '=',
            deviceType: '='
        },

        link ($scope, $element, $attrs) {
            $scope.setTableHeight()
            window.addEventListener('resize', () => {
                $scope.setTableHeight()
                $scope.$apply()
            })
        },

        controller ($scope, $element) {
            /**
             * 设置列表可滚动高度
             * @return {[type]} [description]
             */
            $scope.setTableHeight = () => {
                let windowHeight = window.innerHeight
                $(".content-body .content-right").height(do {
                    if ( (windowHeight - 100) < 700 ) 700
                    else windowHeight - 100
                })
                $scope.tableScrollY = do {
                    if ( (windowHeight - 275) < 525 ) 525
                    else windowHeight - 275
                }
            }

            /**
             * 根据设备类型获取  设备名
             * @param  {[type]} i [description]
             * @return {[type]}   [description]
             */
            $scope.getDeviceName = async (i) => {
                $scope.deviceName = ''
                if (i < 0) {
                    return $scope.deviceNames = []
                }
                    
                $scope.deviceNames = await myAjaxData.getData({
                    name: myAjaxData.config.url[i],
                    data: {}
                })
                $scope.$apply()
            }

            /**
             * 根据条件搜索列表
             * @return {[type]} [description]
             */
            $scope.search = () => {
                $scope.pageList.getData({
                    //stId:'3013',
                    deviceId: $scope.deviceName, 
                    deviceType: $scope.deviceTypeVal, 
                    pageIndex: 0
                })
            }

            let activeIndex = 0

            /**
             * [loadDetail 加载详情]
             */
            $scope.loadDetail = async (data: Object, index = 0) => {
                activeIndex = index
                if (!data) {
                    $scope.detail.res = null
                    return $scope.detail.isLoding = !1
                }
                await $scope.detail.getData({
                    //stId:'3013',
                    id: data._id,
                    deviceId :data.eqid,
                    timeType :$scope.timeType,                    
                    currDate : data.dtime
                })
                $($element).find('tbody tr').removeClass('active').eq(index).addClass('active')
            }

            /**
             * [监听数据改变之后   处理当前选中  and  选中状态样式]
             */
            $scope.$watch('pageList', (newValue, oldValue) => {
                if (void 0 === newValue.res) return
                if(!newValue.res.body.data) return
                if (void 0 === newValue.res.body.data[0]) return $scope.loadDetail()
                const _newValue = newValue.res.body.data
                $($element).find('tbody tr').removeClass('active')
                if (oldValue.res) {
                    const _oldValue = oldValue.res.body.data
                    for (let i = 0, len = _newValue.length; i < len; i++) {
                        if(!_oldValue) continue
                        if (_oldValue[activeIndex] && _newValue[i].eqid == _oldValue[activeIndex].eqid) {
                            $($element).find('tbody tr').eq(i).addClass('active')
                            return activeIndex = i
                        }
                    }
                }                
                activeIndex = 0
                $scope.loadDetail(_newValue[0])
            }, !0)

            $scope.$watch('timeType',(newValue,oldValue) =>{

                if(newValue != oldValue)  $scope.loadDetail($scope.pageList.res.body.data[0])
            })

            /**
             * [column table列]
             * @type {Array}
             */
            $scope.column = [
                {
                    title: '设备',
                    dataIndex: 'eq_name',
                    width: '20%',
                    sort: true
                }, {
                    title: '时间',
                    dataIndex: 'dtime',
                    width: '25%',
                    align: 'center',
                    sort: true
                }, {
                    title: '年衰减率',
                    dataIndex: 'decay_r_year',
                    width: '25%',
                    align: 'right',
                    sort: true,
                    render(text, record, index) {
                        if (!text) {
                             return '-'                     
                        }
                    }
                }, {
                    title: '累计衰减率',
                    dataIndex: 'decay_r_all',
                    width: '30%',
                    align: 'right',
                    sort: true,
                    render(text, record, index) {
                        if (!text) {
                             return '-'                     
                        }
                    }
                }
            ]


            /**
             * 监听电站切换  或  其他  引起的设备类型改变，重新初始化设备类型跟设备
             * @param  {[type]} 'deviceType' [description]
             * @param  {[type]} (async       (newValue,    oldValue [description]
             * @return {[type]}              [description]
             */
            $scope.$watch('deviceType', (async (newValue, oldValue) => {
                await myAjaxData.timeout(0)
                $scope.deviceTypeVal = ''
                $scope.deviceName = ''
                $scope.deviceNames = []
                $scope.$apply()
            }), !0)

            /**
             * [默认显示第一条详情]
             * @param  {[type]} ) 
             */
            ;(async () => {
                await $scope.pageList.promise
                await myAjaxData.timeout(0)
                if(!$scope.pageList.res.body.data) return $scope.loadDetail(false)
                $scope.loadDetail($scope.pageList.res.body.data[0])
            })()
        }
    }
}])


app.directive('chartDa1', ['$timeout', 'myAjaxData', ($timeout, myAjaxData) => {
        return{
        restrict: 'E',
        scope: {
            detail: '='
        },
        link($scope, $element, $attrs) {
            $scope.$watch("detail", (newValue, oldValue) => {
                if(newValue.res) renderChart(newValue.res.body.shd_trend_line)
　　　　　　 }, true)
            const setWidthHeight = () => {
                $($element).width(do {
                    if ((window.innerWidth - 535) < 800) 800
                    else window.innerWidth - 535
                } + 'px')
            }
            setWidthHeight()
            let myChart = echarts.init($element[0])
            function renderChart(data) {
                let option = {
                    tooltip : {
                        
                    },
                    legend: {
                        data:['趋势', '功率']
                    },
                    grid: {
                        top: '40',
                        left: '20',
                        right: '60',
                        bottom: '20',
                        containLabel: true
                    },
                    xAxis: {
                        name: '点数',
                        boundaryGap: false,
                        data:data.shd_trend_x
                    },
                    yAxis: {
                        name: '功率/趋势',
                        splitNumber: 2,
                        splitLine: {
                            show: false
                        },
                    },
                    series: [{
                        name: '功率',
                        type: 'line',
                        data:data.shd_trend_y1,
                        itemStyle: {
                            normal: {
                                color: '#35a6ff'
                            }
                        }
                    },{
                        name: '趋势',
                        type: 'line',
                        symbol: 'none',
                        data: data.shd_trend_y2,
                        itemStyle: {
                            normal: {
                                color: '#ffae00'
                            }
                        }
                    }]
                }
                
                myChart.setOption(option)
            }
            window.addEventListener('resize', () => {
                setWidthHeight()
                myChart.resize()
            })
        },

        controller ($scope) {
        }
    }
}])

app.directive('chartDa2', ['$timeout', 'myAjaxData', ($timeout, myAjaxData) => {
    return{
        restrict: 'E',
        scope: {
            detail: '='
        },

        link ($scope, $element, $attrs) {
            $scope.$watch("detail", (newValue, oldValue) => {
　　　　　　　　if(newValue.res)  renderChart(newValue.res.body.dust_line)
　　　　　　}, true)
            const setWidthHeight = () => {
                $($element).width(do {
                    if ((window.innerWidth - 535) < 800) 800
                    else window.innerWidth - 535
                } + 'px')
            }
            setWidthHeight()
            let myChart = echarts.init($element[0])
            function renderChart(data) {
                let option = {
                    color: ['#999'],
                    tooltip : {
                        trigger: 'axis',
                    },
                    grid: {
                        top: '40',
                        left: '20',
                        right: '60',
                        bottom: '20',
                        containLabel: true
                    },
                    xAxis : [
                        {
                            name: '点数',
                            type : 'category',
                            data :data.dust_x
                        }
                    ],
                    yAxis : [
                        {
                            name: '灰尘影响率',
                            splitLine: {
                                show: false
                            },
                            type : 'value'
                        }
                    ],
                    series : [
                        {
                            name:'灰尘影响率',
                            type:'bar',
                            barWidth: '1',
                            data: data.dust_y
                        }
                    ]
                }
                myChart.setOption(option)
            }
            window.addEventListener('resize', () => {
                setWidthHeight()
                myChart.resize()
            })
        },

        controller ($scope) {
        }
    }
}])


app.directive('chartDa3', ['$timeout', 'myAjaxData', ($timeout, myAjaxData) => {
        return{
        restrict: 'E',
        scope: {
            detail: '='
        },
        link($scope, $element, $attrs) {
            $scope.$watch("detail", (newValue, oldValue) => {
　　　　　　　　if(newValue.res) renderChart(newValue.res.body.decay_line)
　　　　　　}, true)

            const setWidthHeight = () => {
                $($element).width(do {
                    if ((window.innerWidth - 535) < 800) 800
                    else window.innerWidth - 535
                } + 'px')
                .height( do {
                    if((window.innerHeight - 420) < 225) 225
                    else window.innerHeight - 420
                } + 'px')
            }
            const myChart = echarts.init($element[0])

            function renderChart(data) {
                let option = {
                    grid: {
                        top: '40',
                        left: '20',
                        right: '60',
                        bottom: '20',
                        containLabel: true
                    },
                    xAxis: {
                        name: '点数',
                        boundaryGap: false,
                        data: data.decay_x
                    },
                    yAxis: {
                        name: '衰减率',
                        splitNumber: 2,
                        splitLine: {
                            show: false
                        },
                    },
                    series: [{
                        name: '功率',
                        type: 'line',
                        data:data.decay_y,
                        itemStyle: {
                            normal: {
                                color: '#f94050'
                            }
                        }
                    }]
                }
                
                myChart.setOption(option)
            }
            window.addEventListener('resize', () => {
                $($element).width(window.innerWidth - 200 - 315 - 20 + 'px')
                myChart.resize()
            })
        },

        controller ($scope) {
        }
    }
}])

ajaxData({
        pageList: {
            name: 'GETInverterAttenuationPage',
            data: {
                pageIndex:0,
                pageSize:10
            }
        },
        detail: {
            name: 'GETInverterAttenuationLine',
            later: true
        },
        deviceType: {
            name: 'GETgetDeviceType',
            data: {}
        }
},{
    //设备查询地址
    url: [ "GETgetJunctionBox", "GETgetInverter", "GETgetBoxchange", "GETgetAmmeter", "GETgetAerograph" ]
})('deviceAttenuationCtrl', ['$scope', 'myAjaxData', '$timeout'], ($scope, myAjaxData, $timeout) => {
    $scope.timeType = 'YEAR';
    $scope.changeTimeType = type =>{
        $scope.timeType = type
    }
})