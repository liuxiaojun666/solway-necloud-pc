app.directive('contentLeft6', ['myAjaxData', myAjaxData => {
    return {
        restrict: 'E',
        template: $('#content-left').html(),
        replace: true,
        scope: {
            pageList: '=',
            detail: '=',
            warning: '=',
            deviceType: '='
        },

        link($scope, $element, $attrs) {
            $scope.setTableHeight()
            window.addEventListener('resize', () => {
                $scope.setTableHeight()
                $scope.$apply()
            })
        },

        controller($scope, $element) {
            /**
             * 设置列表可滚动高度
             * @return {[type]} [description]
             */
            $scope.setTableHeight = () => {
                let windowHeight = window.innerHeight
                $(".content-body").height(do {
                    if ((windowHeight - 100) < 545) 545
                    else windowHeight - 100
                })
                $scope.tableScrollY = do {
                    if ((windowHeight - 393) < 245) 245
                    else windowHeight - 393
                }
            }

            /**
             * 设置起始时间、结束时间
             * @type {Date}
             */
            $scope.dateTime1 = new Date((new Date).setDate((new Date).getDate() - 7))
            $scope.dateTime2 = new Date

            /**
             * 根据设备类型获取  设备名
             * @param  {[type]} i [description]
             * @return {[type]}   [description]
             */
            $scope.getDeviceName = (async (i) => {
                $scope.deviceName = ''
                if (i < 0) {
                    return $scope.deviceNames = []
                }

                $scope.deviceNames = await myAjaxData.getData({
                    name: myAjaxData.config.url[i],
                    data: {}
                })
                $scope.$apply()
            })(1)

            /**
             * 根据条件搜索列表
             * @return {[type]} [description]
             */
            $scope.search = () => {
                $scope.pageList.getData({
                    deviceId: $scope.deviceName,
                    deviceType: $scope.deviceTypeVal,
                    pageIndex: 0,
                    beginDate: $scope.dateTime1.Format('yyyy-MM-dd'),
                    endDate: $scope.dateTime2.Format('yyyy-MM-dd'),
                    currDate: (new Date).Format('yyyy-MM-dd')
                })
            }

            let activeIndex = 0

            /**
             * [loadDetail 加载详情]
             */
            $scope.loadDetail = async (data, index = 0) => {
                activeIndex = index
                if (!data) {
                    $scope.detail.res = null
                    $scope.detail.isLoding = !1
                    $scope.warning.isLoding = !1
                    return
                }
                $scope.detail.getData({
                    deviceType: $scope.deviceTypeVal,
                    deviceId: data.eqid,
                    id: data._id,
                    currDate: data.dtime
                })
                $scope.warning.getData({
                    deviceType: $scope.deviceTypeVal,
                    deviceId: data.eqid,
                    id: data._id,
                    beginDate: $scope.dateTime1.Format('yyyy-MM-dd'),
                    endDate: $scope.dateTime2.Format('yyyy-MM-dd'),
                    currDate: data.dtime
                })
                await myAjaxData.timeout(0)
                $($element).find('tbody tr').removeClass('active').eq(index).addClass('active')
            }

            /**
             * [监听数据改变之后   处理当前选中  and  选中状态样式]
             */
            $scope.$watch('pageList', (newValue, oldValue) => {
                if (void 0 === newValue.res) return
                if (!newValue.res.body.data) return $scope.loadDetail()
                if (void 0 === newValue.res.body.data[0]) return $scope.loadDetail()
                const _newValue = newValue.res.body.data
                $($element).find('tbody tr').removeClass('active')
                if (oldValue.res) {
                    const _oldValue = oldValue.res.body.data
                    for (let i = 0, len = _newValue.length; i < len; i++) {
                        if (!_oldValue) continue
                        if (_oldValue[activeIndex] && _newValue[i]._id == _oldValue[activeIndex]._id) {
                            $($element).find('tbody tr').eq(i).addClass('active')
                            return activeIndex = i
                        }
                    }
                }
                activeIndex = 0
                $scope.loadDetail(_newValue[0])
            }, !0)

            /**
             * [column table列]
             * @type {Array}
             */
            $scope.column = [{
                title: '设备',
                dataIndex: 'eq_name',
                width: '25%',
                sort: !0,
                align: 'center'
            }, {
                title: '时间',
                dataIndex: 'dtime',
                width: '25%',
                align: 'center',
                sort: !0,
            }, {
                title: '异常次数',
                dataIndex: 'volt_extime',
                width: '25%',
                align: 'right',
                sort: !0,
                render(text) {
                    return text + ''
                }
            }, {
                title: '超限次数',
                dataIndex: 'volt_overtime',
                width: '25%',
                align: 'right',
                sort: !0,
                render(text) {
                    return text + ''
                }
            }];

            /**
             * 监听电站切换  或  其他  引起的设备类型改变，重新初始化设备类型跟设备
             * @param  {[type]} 'deviceType' [description]
             * @param  {[type]} (async       (newValue,    oldValue [description]
             * @return {[type]}              [description]
             */
            $scope.$watch('deviceType', (async (newValue, oldValue) => {
                await myAjaxData.timeout(0)
                $scope.deviceTypeVal = '2'
                $scope.deviceName = ''
                $scope.deviceNames = []
                $scope.$apply()
            }), !0)

                /**
                 * [默认显示第一条详情]
                 * @param  {[type]} ) 
                 */
                ; (async () => {
                    await $scope.pageList.promise
                    await myAjaxData.timeout(0)
                    // $scope.loadDetail($scope.pageList.res.body.data[0])
                })()
        }
    }
}])

ajaxData({
    pageList: {
        name: 'GETdeviceVoltPage',
        data: {
            pageIndex: 0,
            pageSize: 10,
            deviceType: '2',
            beginDate: new Date(new Date().setDate(new Date().getDate() - 7)).Format('yyyy-MM-dd'),
            endDate: new Date().Format('yyyy-MM-dd'),
            currDate: new Date().Format('yyyy-MM-dd')
        }
    },
    detail: {
        name: 'GETdeviceVoltline',
        later: !0
    },
    warning: {
        name: 'GETdeviceVoltlineWarning',
        later: !0
    },
    deviceType: {
        name: 'GETgetDeviceType',
        data: {}
    }
}, {
        url: ["GETgetJunctionBox", "GETgetInverter", "GETgetBoxchange", "GETgetAmmeter", "GETgetAerograph"],
        yName: '电压(V)',
        lineName: ['设备电压', '平均电压'],
        dataType: '2'
    })('inverterVoltageAnomalyCtrl', ['$scope', 'myAjaxData'], ($scope, myAjaxData) => {
        const getWindowHeight = () => {
            $scope.windowHeight = document.body.clientHeight
            $scope.windowWidth = document.body.clientWidth
            $scope.$apply()
        }
        setTimeout(getWindowHeight, 0);
        window.addEventListener('resize', getWindowHeight)
        $scope.$on('$destroy', () => window.removeEventListener('resize', getWindowHeight))
    });