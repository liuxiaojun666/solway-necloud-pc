ajaxData({
    ...[
        {
            name: 'repairCount',
            apiName: 'GETrepairCount',
        },
        {
            name: 'repairHours',
            apiName: 'GETrepairHours',
            later: true
        },
        {
            name: 'repairSuccessRate',
            apiName: 'GETrepairSuccessRate',
            later: true
        },
        {
            name: 'repairRespHours',
            apiName: 'GETrepairRespHours',
            later: true
        },
        {
            name: 'repairNum',
            apiName: 'GETrepairNum',
            later: true
        }
    ].map(v => ({
        [v.name]: {
            name: v.apiName,
            data: {
                powerType: 'PV',
                idType: 1,
                timeType: 'ACCUM',
                dateStr: (new Date).Format('yyyy-MM-dd')
            },
            later: v.later
        }
    })).reduce((obj, cur) => ({ ...obj, ...cur })),
    province: {
        name: 'POSTSelectProvince',
        data: {
            parentId: 1,
            treeLevel: 1
        }
    },
    repairTotal: {
        name: 'GETrepairTotal',
        data: {
            powerType: 'PV',
            idType: '1',
            timeType: 'ACCUM',
            dateStr: (new Date).Format('yyyy-MM-dd')
        }
    },
})('equipmentBrandCtrl', ['$scope', 'myAjaxData'], ($scope, myAjaxData) => {
    $scope.dateTime1 = new Date; //选择月日期
    $scope.dateTime2 = new Date; //选择年日期
    $scope.timeType = 'ACCUM';   //默认查累计
    $scope.idType = 1;           //默认范围 集团  1:集团|2:省份|3:电站
    $scope.ids = null;           //默认集团 不传ids 
    $scope.currDataType = 'FAULTRATE'; //默认查询检修台次
    $scope.allDataType = {       //所有查询类型
        FAULTRATE: '故障率',
        MTBF: 'MTBF',
        MTTR: 'MTTR',
        DEVICECOUNT: '检修台次',
    };

    // 所有省份  + 集团
    $scope.province.promise.then(res => $scope.allIds = res.map(v => ({ [v.id]: v.regionName })).reduce((obj, cur) => ({ ...obj, ...cur }), { 1: '集团' }));


    // 改变时间维度 执行 func update all data
    $scope.changeTimeType = value => {
        if ($scope.timeType === value) return;
        const timeType = $scope.timeType = value;
    };




    const getWindowHeight = () => {
        $scope.windowHeight = document.body.clientHeight;
        $scope.windowWidth = document.body.clientWidth;
        $scope.$apply();
    };
    setTimeout(getWindowHeight, 0);
    window.addEventListener('resize', getWindowHeight);
    $scope.$on('$destroy', () => window.removeEventListener('resize', getWindowHeight));
    
})