app.directive('wpoMap', ['myAjaxData', '$ocLazyLoad', (myAjaxData, $ocLazyLoad) => ({
    restrict: 'E',
    scope: {
        name: '=',
        data: '=',
        allIds: '=',
        ids: '='
    },

    link($scope, $element, $attrs) {
        const filterName = v => {
            let name = v.replace("省", "");
            name = name.replace("壮族自治区", "");
            name = name.replace("回族自治区", "");
            name = name.replace("维吾尔自治区", "");
            name = name.replace("特别行政区", "");
            name = name.replace("自治区", "");
            return name;
        };
        const setWidthHeight = () => {
            $($element).width(((window.innerWidth - 630) < 300) ? 300 : window.innerWidth - 630)
                .height(((window.innerHeight - 145) < 470) ? 470 : window.innerHeight - 145);
        };
        setWidthHeight();
        const myChart = echarts.init($element[0]);
        window.addEventListener('resize', () => {
            setWidthHeight();
            myChart.resize();
        });
        $ocLazyLoad.load([
            window.baseUrl + '/vendor/echarts/china.js',
        ]).then(() => {
            $scope.$watch('data', (newValue, oldValue) => {
                if (!newValue) return
                let total = null;
                const data = $scope.data.names.map((v, i) => {
                    const value = $scope.data.values[i];
                    if (!Object.is(null, value)) total += value;
                    return {
                        name: filterName(v),
                        value
                    };
                });
                data.push({
                    name: filterName($scope.allIds[$scope.ids] || '中国'),
                    value: total
                });
                const option = {
                    tooltip: {
                        trigger: 'item',
                    },
                    series: [{
                        name: $scope.name,
                        type: 'map',
                        mapType: 'china',
                        roam: true,
                        label: {
                            emphasis: {
                                show: false
                            }
                        },
                        itemStyle: {
                            normal: {
                                borderWidth: .5,//区域边框宽度
                                borderColor: '#fff',//区域边框颜色
                                areaColor: "#60b4a4",//区域颜色
                            },
                            emphasis: {
                                borderWidth: .5,//区域边框宽度
                                borderColor: '#fff',//区域边框颜色
                                areaColor: "#60b4a4",//区域颜色
                            }
                        },
                        data: [
                            ...data.map(v => ({
                                name: v.name,
                                value: v.value,
                                selected: false,
                                itemStyle: {
                                    normal: {
                                        areaColor: "#20668e",//区域颜色
                                    },
                                    emphasis: {
                                        areaColor: "#20668e",//区域颜色
                                    }
                                },
                                label: {
                                    normal: {
                                        formatter() {
                                            return v.value
                                        },
                                        show: true,
                                        textStyle: {
                                            color: '#fff',
                                            fontSize: 9,
                                        }
                                    }
                                },
                            })),
                            {
                                name: '南海诸岛',
                                itemStyle: {
                                    normal: {
                                        opacity: 0
                                    }
                                },
                                label: {
                                    normal: {
                                        show: false
                                    }
                                }
                            }
                        ],
                        zlevel: 3
                    }]
                };
                myChart.setOption(option, true);
            });
        });
    }
})]);

ajaxData({
    ...[
        {
            name: 'repairCount',
            apiName: 'GETrepairCount',
        },
        {
            name: 'repairHours',
            apiName: 'GETrepairHours',
            later: true
        },
        {
            name: 'repairSuccessRate',
            apiName: 'GETrepairSuccessRate',
            later: true
        },
        {
            name: 'repairRespHours',
            apiName: 'GETrepairRespHours',
            later: true
        },
        {
            name: 'repairNum',
            apiName: 'GETrepairNum',
            later: true
        }
    ].map(v => ({
        [v.name]: {
            name: v.apiName,
            data: {
                powerType: (window.location.hash.includes('pv') ? 'PV' : 'WP'),
                idType: 1,
                timeType: 'ACCUM',
                dateStr: (new Date).Format('yyyy-MM-dd')
            },
            later: v.later
        }
    })).reduce((obj, cur) => ({ ...obj, ...cur })),
    province: {
        name: 'POSTSelectProvince',
        data: {
            parentId: 1,
            treeLevel: 1
        }
    },
    repairTotal: {
        name: 'GETrepairTotal',
        data: {
            powerType: (window.location.hash.includes('pv') ? 'PV' : 'WP'),
            idType: '1',
            timeType: 'ACCUM',
            dateStr: (new Date).Format('yyyy-MM-dd')
        }
    },
}, {
    })('windPowerOperationsCtrl', ['$scope', 'myAjaxData'], ($scope, myAjaxData) => {
        $scope.dateTime1 = new Date; //选择月日期
        $scope.dateTime2 = new Date; //选择年日期
        $scope.timeType = 'ACCUM';   //默认查累计
        $scope.idType = 1;           //默认范围 集团  1:集团|2:省份|3:电站
        $scope.ids = null;           //默认集团 不传ids 
        $scope.currDataType = 'repairCount'; //默认查询检修台次
        $scope.allDataType = {       //所有查询类型
            repairCount: '检修台次',
            repairHours: '检修时间',
            repairSuccessRate: '检修成功率',
            repairRespHours: '检修响应时间',
            repairNum: '检修台数',
        };

        // 所有省份  + 集团
        $scope.province.promise.then(res => $scope.allIds = res.map(v => ({ [v.id]: v.regionName })).reduce((obj, cur) => ({ ...obj, ...cur }), { 1: '集团' }));

        $scope.repairCount.promise.then(res => $scope.rankingData = res.body)
        // 改变  范围 执行 函数  重新请求 数据 汇总
        $scope.changeIds = value => {
            if (value === $scope.ids) return;
            const isJT = value == 1; // 选择的是否是集团
            const idType = $scope.idType = isJT ? 1 : 2;
            const ids = $scope.ids = isJT ? null : value;
            $scope.repairTotal.getData({ idType, ids });
            $scope[$scope.currDataType].getData({ idType, ids }).then(res => $scope.rankingData = res.body);
        };


        // 改变时间维度 执行 func update all data
        $scope.changeTimeType = value => {
            if ($scope.timeType === value) return;
            const timeType = $scope.timeType = value;
            const dateStr = getDateStr();
            $scope.dateStr = dateStr;
            $scope.repairTotal.getData({ timeType, dateStr });
            $scope[$scope.currDataType].getData({ timeType, dateStr }).then(res => $scope.rankingData = res.body);
        };

        // 改变查询时间  执行函数 
        $scope.changeDateTime = async () => {
            await myAjaxData.timeout(0);
            const dateStr = getDateStr();
            if (dateStr === $scope.dateStr) return;
            $scope.dateStr = dateStr;
            $scope.repairTotal.getData({ dateStr });
            $scope[$scope.currDataType].getData({ dateStr }).then(res => $scope.rankingData = res.body);
        };


        // 改变 查询类型  执行 函数 重新请求  类型 排名
        $scope.changeDataType = value => {
            if (value === $scope.currDataType) return;
            $scope.currDataType = value;
            const { idType, ids, timeType, currDataType } = $scope;
            $scope[currDataType].getData({
                powerType: (window.location.hash.includes('pv') ? 'PV' : 'WP'),
                idType,
                ids,
                timeType,
                dateStr: getDateStr()
            }).then(res => $scope.rankingData = res.body);
        };

        // 根据时间维度  判断 需要 使用的 时间 字符串
        function getDateStr() {
            if ($scope.timeType === 'MONTH') return $scope.dateTime1.Format('yyyy-MM-dd');
            if ($scope.timeType === 'YEAR') return $scope.dateTime2.Format('yyyy-MM-dd');
            return (new Date).Format('yyyy-MM-dd');
        }

        const getWindowHeight = () => {
            $scope.windowHeight = document.body.clientHeight;
            $scope.windowWidth = document.body.clientWidth;
            $scope.$apply();
        };
        setTimeout(getWindowHeight, 0);
        window.addEventListener('resize', getWindowHeight);
        $scope.$on('$destroy', () => window.removeEventListener('resize', getWindowHeight));
    });