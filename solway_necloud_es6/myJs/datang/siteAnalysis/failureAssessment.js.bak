app.directive('contentLeftFa', ['myAjaxData', '$timeout', (myAjaxData, $timeout) => {
    return {
        restrict: 'E',
        template: $('#content-left').html(),
        replace: true,
        scope: {
            pageList: '=',
            detail: '=',
            datasource2:'=',
            deviceType: '='
        },

        link ($scope, $element, $attrs) {
            $timeout(() => $scope.setTableHeight(), 0)
            window.addEventListener('resize', () => {
                $scope.setTableHeight()
                $scope.$apply()
            })
        },

        controller ($scope, $element) {
            /**
             * 设置列表可滚动高度
             * @return {[type]} [description]
             */
            $scope.setTableHeight = () => {
                const windowHeight = window.innerHeight
                $(".content-body").height(do {
                    if ( (windowHeight - 100) < 545 ) 545
                    else windowHeight - 100
                })
                $scope.tableScrollY = do {
                    if ( (windowHeight - 393) < 245 ) 245
                    else windowHeight - 393
                }
            }

            /**
             * 设置起始时间、结束时间
             * @type {Date}
             */
            $scope.dateTime1 = new Date((new Date).setDate((new Date).getDate() - 7))
            $scope.dateTime2 = new Date

            /**
             * 根据设备类型获取  设备名
             * @param  {[type]} i [description]
             * @return {[type]}   [description]
             */
            $scope.getDeviceName = async (i) => {
                $scope.deviceName = ''
                if (i < 0) return $scope.deviceNames = []
                $scope.deviceNames = await myAjaxData.getData({
                    name: myAjaxData.config.url[i],
                    data: {}
                })
                $scope.$apply()
            }

            /**
             * 根据条件搜索列表
             * @return {[type]} [description]
             */
            $scope.search = () => {
                $scope.pageList.getData({
                    deviceId: $scope.deviceName, 
                    deviceType: $scope.deviceTypeVal, 
                    pageIndex: 0,
                    beginDate: $scope.dateTime1.Format('yyyy-MM-dd'),
                    endDate: $scope.dateTime2.Format('yyyy-MM-dd')
                })
            }

            let activeIndex = 0

            /**
             * [loadDetail 加载详情]
             */
            $scope.loadDetail = async (data: Object, index = 0) => {
                activeIndex = index
                if (!data) {
                    $scope.detail.res = null
                    return $scope.detail.isLoding = !1
                }
                await $scope.detail.getData({
                    id: data._id,
                    deviceId :data.eqid,                    
                    currDate : data.dtime
                })
                $scope.datasource2 = [
                    {
                        guzhang: $scope.detail.res.body.fail_r_score+"",
                        MTTR: $scope.detail.res.body.mttr_score+"",
                        MTBF:$scope.detail.res.body.mtbf_score+""
                    },{
                        guzhang:$scope.detail.res.body.fail_r_avg_score+"",
                        MTTR: $scope.detail.res.body.mttr_avg_score+"",
                        MTBF:$scope.detail.res.body.mtbf_avg_score+""
                    }
                ]
                $($element).find('tbody tr').removeClass('active').eq(index).addClass('active')
            }

            /**
             * [监听数据改变之后   处理当前选中  and  选中状态样式]
             */
            $scope.$watch('pageList', (newValue, oldValue) => {
                if (void 0 === newValue.res) return
                if(!newValue.res.body.data) return
                if (void 0 === newValue.res.body.data[0]) return $scope.loadDetail()
                const _newValue = newValue.res.body.data
                $($element).find('tbody tr').removeClass('active')
                if (oldValue.res) {
                    const _oldValue = oldValue.res.body.data
                    for (let i = 0, len = _newValue.length; i < len; i++) {
                        if(!_oldValue) continue
                        if (_oldValue[activeIndex] && _newValue[i].eqid == _oldValue[activeIndex].eqid) {
                            $($element).find('tbody tr').eq(i).addClass('active')
                            return activeIndex = i
                        }
                    }
                }                
                activeIndex = 0
                $scope.loadDetail(_newValue[0])
            }, !0)

            /**
             * [column table列]
             * @type {Array}
             */
            $scope.column = [
                {
                    title: '设备名称',
                    dataIndex: 'eq_name',
                    width: '35%',
                    align: 'center',
                    sort: true
                }, {
                    title: '时间',
                    dataIndex: 'dtime',
                    width: '35%',
                    align: 'center',
                    sort: true
                }, {
                    title: '综合评分',
                    dataIndex: 'comp_score',
                    width: '30%',
                    align: 'right',
                    sort: true,
                    render(value){
                        if(value) return value+""
                        return "-"
                    }
                }
            ]

            /**
             * 监听电站切换  或  其他  引起的设备类型改变，重新初始化设备类型跟设备
             * @param  {[type]} 'deviceType' [description]
             * @param  {[type]} (async       (newValue,    oldValue [description]
             * @return {[type]}              [description]
             */
            $scope.$watch('deviceType', (async (newValue, oldValue) => {
                await myAjaxData.timeout(0)
                $scope.deviceTypeVal = ''
                $scope.deviceName = ''
                $scope.deviceNames = []
                $scope.$apply()
            }), !0)

            /**
             * [默认显示第一条详情]
             * @param  {[type]} ) 
             */
            ;(async () => {
                await $scope.pageList.promise
                await myAjaxData.timeout(0)
                if(!$scope.pageList.res.body.data) return $scope.loadDetail(false)
                $scope.loadDetail($scope.pageList.res.body.data[0])
            })()
        }
    }
}])

app.directive('faRate', [() => {
    return {
        restrict: 'E',
        template: $('#fa-rate').html(),
        replace: true,
        scope: {
            number: '=',
            title: '=',
            content: '='
        }
    }
}])

app.directive('faChart1', [() => {
    return {
        restrict: 'E',
        scope: {
            detail:"="
        },
        link ($scope, $element) {

            $scope.$watch("detail", (newValue, oldValue) => {
　　　　　　　　  if(newValue.res) renderChart(newValue.res.body)
　　　　　　 }, !0)

            const myChart = echarts.init($element[0])
            const renderChart = (data) => {
                const option = {
                    tooltip: {},
                    legend: {
                        data: ['自身', '设备平均']
                    },
                    radar: {
                        indicator: [
                           { name: '故障率'},
                           { name: 'MTBF'},
                           { name: 'MTTR'}
                        ],
                        center: ['50%', '60%']
                    },
                    color: ['#60cfe7', '#efc74f'],
                    series: [{
                        type: 'radar',
                        itemStyle: {normal: {areaStyle: {type: 'default'}}},
                        data : [
                            {
                                value : [data.fail_r_score, data.mtbf_score, data.mttr_score],
                                name: '自身'
                            },
                             {
                                value : [data.fail_r_avg_score, data.mtbf_avg_score, data.mttr_avg_score],
                                name : '设备平均'
                            }
                        ]
                    }]
                }
                myChart.setOption(option)
            }

            window.addEventListener('resize', () => {
                myChart.resize()
            })
        }
    }
}])

ajaxData({
        pageList: {
            name: 'GETFailureAssessmentPage',
            data: {
                pageIndex:0,
                pageSize:10,
                beginDate: new Date((new Date).setDate((new Date).getDate() - 7)).Format('yyyy-MM-dd'),
                endDate: (new Date).Format('yyyy-MM-dd')
            }
        },
        detail: {
            name: 'GETFailureAssessmentDetail',
            later: true
        },
        deviceType: {
            name: 'GETgetDeviceType',
            data: {}
        }
},{
    //设备查询地址
    url: [ "GETgetJunctionBox", "GETgetInverter", "GETgetBoxchange", "GETgetAmmeter", "GETgetAerograph" ]
})('failureAssessmentCtrl', ['$scope', 'myAjaxData'], ($scope, myAjaxData) => {

    const setWidthHeight = () =>{
        const windowHeight = window.innerHeight
        $('.fa-right-bottom tr').height(do {
            if ( (windowHeight - 430) < 220 ) 220/3
            else (windowHeight - 430)/3
        })
    }
    $scope.updatedMounted = (scope, element) => {
        setWidthHeight()   
    }

    $scope.tableMounted = (scope, element) =>{
        window.addEventListener('resize', setWidthHeight)
    }

    $scope.tableDestroy = (scope, element) =>{
        scope.beforeDestroy = () => window.removeEventListener('resize', setWidthHeight)
    }

    $scope.column2 = [
        {
            title: '',
            dataIndex: '',
            width: '25%',
            align: 'left',
            render (text, record, index) {
                return ['自身', '平均设备'][index]
            }
        },{
            title: 'MTTR',
            dataIndex: 'MTTR',
            width: '25%',
            align: 'center'
        },{
            title: 'MTBF',
            dataIndex: 'MTBF',
            width: '25%',
            align: 'center'
        },{
            title: '故障',
            dataIndex: 'guzhang',
            width: '25%',
            align: 'center'
        },
    ]

})