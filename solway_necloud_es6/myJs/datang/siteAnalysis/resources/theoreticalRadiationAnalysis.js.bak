app.directive('traColorBlock', ['myAjaxData', myAjaxData => ({
    restrict: 'E',
    template: $('#color-block').html(),
    replace: true,
    scope: {
        title: "@",
        background: '@',
        num: '@',
        company: '@',
        help: '@'
    },
    link ($scope, $element) {
        $element.find('i.icon')
        debugger
    }
})])

app.directive('traChart', ['myAjaxData', (myAjaxData) => ({
    restrict: 'E',
    scope: {
        detail: '='
    },

    link ($scope, $element, $attrs) {
        const setWidthHeight = () => {
            $($element).width( ((window.innerWidth - 220) < 800) ? 800 : window.innerWidth - 220)
                    .height( ((window.innerHeight - 300) < 300) ? 300 : window.innerHeight - 300)
        }
        setWidthHeight()
        const myChart = echarts.init($element[0])
        window.addEventListener('resize', () => {
            setWidthHeight()
            myChart.resize()
        })

        const renderChart = resData => {
            const legend = ['理论辐射小时数', '实际辐射小时数', '实际发电小时数']
            const option = {
                color: ['#2cc6ff'],
                tooltip: {
                    trigger: 'axis',
                },
                legend: {
                    data: [{name: '理论辐射小时数'}, {name: '实际辐射小时数'}, {name: '实际发电小时数'}, {name: '光效比'}, {name: '能效比'}],
                    itemWidth: 25,
                    itemGap: 40,
                    height: 15,
                    left: 40,
                    top: 20
                },
                grid: {
                    top: '80',
                    left: '20',
                    right: '20',
                    bottom: '20',
                    containLabel: true
                },
                xAxis: [
                    {
                        name: '',
                        type : 'category',
                        axisLine : {
                            lineStyle : {
                                color : '#a4a4a4',
                                width : 1
                            }
                        },
                        data : Array.apply(null, { length: 12 }).map((v, i) => i + 1 + '')
                    }
                ],
                yAxis : [
                    {
                        name: 'h',
                        type : 'value',
                        axisLine : {
                            lineStyle : {
                                color : '#a4a4a4',
                                width : 1
                            }
                        },
                        axisTick:{
                            show:false
                        },
                        splitLine: {
                            show: false
                        }
                    },{
                        name: '能效比/光效比',
                        type : 'value',
                        axisLine : {
                            lineStyle : {
                                color : '#a4a4a4',
                                width : 1
                            }
                        },
                        axisTick:{
                            show:false
                        },
                        splitLine: {
                            show: false
                        }
                    }
                ],
                series : [
                    ...legend.map((v, i) => ({
                        name: v,
                        type:'bar',
                        barWidth: '20',
                        yAxisIndex: 0,
                        itemStyle: {
                            normal: {
                                color: ['#58c7db', '#5896db', '#3954de'][i]
                            }
                        },
                        data: Array.apply(null, { length: 12 }).map((v, i) => Math.random() * 20)
                    })),
                    {
                        name: '光效比',
                        type: 'line',
                        // smooth: true,
                        symbol: 'circle',
                        yAxisIndex: 1,
                        symbolSize:10,
                        showSymbol: true,
                        itemStyle: {
                            normal: {
                                color: '#22b269',
                            },
                        },
                       data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]
                    },
                      {
                        name: '能效比',
                        type: 'line',
                        // smooth: true,
                        symbol: 'circle',
                        yAxisIndex: 1,
                        symbolSize: 10,
                        showSymbol: true,
                        lineStyle: {
                            normal: {
                                width: 2,
                            }
                        },
                        itemStyle: {
                            normal: {
                                color: '#f39b1e'
                
                            }
                        },
                        data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]
                    }
                ]
            }
            myChart.setOption(option)
        }
        renderChart()
    }
})])


ajaxData({
        pageList: {
            name: 'GETanalysisPage',
            data: {
                pageIndex:0,
                pageSize:10,
                startDate: new Date((new Date).setDate((new Date).getDate() - 7)).Format('yyyy-MM-dd'),
                endDate: (new Date).Format('yyyy-MM-dd')
            }
        },
        detail: {
            name: 'GETselectEqPaintingData',
            later: true
        },
        deviceType: {
            name: 'GETgetDeviceType',
            data: {}
        }
},{
})('theoreticalRadiationAnalysisCtrl', ['$scope', 'myAjaxData'], ($scope, myAjaxData) => {
    $scope.dateTime1 = new Date((new Date).setDate((new Date).getDate() - 7))
    $scope.dateTime2 = new Date
})