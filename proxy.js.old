var express = require('express'),
    request = require('request'),
    bodyParser = require('body-parser'),

    app = express();
app.use(require('cookie-parser')());
var myLimit = typeof (process.argv[2]) != 'undefined' ? process.argv[2] : '100kb';

app.use(bodyParser());
app.use('/api', function (req, res, next) {

    res.header("Access-Control-Allow-Origin", "*");
    res.header("Access-Control-Allow-Methods", "GET, PUT, PATCH, POST, DELETE");
    res.header("Access-Control-Allow-Headers", req.header('access-control-request-headers'));

    if (req.method === 'OPTIONS') {
        res.send();
    } else {
        //读取cookie
        var cookie = require('cookie');
        // var parse = require('./lib/parse');
        // var cookieToJson = function (cookieStr) {
        //     console.log(cookieStr)
        //     let cookieArr = cookieStr.split(";");
        //     let obj = {}
        //     cookieArr.forEach((i) => {
        //         let arr = i.split("=");
        //         obj[arr[0]] = arr[1];
        //     });
        //     return obj
        // }

        var cookies = req.headers.cookie;    //保存对象地址，提高运行效率

        req.cookies = cookie.parse(cookies);    //与express中调用cookie.serialize()对应，解析cookie
        console.log(req.cookies)
        req.cookies = JSON.parse(req.cookies);    // JSON字符序列转化为JSON对象
        console.log(req.cookies['JSESSIONID']);

        var targetURL = 'http://192.168.10.60:88';
        if (!targetURL) {
            res.send(500, { error: 'There is no Target-Endpoint header in the request' });
            return;
        }
        var path = '';
        if (req.url.indexOf('?') <= 0) {
            path = req.url + '?JSESSIONID=' + req.cookies['JSESSIONID'];
        }
        else {
            path = req.url + '&JSESSIONID=' + req.cookies['JSESSIONID'];
        }
        request({ url: targetURL + path, method: req.method, json: req.body, headers: { 'Authorization': '' } },
            function (error, response, body) {
                if (error) {
                    console.error('error: ' + response.statusCode)
                }
            }).pipe(res);
    }
});
app.use(express.static(__dirname + '/'));
//定制404页面
app.use(function (req, res, next) {
    res.status(404);
    res.send();
});
app.set('port', process.env.PORT || 8000);

app.listen(app.get('port'), function () {
    console.log('Proxy server listening on port ' + app.get('port'));
});